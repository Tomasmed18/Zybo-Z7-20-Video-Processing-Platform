-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.3
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity AddWeighted is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    start_full_n : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    start_out : OUT STD_LOGIC;
    start_write : OUT STD_LOGIC;
    src1_data_stream_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    src1_data_stream_V_empty_n : IN STD_LOGIC;
    src1_data_stream_V_read : OUT STD_LOGIC;
    src2_data_stream_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    src2_data_stream_V_empty_n : IN STD_LOGIC;
    src2_data_stream_V_read : OUT STD_LOGIC;
    dst_rows_V_dout : IN STD_LOGIC_VECTOR (11 downto 0);
    dst_rows_V_empty_n : IN STD_LOGIC;
    dst_rows_V_read : OUT STD_LOGIC;
    dst_cols_V_dout : IN STD_LOGIC_VECTOR (11 downto 0);
    dst_cols_V_empty_n : IN STD_LOGIC;
    dst_cols_V_read : OUT STD_LOGIC;
    dst_data_stream_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    dst_data_stream_V_full_n : IN STD_LOGIC;
    dst_data_stream_V_write : OUT STD_LOGIC;
    dst_rows_V_out_din : OUT STD_LOGIC_VECTOR (11 downto 0);
    dst_rows_V_out_full_n : IN STD_LOGIC;
    dst_rows_V_out_write : OUT STD_LOGIC;
    dst_cols_V_out_din : OUT STD_LOGIC_VECTOR (11 downto 0);
    dst_cols_V_out_full_n : IN STD_LOGIC;
    dst_cols_V_out_write : OUT STD_LOGIC );
end;


architecture behav of AddWeighted is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_ST_fsm_state31 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv64_3FE0000000000000 : STD_LOGIC_VECTOR (63 downto 0) := "0011111111100000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_34 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110100";
    constant ap_const_lv32_3E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111110";
    constant ap_const_lv11_7FF : STD_LOGIC_VECTOR (10 downto 0) := "11111111111";
    constant ap_const_lv52_0 : STD_LOGIC_VECTOR (51 downto 0) := "0000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv54_0 : STD_LOGIC_VECTOR (53 downto 0) := "000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv63_0 : STD_LOGIC_VECTOR (62 downto 0) := "000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv12_433 : STD_LOGIC_VECTOR (11 downto 0) := "010000110011";
    constant ap_const_lv12_0 : STD_LOGIC_VECTOR (11 downto 0) := "000000000000";
    constant ap_const_lv11_433 : STD_LOGIC_VECTOR (10 downto 0) := "10000110011";
    constant ap_const_lv12_36 : STD_LOGIC_VECTOR (11 downto 0) := "000000110110";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv12_FFF : STD_LOGIC_VECTOR (11 downto 0) := "111111111111";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv12_8 : STD_LOGIC_VECTOR (11 downto 0) := "000000001000";
    constant ap_const_lv12_9 : STD_LOGIC_VECTOR (11 downto 0) := "000000001001";
    constant ap_const_lv54_3FFFFFFFFFFFFF : STD_LOGIC_VECTOR (53 downto 0) := "111111111111111111111111111111111111111111111111111111";

    signal real_start : STD_LOGIC;
    signal start_once_reg : STD_LOGIC := '0';
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal internal_ap_ready : STD_LOGIC;
    signal src1_data_stream_V_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal exitcond_i_i_reg_1044 : STD_LOGIC_VECTOR (0 downto 0);
    signal src2_data_stream_V_blk_n : STD_LOGIC;
    signal dst_rows_V_blk_n : STD_LOGIC;
    signal dst_cols_V_blk_n : STD_LOGIC;
    signal dst_data_stream_V_blk_n : STD_LOGIC;
    signal ap_enable_reg_pp0_iter27 : STD_LOGIC := '0';
    signal exitcond_i_i_reg_1044_pp0_iter26_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal dst_rows_V_out_blk_n : STD_LOGIC;
    signal dst_cols_V_out_blk_n : STD_LOGIC;
    signal t_V_4_reg_262 : STD_LOGIC_VECTOR (31 downto 0);
    signal rows_V_fu_298_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal rows_V_reg_1025 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal cols_V_fu_302_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal cols_V_reg_1030 : STD_LOGIC_VECTOR (31 downto 0);
    signal exitcond4_i_i_fu_306_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal i_V_fu_311_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_V_reg_1039 : STD_LOGIC_VECTOR (31 downto 0);
    signal exitcond_i_i_fu_317_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state3_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter6 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter7 : BOOLEAN;
    signal ap_block_state11_pp0_stage0_iter8 : BOOLEAN;
    signal ap_block_state12_pp0_stage0_iter9 : BOOLEAN;
    signal ap_block_state13_pp0_stage0_iter10 : BOOLEAN;
    signal ap_block_state14_pp0_stage0_iter11 : BOOLEAN;
    signal ap_block_state15_pp0_stage0_iter12 : BOOLEAN;
    signal ap_block_state16_pp0_stage0_iter13 : BOOLEAN;
    signal ap_block_state17_pp0_stage0_iter14 : BOOLEAN;
    signal ap_block_state18_pp0_stage0_iter15 : BOOLEAN;
    signal ap_block_state19_pp0_stage0_iter16 : BOOLEAN;
    signal ap_block_state20_pp0_stage0_iter17 : BOOLEAN;
    signal ap_block_state21_pp0_stage0_iter18 : BOOLEAN;
    signal ap_block_state22_pp0_stage0_iter19 : BOOLEAN;
    signal ap_block_state23_pp0_stage0_iter20 : BOOLEAN;
    signal ap_block_state24_pp0_stage0_iter21 : BOOLEAN;
    signal ap_block_state25_pp0_stage0_iter22 : BOOLEAN;
    signal ap_block_state26_pp0_stage0_iter23 : BOOLEAN;
    signal ap_block_state27_pp0_stage0_iter24 : BOOLEAN;
    signal ap_block_state28_pp0_stage0_iter25 : BOOLEAN;
    signal ap_block_state29_pp0_stage0_iter26 : BOOLEAN;
    signal ap_block_state30_pp0_stage0_iter27 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal exitcond_i_i_reg_1044_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_i_i_reg_1044_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_i_i_reg_1044_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_i_i_reg_1044_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_i_i_reg_1044_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_i_i_reg_1044_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_i_i_reg_1044_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_i_i_reg_1044_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_i_i_reg_1044_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_i_i_reg_1044_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_i_i_reg_1044_pp0_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_i_i_reg_1044_pp0_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_i_i_reg_1044_pp0_iter13_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_i_i_reg_1044_pp0_iter14_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_i_i_reg_1044_pp0_iter15_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_i_i_reg_1044_pp0_iter16_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_i_i_reg_1044_pp0_iter17_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_i_i_reg_1044_pp0_iter18_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_i_i_reg_1044_pp0_iter19_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_i_i_reg_1044_pp0_iter20_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_i_i_reg_1044_pp0_iter21_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_i_i_reg_1044_pp0_iter22_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_i_i_reg_1044_pp0_iter23_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_i_i_reg_1044_pp0_iter24_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_i_i_reg_1044_pp0_iter25_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal j_V_fu_322_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal tmp_reg_1053 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_91_reg_1058 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_292_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_i_i_103_reg_1073 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_295_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_43_i_i_reg_1078 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_282_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal t1_reg_1083 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_287_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal t2_reg_1088 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_273_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_44_i_i_reg_1093 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_277_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal sum_reg_1098 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_Val2_16_fu_336_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_Val2_16_reg_1103 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_i_i_i_i_fu_353_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i_i_i_i_reg_1108 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i_i_i_i_reg_1108_pp0_iter25_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i_i_i_i_reg_1108_pp0_iter26_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i_i_i_i_104_fu_359_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i_i_i_i_104_reg_1114 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i_i_i_i_104_reg_1114_pp0_iter25_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i_i_i_i_104_reg_1114_pp0_iter26_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_7_reg_1120 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_7_reg_1120_pp0_iter25_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_8_fu_389_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal p_Result_8_reg_1129 : STD_LOGIC_VECTOR (53 downto 0);
    signal man_V_1_fu_393_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal man_V_1_reg_1134 : STD_LOGIC_VECTOR (53 downto 0);
    signal tmp_i_fu_399_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i_reg_1139 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i_reg_1139_pp0_iter25_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i_reg_1139_pp0_iter26_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal F2_fu_405_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal F2_reg_1145 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_1_i_fu_411_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1_i_reg_1153 : STD_LOGIC_VECTOR (0 downto 0);
    signal F2_2_fu_423_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal F2_2_reg_1159 : STD_LOGIC_VECTOR (11 downto 0);
    signal F2_2_reg_1159_pp0_iter25_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_6_i_fu_431_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_6_i_reg_1165 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_6_i_reg_1165_pp0_iter25_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_9_i_fu_437_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_9_i_reg_1172 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_fu_453_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_reg_1177 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_reg_1177_pp0_iter25_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_96_fu_467_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_96_reg_1183 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_9_fu_536_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_9_reg_1189 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_18_fu_548_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_18_reg_1194 : STD_LOGIC_VECTOR (7 downto 0);
    signal sel_tmp2_i_fu_573_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp2_i_reg_1200 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp3_i_fu_578_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp3_i_reg_1205 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp12_demorgan_i_fu_584_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp12_demorgan_i_reg_1210 : STD_LOGIC_VECTOR (0 downto 0);
    signal carry_1_i_i_fu_605_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal carry_1_i_i_reg_1215 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_21_i_fu_629_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_21_i_reg_1221 : STD_LOGIC_VECTOR (0 downto 0);
    signal rev4_fu_643_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal rev4_reg_1227 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_ones_1_fu_669_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_ones_1_reg_1234 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_105_reg_1241 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_26_i_fu_683_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_26_i_reg_1246 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_27_i_fu_689_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal tmp_27_i_reg_1252 : STD_LOGIC_VECTOR (53 downto 0);
    signal Range2_V_1_fu_693_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal Range2_V_1_reg_1257 : STD_LOGIC_VECTOR (53 downto 0);
    signal Range1_all_zeros_1_fu_705_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_zeros_1_reg_1263 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp34_i_fu_723_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp34_i_reg_1268 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_19_fu_776_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_19_reg_1274 : STD_LOGIC_VECTOR (7 downto 0);
    signal underflow_fu_915_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal underflow_reg_1280 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_179_demorgan_i_i_fu_928_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_179_demorgan_i_i_reg_1286 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state3 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter7 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter8 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter9 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter10 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter11 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter12 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter13 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter14 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter15 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter16 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter17 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter18 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter19 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter20 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter21 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter22 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter23 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter24 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter25 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter26 : STD_LOGIC := '0';
    signal t_V_reg_251 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state31 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state31 : signal is "none";
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal grp_fu_292_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_295_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal rows_V_fu_298_p0 : STD_LOGIC_VECTOR (11 downto 0);
    signal cols_V_fu_302_p0 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_V_fu_339_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_V_3_fu_349_p1 : STD_LOGIC_VECTOR (51 downto 0);
    signal tmp_2_i_fu_381_p3 : STD_LOGIC_VECTOR (52 downto 0);
    signal tmp_93_fu_365_p1 : STD_LOGIC_VECTOR (62 downto 0);
    signal tmp_8_i_fu_377_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_5_i_fu_417_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_97_fu_443_p4 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_Val2_s_fu_459_p3 : STD_LOGIC_VECTOR (53 downto 0);
    signal F2_2_cast_i_fu_464_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_12_i_fu_471_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal tmp_13_i_fu_475_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal tmp_99_fu_485_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_98_fu_481_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_15_i_fu_492_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_18_i_fu_512_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_27_cast_i_fu_517_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_17_i_fu_507_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_s_fu_521_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_17_fu_500_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal qb_fu_529_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_19_i_fu_544_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_101_fu_554_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp1_i_fu_568_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_11_not_i_fu_588_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal not_sel_tmp28_i_fu_593_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal rev_fu_562_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp1_fu_599_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal pos1_fu_611_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal pos2_fu_620_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_103_fu_635_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal pos1_cast_i_fu_616_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_23_i_fu_649_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal tmp_24_i_fu_653_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal lD_fu_659_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp2_fu_663_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal pos2_cast_i_fu_625_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_26_i_not_fu_711_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_30_i_fu_699_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp33_i_fu_717_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_95_fu_729_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal sel_tmp_i_fu_737_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal sel_tmp7_i_fu_749_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp8_i_fu_754_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp4_i_fu_743_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal sel_tmp12_i_fu_766_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp13_i_fu_771_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_16_i_fu_732_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal sel_tmp9_i_fu_759_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal rev5_fu_792_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal r_V_fu_802_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal or_cond173_i_i_fu_797_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range2_all_ones_fu_807_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range2_all_ones_1_i_s_fu_812_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_28_i_fu_829_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_zeros_fu_834_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond175_i_i_fu_820_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_ones_fu_824_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp35_i_fu_849_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_177_i_i_fu_845_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_180_i_i_fu_839_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp39_i_fu_862_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_ones_2_i_s_fu_854_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_zeros_2_i_fu_869_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_ones_2_i_fu_884_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_10_fu_784_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp41_i_fu_895_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp3_fu_900_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp47_i_fu_911_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_31_i_fu_889_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp46_i_fu_906_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp4_fu_923_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal deleted_zeros_fu_877_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal underflow_not_i_fu_938_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_179_demorgan_i_not_s_fu_948_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_i_not_i_fu_943_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp50_i_demorgan_fu_966_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp50_i_fu_970_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp51_i_fu_976_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_demorgan_i_fu_934_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_s_fu_981_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_45_fu_987_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp55_demorgan_i_fu_999_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_i_fu_953_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp55_i_fu_1004_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp56_i_fu_1010_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_11_0_i_mux_i_fu_959_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal sel_tmp52_i_fu_992_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_273_ce : STD_LOGIC;
    signal grp_fu_277_ce : STD_LOGIC;
    signal grp_fu_282_ce : STD_LOGIC;
    signal grp_fu_287_ce : STD_LOGIC;
    signal grp_fu_292_ce : STD_LOGIC;
    signal grp_fu_295_ce : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;

    component sobel_hls_dadd_64rcU IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (63 downto 0);
        din1 : IN STD_LOGIC_VECTOR (63 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component sobel_hls_dmul_64sc4 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (63 downto 0);
        din1 : IN STD_LOGIC_VECTOR (63 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component sobel_hls_uitodp_tde IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;



begin
    sobel_hls_dadd_64rcU_U76 : component sobel_hls_dadd_64rcU
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => t1_reg_1083,
        din1 => t2_reg_1088,
        ce => grp_fu_273_ce,
        dout => grp_fu_273_p2);

    sobel_hls_dadd_64rcU_U77 : component sobel_hls_dadd_64rcU
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => tmp_44_i_i_reg_1093,
        din1 => ap_const_lv64_0,
        ce => grp_fu_277_ce,
        dout => grp_fu_277_p2);

    sobel_hls_dmul_64sc4_U78 : component sobel_hls_dmul_64sc4
    generic map (
        ID => 1,
        NUM_STAGE => 6,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => tmp_i_i_103_reg_1073,
        din1 => ap_const_lv64_3FE0000000000000,
        ce => grp_fu_282_ce,
        dout => grp_fu_282_p2);

    sobel_hls_dmul_64sc4_U79 : component sobel_hls_dmul_64sc4
    generic map (
        ID => 1,
        NUM_STAGE => 6,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => tmp_43_i_i_reg_1078,
        din1 => ap_const_lv64_3FE0000000000000,
        ce => grp_fu_287_ce,
        dout => grp_fu_287_p2);

    sobel_hls_uitodp_tde_U80 : component sobel_hls_uitodp_tde
    generic map (
        ID => 1,
        NUM_STAGE => 6,
        din0_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_292_p0,
        ce => grp_fu_292_ce,
        dout => grp_fu_292_p1);

    sobel_hls_uitodp_tde_U81 : component sobel_hls_uitodp_tde
    generic map (
        ID => 1,
        NUM_STAGE => 6,
        din0_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_295_p0,
        ce => grp_fu_295_ce,
        dout => grp_fu_295_p1);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state2) and (exitcond4_i_i_fu_306_p2 = ap_const_lv1_1))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state3))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((exitcond4_i_i_fu_306_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp0_exit_iter0_state3)) then 
                        ap_enable_reg_pp0_iter1 <= (ap_const_logic_1 xor ap_condition_pp0_exit_iter0_state3);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter10_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter10 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter11_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter11 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter12_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter12 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter13_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter13 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter14_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter14 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter15_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter15 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter16_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter16 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter17_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter17 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter18_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter18 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter18 <= ap_enable_reg_pp0_iter17;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter19_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter19 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter19 <= ap_enable_reg_pp0_iter18;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter20_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter20 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter20 <= ap_enable_reg_pp0_iter19;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter21_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter21 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter21 <= ap_enable_reg_pp0_iter20;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter22_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter22 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter22 <= ap_enable_reg_pp0_iter21;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter23_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter23 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter23 <= ap_enable_reg_pp0_iter22;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter24_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter24 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter24 <= ap_enable_reg_pp0_iter23;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter25_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter25 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter25 <= ap_enable_reg_pp0_iter24;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter26_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter26 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter26 <= ap_enable_reg_pp0_iter25;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter27_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter27 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter27 <= ap_enable_reg_pp0_iter26;
                elsif (((exitcond4_i_i_fu_306_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                    ap_enable_reg_pp0_iter27 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter8 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter9 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
                end if; 
            end if;
        end if;
    end process;


    start_once_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                start_once_reg <= ap_const_logic_0;
            else
                if (((internal_ap_ready = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
                    start_once_reg <= ap_const_logic_1;
                elsif ((internal_ap_ready = ap_const_logic_1)) then 
                    start_once_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    t_V_4_reg_262_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_i_i_fu_317_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                t_V_4_reg_262 <= j_V_fu_322_p2;
            elsif (((exitcond4_i_i_fu_306_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                t_V_4_reg_262 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    t_V_reg_251_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state31)) then 
                t_V_reg_251 <= i_V_reg_1039;
            elsif ((not(((dst_cols_V_out_full_n = ap_const_logic_0) or (dst_rows_V_out_full_n = ap_const_logic_0) or (dst_cols_V_empty_n = ap_const_logic_0) or (dst_rows_V_empty_n = ap_const_logic_0) or (real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                t_V_reg_251 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_i_i_reg_1044_pp0_iter23_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                F2_2_reg_1159 <= F2_2_fu_423_p3;
                F2_reg_1145 <= F2_fu_405_p2;
                icmp_reg_1177 <= icmp_fu_453_p2;
                man_V_1_reg_1134 <= man_V_1_fu_393_p2;
                p_Result_7_reg_1120 <= p_Val2_16_fu_336_p1(63 downto 63);
                    p_Result_8_reg_1129(51 downto 0) <= p_Result_8_fu_389_p1(51 downto 0);
                p_Val2_16_reg_1103 <= p_Val2_16_fu_336_p1;
                tmp_1_i_reg_1153 <= tmp_1_i_fu_411_p2;
                tmp_6_i_reg_1165 <= tmp_6_i_fu_431_p2;
                tmp_9_i_reg_1172 <= tmp_9_i_fu_437_p2;
                tmp_i_i_i_i_104_reg_1114 <= tmp_i_i_i_i_104_fu_359_p2;
                tmp_i_i_i_i_reg_1108 <= tmp_i_i_i_i_fu_353_p2;
                tmp_i_reg_1139 <= tmp_i_fu_399_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                F2_2_reg_1159_pp0_iter25_reg <= F2_2_reg_1159;
                exitcond_i_i_reg_1044_pp0_iter10_reg <= exitcond_i_i_reg_1044_pp0_iter9_reg;
                exitcond_i_i_reg_1044_pp0_iter11_reg <= exitcond_i_i_reg_1044_pp0_iter10_reg;
                exitcond_i_i_reg_1044_pp0_iter12_reg <= exitcond_i_i_reg_1044_pp0_iter11_reg;
                exitcond_i_i_reg_1044_pp0_iter13_reg <= exitcond_i_i_reg_1044_pp0_iter12_reg;
                exitcond_i_i_reg_1044_pp0_iter14_reg <= exitcond_i_i_reg_1044_pp0_iter13_reg;
                exitcond_i_i_reg_1044_pp0_iter15_reg <= exitcond_i_i_reg_1044_pp0_iter14_reg;
                exitcond_i_i_reg_1044_pp0_iter16_reg <= exitcond_i_i_reg_1044_pp0_iter15_reg;
                exitcond_i_i_reg_1044_pp0_iter17_reg <= exitcond_i_i_reg_1044_pp0_iter16_reg;
                exitcond_i_i_reg_1044_pp0_iter18_reg <= exitcond_i_i_reg_1044_pp0_iter17_reg;
                exitcond_i_i_reg_1044_pp0_iter19_reg <= exitcond_i_i_reg_1044_pp0_iter18_reg;
                exitcond_i_i_reg_1044_pp0_iter20_reg <= exitcond_i_i_reg_1044_pp0_iter19_reg;
                exitcond_i_i_reg_1044_pp0_iter21_reg <= exitcond_i_i_reg_1044_pp0_iter20_reg;
                exitcond_i_i_reg_1044_pp0_iter22_reg <= exitcond_i_i_reg_1044_pp0_iter21_reg;
                exitcond_i_i_reg_1044_pp0_iter23_reg <= exitcond_i_i_reg_1044_pp0_iter22_reg;
                exitcond_i_i_reg_1044_pp0_iter24_reg <= exitcond_i_i_reg_1044_pp0_iter23_reg;
                exitcond_i_i_reg_1044_pp0_iter25_reg <= exitcond_i_i_reg_1044_pp0_iter24_reg;
                exitcond_i_i_reg_1044_pp0_iter26_reg <= exitcond_i_i_reg_1044_pp0_iter25_reg;
                exitcond_i_i_reg_1044_pp0_iter2_reg <= exitcond_i_i_reg_1044_pp0_iter1_reg;
                exitcond_i_i_reg_1044_pp0_iter3_reg <= exitcond_i_i_reg_1044_pp0_iter2_reg;
                exitcond_i_i_reg_1044_pp0_iter4_reg <= exitcond_i_i_reg_1044_pp0_iter3_reg;
                exitcond_i_i_reg_1044_pp0_iter5_reg <= exitcond_i_i_reg_1044_pp0_iter4_reg;
                exitcond_i_i_reg_1044_pp0_iter6_reg <= exitcond_i_i_reg_1044_pp0_iter5_reg;
                exitcond_i_i_reg_1044_pp0_iter7_reg <= exitcond_i_i_reg_1044_pp0_iter6_reg;
                exitcond_i_i_reg_1044_pp0_iter8_reg <= exitcond_i_i_reg_1044_pp0_iter7_reg;
                exitcond_i_i_reg_1044_pp0_iter9_reg <= exitcond_i_i_reg_1044_pp0_iter8_reg;
                icmp_reg_1177_pp0_iter25_reg <= icmp_reg_1177;
                p_Result_7_reg_1120_pp0_iter25_reg <= p_Result_7_reg_1120;
                tmp_6_i_reg_1165_pp0_iter25_reg <= tmp_6_i_reg_1165;
                tmp_i_i_i_i_104_reg_1114_pp0_iter25_reg <= tmp_i_i_i_i_104_reg_1114;
                tmp_i_i_i_i_104_reg_1114_pp0_iter26_reg <= tmp_i_i_i_i_104_reg_1114_pp0_iter25_reg;
                tmp_i_i_i_i_reg_1108_pp0_iter25_reg <= tmp_i_i_i_i_reg_1108;
                tmp_i_i_i_i_reg_1108_pp0_iter26_reg <= tmp_i_i_i_i_reg_1108_pp0_iter25_reg;
                tmp_i_reg_1139_pp0_iter25_reg <= tmp_i_reg_1139;
                tmp_i_reg_1139_pp0_iter26_reg <= tmp_i_reg_1139_pp0_iter25_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_i_i_reg_1044_pp0_iter24_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                Range1_all_ones_1_reg_1234 <= Range1_all_ones_1_fu_669_p2;
                Range1_all_zeros_1_reg_1263 <= Range1_all_zeros_1_fu_705_p2;
                Range2_V_1_reg_1257 <= Range2_V_1_fu_693_p2;
                carry_1_i_i_reg_1215 <= carry_1_i_i_fu_605_p2;
                p_Result_9_reg_1189 <= p_Val2_17_fu_500_p3(7 downto 7);
                p_Val2_18_reg_1194 <= p_Val2_18_fu_548_p2;
                rev4_reg_1227 <= rev4_fu_643_p2;
                sel_tmp12_demorgan_i_reg_1210 <= sel_tmp12_demorgan_i_fu_584_p2;
                sel_tmp2_i_reg_1200 <= sel_tmp2_i_fu_573_p2;
                sel_tmp34_i_reg_1268 <= sel_tmp34_i_fu_723_p2;
                sel_tmp3_i_reg_1205 <= sel_tmp3_i_fu_578_p2;
                tmp_105_reg_1241 <= pos2_fu_620_p2(11 downto 11);
                tmp_21_i_reg_1221 <= tmp_21_i_fu_629_p2;
                tmp_26_i_reg_1246 <= tmp_26_i_fu_683_p2;
                    tmp_27_i_reg_1252(31 downto 0) <= tmp_27_i_fu_689_p1(31 downto 0);
                tmp_96_reg_1183 <= tmp_96_fu_467_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((dst_cols_V_out_full_n = ap_const_logic_0) or (dst_rows_V_out_full_n = ap_const_logic_0) or (dst_cols_V_empty_n = ap_const_logic_0) or (dst_rows_V_empty_n = ap_const_logic_0) or (real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                cols_V_reg_1030 <= cols_V_fu_302_p1;
                rows_V_reg_1025 <= rows_V_fu_298_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                exitcond_i_i_reg_1044 <= exitcond_i_i_fu_317_p2;
                exitcond_i_i_reg_1044_pp0_iter1_reg <= exitcond_i_i_reg_1044;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                i_V_reg_1039 <= i_V_fu_311_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_i_i_reg_1044_pp0_iter25_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                p_179_demorgan_i_i_reg_1286 <= p_179_demorgan_i_i_fu_928_p2;
                p_Val2_19_reg_1274 <= p_Val2_19_fu_776_p3;
                underflow_reg_1280 <= underflow_fu_915_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_i_i_reg_1044_pp0_iter22_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                sum_reg_1098 <= grp_fu_277_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_i_i_reg_1044_pp0_iter12_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                t1_reg_1083 <= grp_fu_282_p2;
                t2_reg_1088 <= grp_fu_287_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_i_i_reg_1044_pp0_iter6_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp_43_i_i_reg_1078 <= grp_fu_295_p1;
                tmp_i_i_103_reg_1073 <= grp_fu_292_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_i_i_reg_1044_pp0_iter17_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp_44_i_i_reg_1093 <= grp_fu_273_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_i_i_reg_1044 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp_91_reg_1058 <= src2_data_stream_V_dout;
                tmp_reg_1053 <= src1_data_stream_V_dout;
            end if;
        end if;
    end process;
    p_Result_8_reg_1129(53 downto 52) <= "01";
    tmp_27_i_reg_1252(53 downto 32) <= "0000000000000000000000";

    ap_NS_fsm_assign_proc : process (real_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, dst_rows_V_empty_n, dst_cols_V_empty_n, dst_rows_V_out_full_n, dst_cols_V_out_full_n, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter27, exitcond4_i_i_fu_306_p2, ap_CS_fsm_state2, exitcond_i_i_fu_317_p2, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone, ap_enable_reg_pp0_iter26)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((dst_cols_V_out_full_n = ap_const_logic_0) or (dst_rows_V_out_full_n = ap_const_logic_0) or (dst_cols_V_empty_n = ap_const_logic_0) or (dst_rows_V_empty_n = ap_const_logic_0) or (real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state2) and (exitcond4_i_i_fu_306_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (exitcond_i_i_fu_317_p2 = ap_const_lv1_1))) and not(((ap_enable_reg_pp0_iter26 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter27 = ap_const_logic_1))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((((ap_enable_reg_pp0_iter26 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter27 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (exitcond_i_i_fu_317_p2 = ap_const_lv1_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state31;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state31 => 
                ap_NS_fsm <= ap_ST_fsm_state2;
            when others =>  
                ap_NS_fsm <= "XXXX";
        end case;
    end process;
        F2_2_cast_i_fu_464_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(F2_2_reg_1159),32));

    F2_2_fu_423_p3 <= 
        F2_fu_405_p2 when (tmp_1_i_fu_411_p2(0) = '1') else 
        tmp_5_i_fu_417_p2;
    F2_fu_405_p2 <= std_logic_vector(unsigned(ap_const_lv12_433) - unsigned(tmp_8_i_fu_377_p1));
    Range1_all_ones_1_fu_669_p2 <= (tmp_21_i_fu_629_p2 and tmp2_fu_663_p2);
    Range1_all_ones_2_i_fu_884_p2 <= (carry_1_i_i_reg_1215 and Range1_all_ones_2_i_s_fu_854_p3);
    Range1_all_ones_2_i_s_fu_854_p3 <= 
        Range1_all_ones_fu_824_p2 when (or_cond175_i_i_fu_820_p2(0) = '1') else 
        sel_tmp35_i_fu_849_p3;
    Range1_all_ones_fu_824_p2 <= (Range2_all_ones_1_i_s_fu_812_p3 and Range1_all_ones_1_reg_1234);
    Range1_all_zeros_1_fu_705_p2 <= "1" when (p_Val2_s_fu_459_p3 = ap_const_lv54_0) else "0";
    Range1_all_zeros_2_i_fu_869_p3 <= 
        p_180_i_i_fu_839_p2 when (or_cond175_i_i_fu_820_p2(0) = '1') else 
        sel_tmp39_i_fu_862_p3;
    Range1_all_zeros_fu_834_p2 <= (ap_const_lv1_1 xor Range1_all_ones_1_reg_1234);
    Range2_V_1_fu_693_p2 <= std_logic_vector(shift_right(unsigned(p_Val2_s_fu_459_p3),to_integer(unsigned('0' & tmp_27_i_fu_689_p1(31-1 downto 0)))));
    Range2_all_ones_1_i_s_fu_812_p3 <= 
        Range2_all_ones_fu_807_p2 when (or_cond173_i_i_fu_797_p2(0) = '1') else 
        rev5_fu_792_p2;
    Range2_all_ones_fu_807_p2 <= "1" when (Range2_V_1_reg_1257 = r_V_fu_802_p2) else "0";
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(2);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state31 <= ap_CS_fsm(3);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(src1_data_stream_V_empty_n, src2_data_stream_V_empty_n, dst_data_stream_V_full_n, ap_enable_reg_pp0_iter1, exitcond_i_i_reg_1044, ap_enable_reg_pp0_iter27, exitcond_i_i_reg_1044_pp0_iter26_reg)
    begin
                ap_block_pp0_stage0_01001 <= (((exitcond_i_i_reg_1044_pp0_iter26_reg = ap_const_lv1_0) and (dst_data_stream_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter27 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((exitcond_i_i_reg_1044 = ap_const_lv1_0) and (src2_data_stream_V_empty_n = ap_const_logic_0)) or ((exitcond_i_i_reg_1044 = ap_const_lv1_0) and (src1_data_stream_V_empty_n = ap_const_logic_0)))));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(src1_data_stream_V_empty_n, src2_data_stream_V_empty_n, dst_data_stream_V_full_n, ap_enable_reg_pp0_iter1, exitcond_i_i_reg_1044, ap_enable_reg_pp0_iter27, exitcond_i_i_reg_1044_pp0_iter26_reg)
    begin
                ap_block_pp0_stage0_11001 <= (((exitcond_i_i_reg_1044_pp0_iter26_reg = ap_const_lv1_0) and (dst_data_stream_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter27 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((exitcond_i_i_reg_1044 = ap_const_lv1_0) and (src2_data_stream_V_empty_n = ap_const_logic_0)) or ((exitcond_i_i_reg_1044 = ap_const_lv1_0) and (src1_data_stream_V_empty_n = ap_const_logic_0)))));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(src1_data_stream_V_empty_n, src2_data_stream_V_empty_n, dst_data_stream_V_full_n, ap_enable_reg_pp0_iter1, exitcond_i_i_reg_1044, ap_enable_reg_pp0_iter27, exitcond_i_i_reg_1044_pp0_iter26_reg)
    begin
                ap_block_pp0_stage0_subdone <= (((exitcond_i_i_reg_1044_pp0_iter26_reg = ap_const_lv1_0) and (dst_data_stream_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter27 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((exitcond_i_i_reg_1044 = ap_const_lv1_0) and (src2_data_stream_V_empty_n = ap_const_logic_0)) or ((exitcond_i_i_reg_1044 = ap_const_lv1_0) and (src1_data_stream_V_empty_n = ap_const_logic_0)))));
    end process;


    ap_block_state1_assign_proc : process(real_start, ap_done_reg, dst_rows_V_empty_n, dst_cols_V_empty_n, dst_rows_V_out_full_n, dst_cols_V_out_full_n)
    begin
                ap_block_state1 <= ((dst_cols_V_out_full_n = ap_const_logic_0) or (dst_rows_V_out_full_n = ap_const_logic_0) or (dst_cols_V_empty_n = ap_const_logic_0) or (dst_rows_V_empty_n = ap_const_logic_0) or (real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;

        ap_block_state10_pp0_stage0_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage0_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage0_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp0_stage0_iter10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp0_stage0_iter11 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp0_stage0_iter12 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state16_pp0_stage0_iter13 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state17_pp0_stage0_iter14 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state18_pp0_stage0_iter15 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state19_pp0_stage0_iter16 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state20_pp0_stage0_iter17 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state21_pp0_stage0_iter18 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state22_pp0_stage0_iter19 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state23_pp0_stage0_iter20 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state24_pp0_stage0_iter21 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state25_pp0_stage0_iter22 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state26_pp0_stage0_iter23 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state27_pp0_stage0_iter24 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state28_pp0_stage0_iter25 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state29_pp0_stage0_iter26 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state30_pp0_stage0_iter27_assign_proc : process(dst_data_stream_V_full_n, exitcond_i_i_reg_1044_pp0_iter26_reg)
    begin
                ap_block_state30_pp0_stage0_iter27 <= ((exitcond_i_i_reg_1044_pp0_iter26_reg = ap_const_lv1_0) and (dst_data_stream_V_full_n = ap_const_logic_0));
    end process;

        ap_block_state3_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state4_pp0_stage0_iter1_assign_proc : process(src1_data_stream_V_empty_n, src2_data_stream_V_empty_n, exitcond_i_i_reg_1044)
    begin
                ap_block_state4_pp0_stage0_iter1 <= (((exitcond_i_i_reg_1044 = ap_const_lv1_0) and (src2_data_stream_V_empty_n = ap_const_logic_0)) or ((exitcond_i_i_reg_1044 = ap_const_lv1_0) and (src1_data_stream_V_empty_n = ap_const_logic_0)));
    end process;

        ap_block_state5_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_pp0_exit_iter0_state3_assign_proc : process(exitcond_i_i_fu_317_p2)
    begin
        if ((exitcond_i_i_fu_317_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state3 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state3 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_done_reg, exitcond4_i_i_fu_306_p2, ap_CS_fsm_state2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (exitcond4_i_i_fu_306_p2 = ap_const_lv1_1))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(real_start, ap_CS_fsm_state1)
    begin
        if (((real_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter27, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9, ap_enable_reg_pp0_iter10, ap_enable_reg_pp0_iter11, ap_enable_reg_pp0_iter12, ap_enable_reg_pp0_iter13, ap_enable_reg_pp0_iter14, ap_enable_reg_pp0_iter15, ap_enable_reg_pp0_iter16, ap_enable_reg_pp0_iter17, ap_enable_reg_pp0_iter18, ap_enable_reg_pp0_iter19, ap_enable_reg_pp0_iter20, ap_enable_reg_pp0_iter21, ap_enable_reg_pp0_iter22, ap_enable_reg_pp0_iter23, ap_enable_reg_pp0_iter24, ap_enable_reg_pp0_iter25, ap_enable_reg_pp0_iter26)
    begin
        if (((ap_enable_reg_pp0_iter27 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter26 = ap_const_logic_0) and (ap_enable_reg_pp0_iter25 = ap_const_logic_0) and (ap_enable_reg_pp0_iter24 = ap_const_logic_0) and (ap_enable_reg_pp0_iter23 = ap_const_logic_0) and (ap_enable_reg_pp0_iter22 = ap_const_logic_0) and (ap_enable_reg_pp0_iter21 = ap_const_logic_0) and (ap_enable_reg_pp0_iter20 = ap_const_logic_0) and (ap_enable_reg_pp0_iter19 = ap_const_logic_0) and (ap_enable_reg_pp0_iter18 = ap_const_logic_0) and (ap_enable_reg_pp0_iter17 = ap_const_logic_0) and (ap_enable_reg_pp0_iter16 = ap_const_logic_0) and (ap_enable_reg_pp0_iter15 = ap_const_logic_0) and (ap_enable_reg_pp0_iter14 = ap_const_logic_0) and (ap_enable_reg_pp0_iter13 = ap_const_logic_0) and (ap_enable_reg_pp0_iter12 = ap_const_logic_0) and (ap_enable_reg_pp0_iter11 = ap_const_logic_0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_ready <= internal_ap_ready;
    brmerge_i_fu_953_p2 <= (underflow_not_i_fu_938_p2 or p_179_demorgan_i_not_s_fu_948_p2);
    brmerge_i_not_i_fu_943_p2 <= (underflow_not_i_fu_938_p2 and p_179_demorgan_i_i_reg_1286);
    carry_1_i_i_fu_605_p2 <= (tmp1_fu_599_p2 and sel_tmp3_i_fu_578_p2);
    cols_V_fu_302_p0 <= dst_cols_V_dout;
        cols_V_fu_302_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(cols_V_fu_302_p0),32));

    deleted_zeros_fu_877_p3 <= 
        Range1_all_ones_2_i_s_fu_854_p3 when (carry_1_i_i_reg_1215(0) = '1') else 
        Range1_all_zeros_2_i_fu_869_p3;

    dst_cols_V_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, dst_cols_V_empty_n)
    begin
        if ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            dst_cols_V_blk_n <= dst_cols_V_empty_n;
        else 
            dst_cols_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    dst_cols_V_out_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, dst_cols_V_out_full_n)
    begin
        if ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            dst_cols_V_out_blk_n <= dst_cols_V_out_full_n;
        else 
            dst_cols_V_out_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    dst_cols_V_out_din <= dst_cols_V_dout;

    dst_cols_V_out_write_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, dst_rows_V_empty_n, dst_cols_V_empty_n, dst_rows_V_out_full_n, dst_cols_V_out_full_n)
    begin
        if ((not(((dst_cols_V_out_full_n = ap_const_logic_0) or (dst_rows_V_out_full_n = ap_const_logic_0) or (dst_cols_V_empty_n = ap_const_logic_0) or (dst_rows_V_empty_n = ap_const_logic_0) or (real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            dst_cols_V_out_write <= ap_const_logic_1;
        else 
            dst_cols_V_out_write <= ap_const_logic_0;
        end if; 
    end process;


    dst_cols_V_read_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, dst_rows_V_empty_n, dst_cols_V_empty_n, dst_rows_V_out_full_n, dst_cols_V_out_full_n)
    begin
        if ((not(((dst_cols_V_out_full_n = ap_const_logic_0) or (dst_rows_V_out_full_n = ap_const_logic_0) or (dst_cols_V_empty_n = ap_const_logic_0) or (dst_rows_V_empty_n = ap_const_logic_0) or (real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            dst_cols_V_read <= ap_const_logic_1;
        else 
            dst_cols_V_read <= ap_const_logic_0;
        end if; 
    end process;


    dst_data_stream_V_blk_n_assign_proc : process(dst_data_stream_V_full_n, ap_block_pp0_stage0, ap_enable_reg_pp0_iter27, exitcond_i_i_reg_1044_pp0_iter26_reg)
    begin
        if (((exitcond_i_i_reg_1044_pp0_iter26_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter27 = ap_const_logic_1))) then 
            dst_data_stream_V_blk_n <= dst_data_stream_V_full_n;
        else 
            dst_data_stream_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    dst_data_stream_V_din <= 
        p_Val2_11_0_i_mux_i_fu_959_p3 when (sel_tmp56_i_fu_1010_p2(0) = '1') else 
        sel_tmp52_i_fu_992_p3;

    dst_data_stream_V_write_assign_proc : process(ap_enable_reg_pp0_iter27, exitcond_i_i_reg_1044_pp0_iter26_reg, ap_block_pp0_stage0_11001)
    begin
        if (((exitcond_i_i_reg_1044_pp0_iter26_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter27 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            dst_data_stream_V_write <= ap_const_logic_1;
        else 
            dst_data_stream_V_write <= ap_const_logic_0;
        end if; 
    end process;


    dst_rows_V_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, dst_rows_V_empty_n)
    begin
        if ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            dst_rows_V_blk_n <= dst_rows_V_empty_n;
        else 
            dst_rows_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    dst_rows_V_out_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, dst_rows_V_out_full_n)
    begin
        if ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            dst_rows_V_out_blk_n <= dst_rows_V_out_full_n;
        else 
            dst_rows_V_out_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    dst_rows_V_out_din <= dst_rows_V_dout;

    dst_rows_V_out_write_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, dst_rows_V_empty_n, dst_cols_V_empty_n, dst_rows_V_out_full_n, dst_cols_V_out_full_n)
    begin
        if ((not(((dst_cols_V_out_full_n = ap_const_logic_0) or (dst_rows_V_out_full_n = ap_const_logic_0) or (dst_cols_V_empty_n = ap_const_logic_0) or (dst_rows_V_empty_n = ap_const_logic_0) or (real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            dst_rows_V_out_write <= ap_const_logic_1;
        else 
            dst_rows_V_out_write <= ap_const_logic_0;
        end if; 
    end process;


    dst_rows_V_read_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, dst_rows_V_empty_n, dst_cols_V_empty_n, dst_rows_V_out_full_n, dst_cols_V_out_full_n)
    begin
        if ((not(((dst_cols_V_out_full_n = ap_const_logic_0) or (dst_rows_V_out_full_n = ap_const_logic_0) or (dst_cols_V_empty_n = ap_const_logic_0) or (dst_rows_V_empty_n = ap_const_logic_0) or (real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            dst_rows_V_read <= ap_const_logic_1;
        else 
            dst_rows_V_read <= ap_const_logic_0;
        end if; 
    end process;

    exitcond4_i_i_fu_306_p2 <= "1" when (t_V_reg_251 = rows_V_reg_1025) else "0";
    exitcond_i_i_fu_317_p2 <= "1" when (t_V_4_reg_262 = cols_V_reg_1030) else "0";

    grp_fu_273_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_273_ce <= ap_const_logic_1;
        else 
            grp_fu_273_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_277_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_277_ce <= ap_const_logic_1;
        else 
            grp_fu_277_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_282_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_282_ce <= ap_const_logic_1;
        else 
            grp_fu_282_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_287_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_287_ce <= ap_const_logic_1;
        else 
            grp_fu_287_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_292_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_292_ce <= ap_const_logic_1;
        else 
            grp_fu_292_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_292_p0 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_reg_1053),32));

    grp_fu_295_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_295_ce <= ap_const_logic_1;
        else 
            grp_fu_295_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_295_p0 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_91_reg_1058),32));
    i_V_fu_311_p2 <= std_logic_vector(unsigned(t_V_reg_251) + unsigned(ap_const_lv32_1));
    icmp_fu_453_p2 <= "1" when (tmp_97_fu_443_p4 = ap_const_lv9_0) else "0";

    internal_ap_ready_assign_proc : process(exitcond4_i_i_fu_306_p2, ap_CS_fsm_state2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (exitcond4_i_i_fu_306_p2 = ap_const_lv1_1))) then 
            internal_ap_ready <= ap_const_logic_1;
        else 
            internal_ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    j_V_fu_322_p2 <= std_logic_vector(unsigned(t_V_4_reg_262) + unsigned(ap_const_lv32_1));
    lD_fu_659_p1 <= tmp_24_i_fu_653_p2(1 - 1 downto 0);
    man_V_1_fu_393_p2 <= std_logic_vector(unsigned(ap_const_lv54_0) - unsigned(p_Result_8_fu_389_p1));
    not_sel_tmp28_i_fu_593_p2 <= (tmp_11_not_i_fu_588_p2 or sel_tmp12_demorgan_i_fu_584_p2);
    or_cond173_i_i_fu_797_p2 <= (tmp_26_i_reg_1246 and rev5_fu_792_p2);
    or_cond175_i_i_fu_820_p2 <= (tmp_26_i_reg_1246 and rev4_reg_1227);
    p_177_i_i_fu_845_p2 <= (rev4_reg_1227 or Range1_all_zeros_1_reg_1263);
    p_179_demorgan_i_i_fu_928_p2 <= (tmp4_fu_923_p2 or deleted_zeros_fu_877_p3);
    p_179_demorgan_i_not_s_fu_948_p2 <= (p_179_demorgan_i_i_reg_1286 xor ap_const_lv1_1);
    p_180_i_i_fu_839_p2 <= (tmp_28_i_fu_829_p2 and Range1_all_zeros_fu_834_p2);
    p_Result_10_fu_784_p3 <= p_Val2_19_fu_776_p3(7 downto 7);
    p_Result_8_fu_389_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_2_i_fu_381_p3),54));
    p_Result_9_fu_536_p3 <= p_Val2_17_fu_500_p3(7 downto 7);
    p_Result_s_fu_521_p3 <= p_Val2_s_fu_459_p3(to_integer(unsigned(tmp_27_cast_i_fu_517_p1)) downto to_integer(unsigned(tmp_27_cast_i_fu_517_p1))) when (to_integer(unsigned(tmp_27_cast_i_fu_517_p1))>= 0 and to_integer(unsigned(tmp_27_cast_i_fu_517_p1))<=53) else "-";
    p_Val2_11_0_i_mux_i_fu_959_p3 <= 
        p_Val2_19_reg_1274 when (brmerge_i_not_i_fu_943_p2(0) = '1') else 
        ap_const_lv8_FF;
    p_Val2_16_fu_336_p1 <= sum_reg_1098;
    p_Val2_17_fu_500_p3 <= 
        tmp_98_fu_481_p1 when (tmp_9_i_reg_1172(0) = '1') else 
        tmp_15_i_fu_492_p3;
    p_Val2_18_fu_548_p2 <= std_logic_vector(unsigned(p_Val2_17_fu_500_p3) + unsigned(tmp_19_i_fu_544_p1));
    p_Val2_19_fu_776_p3 <= 
        tmp_16_i_fu_732_p2 when (sel_tmp13_i_fu_771_p2(0) = '1') else 
        sel_tmp9_i_fu_759_p3;
    p_Val2_s_fu_459_p3 <= 
        man_V_1_reg_1134 when (p_Result_7_reg_1120(0) = '1') else 
        p_Result_8_reg_1129;
        pos1_cast_i_fu_616_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(pos1_fu_611_p2),32));

    pos1_fu_611_p2 <= std_logic_vector(unsigned(ap_const_lv12_8) + unsigned(F2_reg_1145));
        pos2_cast_i_fu_625_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(pos2_fu_620_p2),32));

    pos2_fu_620_p2 <= std_logic_vector(unsigned(ap_const_lv12_9) + unsigned(F2_reg_1145));
    qb_fu_529_p3 <= 
        p_Result_7_reg_1120 when (tmp_17_i_fu_507_p2(0) = '1') else 
        p_Result_s_fu_521_p3;
    r_V_fu_802_p2 <= std_logic_vector(shift_right(unsigned(ap_const_lv54_3FFFFFFFFFFFFF),to_integer(unsigned('0' & tmp_27_i_reg_1252(31-1 downto 0)))));

    real_start_assign_proc : process(ap_start, start_full_n, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (start_full_n = ap_const_logic_0))) then 
            real_start <= ap_const_logic_0;
        else 
            real_start <= ap_start;
        end if; 
    end process;

    rev4_fu_643_p2 <= (tmp_103_fu_635_p3 xor ap_const_lv1_1);
    rev5_fu_792_p2 <= (tmp_105_reg_1241 xor ap_const_lv1_1);
    rev_fu_562_p2 <= (tmp_101_fu_554_p3 xor ap_const_lv1_1);
    rows_V_fu_298_p0 <= dst_rows_V_dout;
        rows_V_fu_298_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(rows_V_fu_298_p0),32));

    sel_tmp12_demorgan_i_fu_584_p2 <= (tmp_6_i_reg_1165 or tmp_1_i_reg_1153);
    sel_tmp12_i_fu_766_p2 <= (sel_tmp12_demorgan_i_reg_1210 xor ap_const_lv1_1);
    sel_tmp13_i_fu_771_p2 <= (sel_tmp12_i_fu_766_p2 and icmp_reg_1177_pp0_iter25_reg);
    sel_tmp1_i_fu_568_p2 <= (tmp_6_i_reg_1165 xor ap_const_lv1_1);
    sel_tmp2_i_fu_573_p2 <= (tmp_1_i_reg_1153 and sel_tmp1_i_fu_568_p2);
    sel_tmp33_i_fu_717_p2 <= (tmp_26_i_not_fu_711_p2 or tmp_103_fu_635_p3);
    sel_tmp34_i_fu_723_p2 <= (tmp_30_i_fu_699_p2 and sel_tmp33_i_fu_717_p2);
    sel_tmp35_i_fu_849_p3 <= 
        Range1_all_ones_1_reg_1234 when (sel_tmp34_i_reg_1268(0) = '1') else 
        rev4_reg_1227;
    sel_tmp39_i_fu_862_p3 <= 
        Range1_all_zeros_fu_834_p2 when (sel_tmp34_i_reg_1268(0) = '1') else 
        p_177_i_i_fu_845_p2;
    sel_tmp3_i_fu_578_p2 <= (sel_tmp2_i_fu_573_p2 and p_Result_9_fu_536_p3);
    sel_tmp41_i_fu_895_p2 <= (tmp_21_i_reg_1221 xor ap_const_lv1_1);
    sel_tmp46_i_fu_906_p2 <= (tmp3_fu_900_p2 and p_Result_7_reg_1120_pp0_iter25_reg);
    sel_tmp47_i_fu_911_p2 <= (tmp_21_i_reg_1221 and p_Result_7_reg_1120_pp0_iter25_reg);
    sel_tmp4_i_fu_743_p3 <= 
        p_Val2_18_reg_1194 when (sel_tmp3_i_reg_1205(0) = '1') else 
        sel_tmp_i_fu_737_p3;
    sel_tmp50_i_demorgan_fu_966_p2 <= (tmp_i_i_i_i_reg_1108_pp0_iter26_reg and tmp_i_i_i_i_104_reg_1114_pp0_iter26_reg);
    sel_tmp50_i_fu_970_p2 <= (sel_tmp50_i_demorgan_fu_966_p2 xor ap_const_lv1_1);
    sel_tmp51_i_fu_976_p2 <= (tmp_i_reg_1139_pp0_iter26_reg and sel_tmp50_i_fu_970_p2);
    sel_tmp52_i_fu_992_p3 <= 
        ap_const_lv8_0 when (tmp_45_fu_987_p2(0) = '1') else 
        p_Val2_19_reg_1274;
    sel_tmp55_demorgan_i_fu_999_p2 <= (tmp_i_reg_1139_pp0_iter26_reg or tmp_demorgan_i_fu_934_p2);
    sel_tmp55_i_fu_1004_p2 <= (sel_tmp55_demorgan_i_fu_999_p2 xor ap_const_lv1_1);
    sel_tmp56_i_fu_1010_p2 <= (sel_tmp55_i_fu_1004_p2 and brmerge_i_fu_953_p2);
    sel_tmp7_i_fu_749_p2 <= (p_Result_9_reg_1189 xor ap_const_lv1_1);
    sel_tmp8_i_fu_754_p2 <= (sel_tmp7_i_fu_749_p2 and sel_tmp2_i_reg_1200);
    sel_tmp9_i_fu_759_p3 <= 
        p_Val2_18_reg_1194 when (sel_tmp8_i_fu_754_p2(0) = '1') else 
        sel_tmp4_i_fu_743_p3;
    sel_tmp_i_fu_737_p3 <= 
        tmp_96_reg_1183 when (tmp_6_i_reg_1165_pp0_iter25_reg(0) = '1') else 
        ap_const_lv8_0;

    src1_data_stream_V_blk_n_assign_proc : process(src1_data_stream_V_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, exitcond_i_i_reg_1044)
    begin
        if (((exitcond_i_i_reg_1044 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            src1_data_stream_V_blk_n <= src1_data_stream_V_empty_n;
        else 
            src1_data_stream_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    src1_data_stream_V_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, exitcond_i_i_reg_1044, ap_block_pp0_stage0_11001)
    begin
        if (((exitcond_i_i_reg_1044 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            src1_data_stream_V_read <= ap_const_logic_1;
        else 
            src1_data_stream_V_read <= ap_const_logic_0;
        end if; 
    end process;


    src2_data_stream_V_blk_n_assign_proc : process(src2_data_stream_V_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, exitcond_i_i_reg_1044)
    begin
        if (((exitcond_i_i_reg_1044 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            src2_data_stream_V_blk_n <= src2_data_stream_V_empty_n;
        else 
            src2_data_stream_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    src2_data_stream_V_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, exitcond_i_i_reg_1044, ap_block_pp0_stage0_11001)
    begin
        if (((exitcond_i_i_reg_1044 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            src2_data_stream_V_read <= ap_const_logic_1;
        else 
            src2_data_stream_V_read <= ap_const_logic_0;
        end if; 
    end process;

    start_out <= real_start;

    start_write_assign_proc : process(real_start, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
            start_write <= ap_const_logic_1;
        else 
            start_write <= ap_const_logic_0;
        end if; 
    end process;

    tmp1_fu_599_p2 <= (rev_fu_562_p2 and not_sel_tmp28_i_fu_593_p2);
    tmp2_fu_663_p2 <= (rev4_fu_643_p2 and lD_fu_659_p1);
    tmp3_fu_900_p2 <= (sel_tmp41_i_fu_895_p2 and p_Result_10_fu_784_p3);
    tmp4_fu_923_p2 <= (sel_tmp41_i_fu_895_p2 or p_Result_7_reg_1120_pp0_iter25_reg);
    tmp_101_fu_554_p3 <= p_Val2_18_fu_548_p2(7 downto 7);
    tmp_103_fu_635_p3 <= pos1_fu_611_p2(11 downto 11);
    tmp_11_not_i_fu_588_p2 <= (icmp_reg_1177 xor ap_const_lv1_1);
    tmp_12_i_fu_471_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(F2_2_cast_i_fu_464_p1),54));
    tmp_13_i_fu_475_p2 <= std_logic_vector(shift_right(signed(p_Val2_s_fu_459_p3),to_integer(unsigned('0' & tmp_12_i_fu_471_p1(31-1 downto 0)))));
    tmp_15_i_fu_492_p3 <= 
        ap_const_lv8_FF when (tmp_99_fu_485_p3(0) = '1') else 
        ap_const_lv8_0;
    tmp_16_i_fu_732_p2 <= std_logic_vector(shift_left(unsigned(tmp_96_reg_1183),to_integer(unsigned('0' & tmp_95_fu_729_p1(8-1 downto 0)))));
    tmp_17_i_fu_507_p2 <= "1" when (signed(F2_reg_1145) > signed(ap_const_lv12_36)) else "0";
    tmp_18_i_fu_512_p2 <= std_logic_vector(signed(ap_const_lv12_FFF) + signed(F2_reg_1145));
    tmp_19_i_fu_544_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(qb_fu_529_p3),8));
    tmp_1_i_fu_411_p2 <= "1" when (signed(F2_fu_405_p2) > signed(ap_const_lv12_0)) else "0";
    tmp_21_i_fu_629_p2 <= "1" when (signed(pos1_fu_611_p2) < signed(ap_const_lv12_36)) else "0";
    tmp_23_i_fu_649_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(pos1_cast_i_fu_616_p1),54));
    tmp_24_i_fu_653_p2 <= std_logic_vector(shift_right(signed(p_Val2_s_fu_459_p3),to_integer(unsigned('0' & tmp_23_i_fu_649_p1(31-1 downto 0)))));
    tmp_26_i_fu_683_p2 <= "1" when (signed(pos2_fu_620_p2) < signed(ap_const_lv12_36)) else "0";
    tmp_26_i_not_fu_711_p2 <= (tmp_26_i_fu_683_p2 xor ap_const_lv1_1);
    tmp_27_cast_i_fu_517_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_18_i_fu_512_p2),32));
    tmp_27_i_fu_689_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(pos2_cast_i_fu_625_p1),54));
    tmp_28_i_fu_829_p2 <= "1" when (Range2_V_1_reg_1257 = ap_const_lv54_0) else "0";
    tmp_2_i_fu_381_p3 <= (ap_const_lv1_1 & tmp_V_3_fu_349_p1);
    tmp_30_i_fu_699_p2 <= "1" when (pos2_fu_620_p2 = ap_const_lv12_36) else "0";
    tmp_31_i_fu_889_p2 <= (ap_const_lv1_1 xor Range1_all_ones_2_i_fu_884_p2);
    tmp_45_fu_987_p2 <= (underflow_reg_1280 or tmp_s_fu_981_p2);
    tmp_5_i_fu_417_p2 <= std_logic_vector(unsigned(ap_const_lv12_0) - unsigned(F2_fu_405_p2));
    tmp_6_i_fu_431_p2 <= "1" when (tmp_V_fu_339_p4 = ap_const_lv11_433) else "0";
    tmp_8_i_fu_377_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_V_fu_339_p4),12));
    tmp_93_fu_365_p1 <= p_Val2_16_fu_336_p1(63 - 1 downto 0);
    tmp_95_fu_729_p1 <= F2_2_reg_1159_pp0_iter25_reg(8 - 1 downto 0);
    tmp_96_fu_467_p1 <= p_Val2_s_fu_459_p3(8 - 1 downto 0);
    tmp_97_fu_443_p4 <= F2_2_fu_423_p3(11 downto 3);
    tmp_98_fu_481_p1 <= tmp_13_i_fu_475_p2(8 - 1 downto 0);
    tmp_99_fu_485_p3 <= p_Val2_16_reg_1103(63 downto 63);
    tmp_9_i_fu_437_p2 <= "1" when (unsigned(F2_2_fu_423_p3) < unsigned(ap_const_lv12_36)) else "0";
    tmp_V_3_fu_349_p1 <= p_Val2_16_fu_336_p1(52 - 1 downto 0);
    tmp_V_fu_339_p4 <= p_Val2_16_fu_336_p1(62 downto 52);
    tmp_demorgan_i_fu_934_p2 <= (tmp_i_i_i_i_reg_1108_pp0_iter26_reg and tmp_i_i_i_i_104_reg_1114_pp0_iter26_reg);
    tmp_i_fu_399_p2 <= "1" when (tmp_93_fu_365_p1 = ap_const_lv63_0) else "0";
    tmp_i_i_i_i_104_fu_359_p2 <= "0" when (tmp_V_3_fu_349_p1 = ap_const_lv52_0) else "1";
    tmp_i_i_i_i_fu_353_p2 <= "1" when (tmp_V_fu_339_p4 = ap_const_lv11_7FF) else "0";
    tmp_s_fu_981_p2 <= (tmp_demorgan_i_fu_934_p2 or sel_tmp51_i_fu_976_p2);
    underflow_fu_915_p3 <= 
        tmp_31_i_fu_889_p2 when (sel_tmp47_i_fu_911_p2(0) = '1') else 
        sel_tmp46_i_fu_906_p2;
    underflow_not_i_fu_938_p2 <= (underflow_reg_1280 xor ap_const_lv1_1);
end behav;
