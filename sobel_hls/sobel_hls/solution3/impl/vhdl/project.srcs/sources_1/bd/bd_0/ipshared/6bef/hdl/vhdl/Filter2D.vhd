-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.3
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity Filter2D is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    p_src_data_stream_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    p_src_data_stream_V_empty_n : IN STD_LOGIC;
    p_src_data_stream_V_read : OUT STD_LOGIC;
    p_dst_data_stream_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    p_dst_data_stream_V_full_n : IN STD_LOGIC;
    p_dst_data_stream_V_write : OUT STD_LOGIC;
    p_kernel_val_0_V_1_read : IN STD_LOGIC_VECTOR (1 downto 0);
    p_kernel_val_0_V_2_read : IN STD_LOGIC_VECTOR (1 downto 0);
    p_kernel_val_1_V_0_read : IN STD_LOGIC_VECTOR (2 downto 0);
    p_kernel_val_1_V_2_read : IN STD_LOGIC_VECTOR (3 downto 0);
    p_kernel_val_2_V_0_read : IN STD_LOGIC_VECTOR (1 downto 0);
    p_kernel_val_2_V_1_read : IN STD_LOGIC_VECTOR (2 downto 0) );
end;


architecture behav of Filter2D is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv11_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv11_43A : STD_LOGIC_VECTOR (10 downto 0) := "10000111010";
    constant ap_const_lv11_1 : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    constant ap_const_lv11_438 : STD_LOGIC_VECTOR (10 downto 0) := "10000111000";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv12_FFF : STD_LOGIC_VECTOR (11 downto 0) := "111111111111";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv12_438 : STD_LOGIC_VECTOR (11 downto 0) := "010000111000";
    constant ap_const_lv12_1 : STD_LOGIC_VECTOR (11 downto 0) := "000000000001";
    constant ap_const_lv12_FFE : STD_LOGIC_VECTOR (11 downto 0) := "111111111110";
    constant ap_const_lv12_FFD : STD_LOGIC_VECTOR (11 downto 0) := "111111111101";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv11_782 : STD_LOGIC_VECTOR (10 downto 0) := "11110000010";
    constant ap_const_lv12_780 : STD_LOGIC_VECTOR (11 downto 0) := "011110000000";
    constant ap_const_lv13_EFE : STD_LOGIC_VECTOR (12 downto 0) := "0111011111110";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal p_src_data_stream_V_blk_n : STD_LOGIC;
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal exitcond460_i_reg_1419 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond460_i_reg_1419_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_i_i_reg_1428 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_i_i_reg_1428_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_reg_1384 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_s_reg_1375 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_dst_data_stream_V_blk_n : STD_LOGIC;
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal or_cond_i_reg_1449 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_i_reg_1449_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal t_V_2_reg_323 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_369_0_1_cast_fu_334_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_369_0_1_cast_reg_1336 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_369_0_2_cast_fu_338_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_369_0_2_cast_reg_1341 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_369_1_cast_fu_342_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_369_1_cast_reg_1346 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_369_1_2_cast_fu_346_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_369_1_2_cast_reg_1351 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_369_2_cast_fu_350_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_369_2_cast_reg_1356 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_369_2_1_cast_fu_354_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_369_2_1_cast_reg_1361 : STD_LOGIC_VECTOR (10 downto 0);
    signal exitcond461_i_fu_362_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal i_V_fu_368_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal i_V_reg_1370 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_s_fu_374_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_284_0_not_fu_380_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_284_0_not_reg_1379 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_fu_396_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_2_fu_402_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_2_reg_1389 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_328_1_fu_408_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_328_1_reg_1393 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_3_fu_414_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_3_reg_1397 : STD_LOGIC_VECTOR (0 downto 0);
    signal row_assign_10_0_t_fu_568_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal row_assign_10_0_t_reg_1404 : STD_LOGIC_VECTOR (1 downto 0);
    signal row_assign_10_1_t_fu_606_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal row_assign_10_1_t_reg_1409 : STD_LOGIC_VECTOR (1 downto 0);
    signal row_assign_10_2_t_fu_644_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal row_assign_10_2_t_reg_1414 : STD_LOGIC_VECTOR (1 downto 0);
    signal exitcond460_i_fu_654_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_block_state3_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter1 : BOOLEAN;
    signal ap_predicate_op161_read_state5 : BOOLEAN;
    signal ap_predicate_op172_read_state5 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal exitcond460_i_reg_1419_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal j_V_fu_660_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal or_cond_i_i_fu_712_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal x_fu_790_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal x_reg_1432 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_73_fu_798_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_73_reg_1437 : STD_LOGIC_VECTOR (1 downto 0);
    signal brmerge_fu_802_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_reg_1442 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_reg_1442_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_i_fu_807_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_i_reg_1449_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_i_reg_1449_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_i_reg_1449_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal k_buf_0_val_3_addr_reg_1453 : STD_LOGIC_VECTOR (10 downto 0);
    signal col_assign_3_t_fu_822_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal col_assign_3_t_reg_1459 : STD_LOGIC_VECTOR (1 downto 0);
    signal k_buf_0_val_4_addr_reg_1466 : STD_LOGIC_VECTOR (10 downto 0);
    signal k_buf_0_val_5_addr_reg_1472 : STD_LOGIC_VECTOR (10 downto 0);
    signal src_kernel_win_0_va_23_fu_946_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_23_reg_1478 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_24_fu_964_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_24_reg_1485 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_25_fu_982_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_25_reg_1491 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1245_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal sum_V_0_1_reg_1496 : STD_LOGIC_VECTOR (10 downto 0);
    signal sum_V_1_1_fu_1061_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal sum_V_1_1_reg_1501 : STD_LOGIC_VECTOR (11 downto 0);
    signal r_V_50_1_2_fu_1070_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal r_V_50_1_2_reg_1506 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_79_fu_1094_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_79_reg_1511 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp4_fu_1124_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp4_reg_1516 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp6_fu_1130_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp6_reg_1521 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp8_fu_1136_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp8_reg_1526 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_6_fu_1237_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_6_reg_1531 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_condition_pp0_exit_iter2_state5 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal k_buf_0_val_3_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal k_buf_0_val_3_ce0 : STD_LOGIC;
    signal k_buf_0_val_3_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal k_buf_0_val_3_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal k_buf_0_val_3_ce1 : STD_LOGIC;
    signal k_buf_0_val_3_we1 : STD_LOGIC;
    signal k_buf_0_val_4_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal k_buf_0_val_4_ce0 : STD_LOGIC;
    signal k_buf_0_val_4_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal k_buf_0_val_4_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal k_buf_0_val_4_ce1 : STD_LOGIC;
    signal k_buf_0_val_4_we1 : STD_LOGIC;
    signal k_buf_0_val_4_d1 : STD_LOGIC_VECTOR (7 downto 0);
    signal k_buf_0_val_5_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal k_buf_0_val_5_ce0 : STD_LOGIC;
    signal k_buf_0_val_5_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal k_buf_0_val_5_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal k_buf_0_val_5_ce1 : STD_LOGIC;
    signal k_buf_0_val_5_we1 : STD_LOGIC;
    signal k_buf_0_val_5_d1 : STD_LOGIC_VECTOR (7 downto 0);
    signal t_V_reg_312 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal tmp_23_fu_815_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal src_kernel_win_0_va_fu_150 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_18_fu_154 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_19_fu_158 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_20_fu_162 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_21_fu_166 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_22_fu_170 : STD_LOGIC_VECTOR (7 downto 0);
    signal right_border_buf_0_s_fu_174 : STD_LOGIC_VECTOR (7 downto 0);
    signal col_buf_0_val_0_0_fu_856_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal right_border_buf_0_14_fu_178 : STD_LOGIC_VECTOR (7 downto 0);
    signal right_border_buf_0_15_fu_182 : STD_LOGIC_VECTOR (7 downto 0);
    signal right_border_buf_0_16_fu_186 : STD_LOGIC_VECTOR (7 downto 0);
    signal col_buf_0_val_1_0_fu_874_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal right_border_buf_0_17_fu_190 : STD_LOGIC_VECTOR (7 downto 0);
    signal right_border_buf_0_18_fu_194 : STD_LOGIC_VECTOR (7 downto 0);
    signal col_buf_0_val_2_0_fu_892_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_55_fu_386_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal t_V_cast_fu_358_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_7_fu_424_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_57_fu_430_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_10_fu_444_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal rev_fu_438_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_58_fu_456_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_assign_7_fu_464_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_p2_i497_i_fu_470_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_assign_6_1_fu_488_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_assign_6_2_fu_514_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_59_fu_484_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_13_fu_478_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_28_fu_540_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_56_fu_420_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal or_cond_i496_i_fu_450_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_30_fu_554_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_29_fu_546_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_31_fu_560_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_62_fu_510_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_61_fu_502_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_66_fu_580_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_67_fu_586_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_60_fu_494_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_41_fu_590_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_33_fu_574_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_35_fu_598_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_65_fu_536_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_64_fu_528_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_68_fu_618_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_69_fu_624_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_63_fu_520_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_42_fu_628_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_37_fu_612_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_39_fu_636_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_70_fu_666_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal t_V_2_cast_fu_650_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal ImagLoc_x_fu_682_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_71_fu_692_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_19_fu_706_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal rev3_fu_700_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_72_fu_718_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_assign_1_fu_726_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_p2_i_i_fu_732_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_p2_i_i_cast_fu_744_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal ImagLoc_x_cast_fu_688_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal p_assign_2_fu_754_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal p_assign_3_fu_760_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_19_not_fu_772_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_21_fu_748_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp7_fu_778_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp8_fu_784_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_p2_i_i_cast1_fu_740_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal sel_tmp_cast_fu_768_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal icmp2_fu_676_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal col_assign_cast_fu_812_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_24_fu_845_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_25_fu_863_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_26_fu_881_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_32_fu_935_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_36_fu_953_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_40_fu_971_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_0_cast_fu_995_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal r_V_s_fu_999_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fu_1252_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal r_V_50_1_fu_1045_p0 : STD_LOGIC_VECTOR (2 downto 0);
    signal r_V_50_1_fu_1045_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_50_1_fu_1045_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_370_1_cast_cast_fu_1050_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal sum_V_0_2_cast_fu_1038_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal r_V_50_1_2_fu_1070_p0 : STD_LOGIC_VECTOR (3 downto 0);
    signal r_V_50_1_2_fu_1070_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_77_fu_1058_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_76_fu_1054_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_50_2_fu_1089_p0 : STD_LOGIC_VECTOR (1 downto 0);
    signal r_V_50_2_fu_1089_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_50_2_fu_1089_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal r_V_50_2_1_fu_1102_p0 : STD_LOGIC_VECTOR (2 downto 0);
    signal r_V_50_2_1_fu_1102_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_50_2_1_fu_1102_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_370_2_2_cast_cas_fu_1111_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp5_fu_1114_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp5_cast_fu_1120_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_43_fu_1079_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_78_fu_1075_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_80_fu_1107_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp3_fu_1165_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp4_cast_fu_1169_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_Val2_s_fu_1172_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp7_fu_1186_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_s_fu_1178_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_44_fu_1195_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal not_i_i_fu_1211_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i_i_fu_1205_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal overflow_fu_1217_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1_i_i_fu_1231_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_mux_i_i_cast_fu_1223_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_1_fu_1190_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1245_p0 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fu_1245_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1252_p0 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fu_1252_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_block_pp0 : BOOLEAN;
    signal ap_enable_operation_135 : BOOLEAN;
    signal ap_enable_state4_pp0_iter1_stage0 : BOOLEAN;
    signal ap_enable_operation_152 : BOOLEAN;
    signal ap_enable_state5_pp0_iter2_stage0 : BOOLEAN;
    signal ap_predicate_op166_store_state5 : BOOLEAN;
    signal ap_enable_operation_166 : BOOLEAN;
    signal ap_predicate_op173_store_state5 : BOOLEAN;
    signal ap_enable_operation_173 : BOOLEAN;
    signal ap_enable_operation_138 : BOOLEAN;
    signal ap_enable_operation_155 : BOOLEAN;
    signal ap_predicate_op164_store_state5 : BOOLEAN;
    signal ap_enable_operation_164 : BOOLEAN;
    signal ap_predicate_op171_store_state5 : BOOLEAN;
    signal ap_enable_operation_171 : BOOLEAN;
    signal ap_predicate_op140_load_state4 : BOOLEAN;
    signal ap_enable_operation_140 : BOOLEAN;
    signal ap_predicate_op158_load_state5 : BOOLEAN;
    signal ap_enable_operation_158 : BOOLEAN;
    signal ap_predicate_op162_store_state5 : BOOLEAN;
    signal ap_enable_operation_162 : BOOLEAN;
    signal ap_predicate_op170_store_state5 : BOOLEAN;
    signal ap_enable_operation_170 : BOOLEAN;
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal grp_fu_1245_p10 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_1252_p10 : STD_LOGIC_VECTOR (9 downto 0);
    signal r_V_50_1_2_fu_1070_p10 : STD_LOGIC_VECTOR (11 downto 0);
    signal r_V_50_1_fu_1045_p10 : STD_LOGIC_VECTOR (10 downto 0);
    signal r_V_50_2_1_fu_1102_p10 : STD_LOGIC_VECTOR (10 downto 0);
    signal r_V_50_2_fu_1089_p10 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_condition_1006 : BOOLEAN;

    component sobel_hls_mux_32_hbi IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (7 downto 0);
        din3 : IN STD_LOGIC_VECTOR (1 downto 0);
        dout : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component sobel_hls_mac_mulpcA IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (1 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (8 downto 0);
        dout : OUT STD_LOGIC_VECTOR (10 downto 0) );
    end component;


    component sobel_hls_mac_mulqcK IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (1 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (10 downto 0);
        dout : OUT STD_LOGIC_VECTOR (10 downto 0) );
    end component;


    component Filter2D_1_k_buf_eOg IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        address1 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (7 downto 0) );
    end component;



begin
    k_buf_0_val_3_U : component Filter2D_1_k_buf_eOg
    generic map (
        DataWidth => 8,
        AddressRange => 1920,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => k_buf_0_val_3_address0,
        ce0 => k_buf_0_val_3_ce0,
        q0 => k_buf_0_val_3_q0,
        address1 => k_buf_0_val_3_address1,
        ce1 => k_buf_0_val_3_ce1,
        we1 => k_buf_0_val_3_we1,
        d1 => p_src_data_stream_V_dout);

    k_buf_0_val_4_U : component Filter2D_1_k_buf_eOg
    generic map (
        DataWidth => 8,
        AddressRange => 1920,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => k_buf_0_val_4_address0,
        ce0 => k_buf_0_val_4_ce0,
        q0 => k_buf_0_val_4_q0,
        address1 => k_buf_0_val_4_address1,
        ce1 => k_buf_0_val_4_ce1,
        we1 => k_buf_0_val_4_we1,
        d1 => k_buf_0_val_4_d1);

    k_buf_0_val_5_U : component Filter2D_1_k_buf_eOg
    generic map (
        DataWidth => 8,
        AddressRange => 1920,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => k_buf_0_val_5_address0,
        ce0 => k_buf_0_val_5_ce0,
        q0 => k_buf_0_val_5_q0,
        address1 => k_buf_0_val_5_address1,
        ce1 => k_buf_0_val_5_ce1,
        we1 => k_buf_0_val_5_we1,
        d1 => k_buf_0_val_5_d1);

    sobel_hls_mux_32_hbi_U54 : component sobel_hls_mux_32_hbi
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => right_border_buf_0_s_fu_174,
        din1 => right_border_buf_0_14_fu_178,
        din2 => ap_const_lv8_0,
        din3 => col_assign_3_t_reg_1459,
        dout => tmp_24_fu_845_p5);

    sobel_hls_mux_32_hbi_U55 : component sobel_hls_mux_32_hbi
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => right_border_buf_0_16_fu_186,
        din1 => right_border_buf_0_17_fu_190,
        din2 => ap_const_lv8_0,
        din3 => col_assign_3_t_reg_1459,
        dout => tmp_25_fu_863_p5);

    sobel_hls_mux_32_hbi_U56 : component sobel_hls_mux_32_hbi
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => right_border_buf_0_18_fu_194,
        din1 => right_border_buf_0_15_fu_182,
        din2 => ap_const_lv8_0,
        din3 => col_assign_3_t_reg_1459,
        dout => tmp_26_fu_881_p5);

    sobel_hls_mux_32_hbi_U57 : component sobel_hls_mux_32_hbi
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => col_buf_0_val_0_0_fu_856_p3,
        din1 => col_buf_0_val_1_0_fu_874_p3,
        din2 => col_buf_0_val_2_0_fu_892_p3,
        din3 => row_assign_10_0_t_reg_1404,
        dout => tmp_32_fu_935_p5);

    sobel_hls_mux_32_hbi_U58 : component sobel_hls_mux_32_hbi
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => col_buf_0_val_0_0_fu_856_p3,
        din1 => col_buf_0_val_1_0_fu_874_p3,
        din2 => col_buf_0_val_2_0_fu_892_p3,
        din3 => row_assign_10_1_t_reg_1409,
        dout => tmp_36_fu_953_p5);

    sobel_hls_mux_32_hbi_U59 : component sobel_hls_mux_32_hbi
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => col_buf_0_val_0_0_fu_856_p3,
        din1 => col_buf_0_val_1_0_fu_874_p3,
        din2 => col_buf_0_val_2_0_fu_892_p3,
        din3 => row_assign_10_2_t_reg_1414,
        dout => tmp_40_fu_971_p5);

    sobel_hls_mac_mulpcA_U60 : component sobel_hls_mac_mulpcA
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 2,
        din1_WIDTH => 8,
        din2_WIDTH => 9,
        dout_WIDTH => 11)
    port map (
        din0 => grp_fu_1245_p0,
        din1 => grp_fu_1245_p1,
        din2 => r_V_s_fu_999_p2,
        dout => grp_fu_1245_p3);

    sobel_hls_mac_mulqcK_U61 : component sobel_hls_mac_mulqcK
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 2,
        din1_WIDTH => 8,
        din2_WIDTH => 11,
        dout_WIDTH => 11)
    port map (
        din0 => grp_fu_1252_p0,
        din1 => grp_fu_1252_p1,
        din2 => sum_V_0_1_reg_1496,
        dout => grp_fu_1252_p3);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((exitcond460_i_fu_654_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((exitcond461_i_fu_362_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp0_exit_iter2_state5)) then 
                        ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter1;
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                elsif (((exitcond461_i_fu_362_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                    ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    t_V_2_reg_323_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond460_i_fu_654_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                t_V_2_reg_323 <= j_V_fu_660_p2;
            elsif (((exitcond461_i_fu_362_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                t_V_2_reg_323 <= ap_const_lv11_0;
            end if; 
        end if;
    end process;

    t_V_reg_312_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
                t_V_reg_312 <= i_V_reg_1370;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                t_V_reg_312 <= ap_const_lv11_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond460_i_fu_654_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                brmerge_reg_1442 <= brmerge_fu_802_p2;
                or_cond_i_i_reg_1428 <= or_cond_i_i_fu_712_p2;
                or_cond_i_reg_1449 <= or_cond_i_fu_807_p2;
                tmp_73_reg_1437 <= tmp_73_fu_798_p1;
                x_reg_1432 <= x_fu_790_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                brmerge_reg_1442_pp0_iter1_reg <= brmerge_reg_1442;
                exitcond460_i_reg_1419 <= exitcond460_i_fu_654_p2;
                exitcond460_i_reg_1419_pp0_iter1_reg <= exitcond460_i_reg_1419;
                or_cond_i_i_reg_1428_pp0_iter1_reg <= or_cond_i_i_reg_1428;
                or_cond_i_reg_1449_pp0_iter1_reg <= or_cond_i_reg_1449;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond460_i_reg_1419 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                col_assign_3_t_reg_1459 <= col_assign_3_t_fu_822_p2;
                k_buf_0_val_3_addr_reg_1453 <= tmp_23_fu_815_p1(11 - 1 downto 0);
                k_buf_0_val_4_addr_reg_1466 <= tmp_23_fu_815_p1(11 - 1 downto 0);
                k_buf_0_val_5_addr_reg_1472 <= tmp_23_fu_815_p1(11 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                exitcond460_i_reg_1419_pp0_iter2_reg <= exitcond460_i_reg_1419_pp0_iter1_reg;
                or_cond_i_reg_1449_pp0_iter2_reg <= or_cond_i_reg_1449_pp0_iter1_reg;
                or_cond_i_reg_1449_pp0_iter3_reg <= or_cond_i_reg_1449_pp0_iter2_reg;
                or_cond_i_reg_1449_pp0_iter4_reg <= or_cond_i_reg_1449_pp0_iter3_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                i_V_reg_1370 <= i_V_fu_368_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond461_i_fu_362_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                icmp_reg_1384 <= icmp_fu_396_p2;
                row_assign_10_0_t_reg_1404 <= row_assign_10_0_t_fu_568_p2;
                row_assign_10_1_t_reg_1409 <= row_assign_10_1_t_fu_606_p2;
                row_assign_10_2_t_reg_1414 <= row_assign_10_2_t_fu_644_p2;
                tmp_284_0_not_reg_1379 <= tmp_284_0_not_fu_380_p2;
                tmp_2_reg_1389 <= tmp_2_fu_402_p2;
                tmp_328_1_reg_1393 <= tmp_328_1_fu_408_p2;
                tmp_3_reg_1397 <= tmp_3_fu_414_p2;
                tmp_s_reg_1375 <= tmp_s_fu_374_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((or_cond_i_reg_1449_pp0_iter3_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                p_Val2_6_reg_1531 <= p_Val2_6_fu_1237_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((or_cond_i_reg_1449_pp0_iter2_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                r_V_50_1_2_reg_1506 <= r_V_50_1_2_fu_1070_p2;
                sum_V_1_1_reg_1501 <= sum_V_1_1_fu_1061_p2;
                tmp4_reg_1516 <= tmp4_fu_1124_p2;
                tmp6_reg_1521 <= tmp6_fu_1130_p2;
                tmp8_reg_1526 <= tmp8_fu_1136_p2;
                tmp_79_reg_1511 <= tmp_79_fu_1094_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_s_reg_1375 = ap_const_lv1_1) and (icmp_reg_1384 = ap_const_lv1_1) and (or_cond_i_i_reg_1428_pp0_iter1_reg = ap_const_lv1_1) and (exitcond460_i_reg_1419_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                right_border_buf_0_14_fu_178 <= right_border_buf_0_s_fu_174;
                right_border_buf_0_15_fu_182 <= right_border_buf_0_18_fu_194;
                right_border_buf_0_16_fu_186 <= col_buf_0_val_1_0_fu_874_p3;
                right_border_buf_0_17_fu_190 <= right_border_buf_0_16_fu_186;
                right_border_buf_0_18_fu_194 <= col_buf_0_val_2_0_fu_892_p3;
                right_border_buf_0_s_fu_174 <= col_buf_0_val_0_0_fu_856_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond460_i_reg_1419_pp0_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                src_kernel_win_0_va_18_fu_154 <= src_kernel_win_0_va_fu_150;
                src_kernel_win_0_va_19_fu_158 <= src_kernel_win_0_va_24_reg_1485;
                src_kernel_win_0_va_20_fu_162 <= src_kernel_win_0_va_19_fu_158;
                src_kernel_win_0_va_fu_150 <= src_kernel_win_0_va_23_reg_1478;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond460_i_reg_1419_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                src_kernel_win_0_va_21_fu_166 <= src_kernel_win_0_va_25_fu_982_p3;
                src_kernel_win_0_va_22_fu_170 <= src_kernel_win_0_va_21_fu_166;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond460_i_reg_1419_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                src_kernel_win_0_va_23_reg_1478 <= src_kernel_win_0_va_23_fu_946_p3;
                src_kernel_win_0_va_24_reg_1485 <= src_kernel_win_0_va_24_fu_964_p3;
                src_kernel_win_0_va_25_reg_1491 <= src_kernel_win_0_va_25_fu_982_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((or_cond_i_reg_1449_pp0_iter1_reg = ap_const_lv1_1) and (exitcond460_i_reg_1419_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                sum_V_0_1_reg_1496 <= grp_fu_1245_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                tmp_369_0_1_cast_reg_1336 <= tmp_369_0_1_cast_fu_334_p1;
                tmp_369_0_2_cast_reg_1341 <= tmp_369_0_2_cast_fu_338_p1;
                    tmp_369_1_2_cast_reg_1351(3 downto 0) <= tmp_369_1_2_cast_fu_346_p1(3 downto 0);
                tmp_369_1_cast_reg_1346 <= tmp_369_1_cast_fu_342_p1;
                    tmp_369_2_1_cast_reg_1361(2 downto 0) <= tmp_369_2_1_cast_fu_354_p1(2 downto 0);
                tmp_369_2_cast_reg_1356 <= tmp_369_2_cast_fu_350_p1;
            end if;
        end if;
    end process;
    tmp_369_1_2_cast_reg_1351(11 downto 4) <= "00000000";
    tmp_369_2_1_cast_reg_1361(10 downto 3) <= "00000000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter5, exitcond461_i_fu_362_p2, ap_CS_fsm_state2, ap_block_pp0_stage0_subdone, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((exitcond461_i_fu_362_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) and not(((ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((((ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state9;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state2;
            when others =>  
                ap_NS_fsm <= "XXXX";
        end case;
    end process;
        ImagLoc_x_cast_fu_688_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ImagLoc_x_fu_682_p2),13));

    ImagLoc_x_fu_682_p2 <= std_logic_vector(signed(ap_const_lv12_FFF) + signed(t_V_2_cast_fu_650_p1));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(2);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state9 <= ap_CS_fsm(3);

    ap_block_pp0_assign_proc : process(ap_CS_fsm, ap_block_pp0_stage0_subdone)
    begin
                ap_block_pp0 <= ((ap_ST_fsm_pp0_stage0 = ap_CS_fsm) and (ap_const_boolean_1 = ap_block_pp0_stage0_subdone));
    end process;

        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(p_src_data_stream_V_empty_n, p_dst_data_stream_V_full_n, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter5, or_cond_i_reg_1449_pp0_iter4_reg, ap_predicate_op161_read_state5, ap_predicate_op172_read_state5)
    begin
                ap_block_pp0_stage0_01001 <= (((or_cond_i_reg_1449_pp0_iter4_reg = ap_const_lv1_1) and (p_dst_data_stream_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (((p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op172_read_state5 = ap_const_boolean_1)) or ((p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op161_read_state5 = ap_const_boolean_1)))));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(p_src_data_stream_V_empty_n, p_dst_data_stream_V_full_n, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter5, or_cond_i_reg_1449_pp0_iter4_reg, ap_predicate_op161_read_state5, ap_predicate_op172_read_state5)
    begin
                ap_block_pp0_stage0_11001 <= (((or_cond_i_reg_1449_pp0_iter4_reg = ap_const_lv1_1) and (p_dst_data_stream_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (((p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op172_read_state5 = ap_const_boolean_1)) or ((p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op161_read_state5 = ap_const_boolean_1)))));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(p_src_data_stream_V_empty_n, p_dst_data_stream_V_full_n, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter5, or_cond_i_reg_1449_pp0_iter4_reg, ap_predicate_op161_read_state5, ap_predicate_op172_read_state5)
    begin
                ap_block_pp0_stage0_subdone <= (((or_cond_i_reg_1449_pp0_iter4_reg = ap_const_lv1_1) and (p_dst_data_stream_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (((p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op172_read_state5 = ap_const_boolean_1)) or ((p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op161_read_state5 = ap_const_boolean_1)))));
    end process;

        ap_block_state3_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state5_pp0_stage0_iter2_assign_proc : process(p_src_data_stream_V_empty_n, ap_predicate_op161_read_state5, ap_predicate_op172_read_state5)
    begin
                ap_block_state5_pp0_stage0_iter2 <= (((p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op172_read_state5 = ap_const_boolean_1)) or ((p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op161_read_state5 = ap_const_boolean_1)));
    end process;

        ap_block_state6_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state8_pp0_stage0_iter5_assign_proc : process(p_dst_data_stream_V_full_n, or_cond_i_reg_1449_pp0_iter4_reg)
    begin
                ap_block_state8_pp0_stage0_iter5 <= ((or_cond_i_reg_1449_pp0_iter4_reg = ap_const_lv1_1) and (p_dst_data_stream_V_full_n = ap_const_logic_0));
    end process;


    ap_condition_1006_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0, exitcond460_i_reg_1419_pp0_iter1_reg, or_cond_i_i_reg_1428_pp0_iter1_reg)
    begin
                ap_condition_1006 <= ((or_cond_i_i_reg_1428_pp0_iter1_reg = ap_const_lv1_1) and (exitcond460_i_reg_1419_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1));
    end process;


    ap_condition_pp0_exit_iter2_state5_assign_proc : process(ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) then 
            ap_condition_pp0_exit_iter2_state5 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter2_state5 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, exitcond461_i_fu_362_p2, ap_CS_fsm_state2)
    begin
        if ((((exitcond461_i_fu_362_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_enable_operation_135_assign_proc : process(exitcond460_i_reg_1419)
    begin
                ap_enable_operation_135 <= (exitcond460_i_reg_1419 = ap_const_lv1_0);
    end process;


    ap_enable_operation_138_assign_proc : process(exitcond460_i_reg_1419)
    begin
                ap_enable_operation_138 <= (exitcond460_i_reg_1419 = ap_const_lv1_0);
    end process;


    ap_enable_operation_140_assign_proc : process(ap_predicate_op140_load_state4)
    begin
                ap_enable_operation_140 <= (ap_predicate_op140_load_state4 = ap_const_boolean_1);
    end process;


    ap_enable_operation_152_assign_proc : process(exitcond460_i_reg_1419_pp0_iter1_reg)
    begin
                ap_enable_operation_152 <= (exitcond460_i_reg_1419_pp0_iter1_reg = ap_const_lv1_0);
    end process;


    ap_enable_operation_155_assign_proc : process(exitcond460_i_reg_1419_pp0_iter1_reg)
    begin
                ap_enable_operation_155 <= (exitcond460_i_reg_1419_pp0_iter1_reg = ap_const_lv1_0);
    end process;


    ap_enable_operation_158_assign_proc : process(ap_predicate_op158_load_state5)
    begin
                ap_enable_operation_158 <= (ap_predicate_op158_load_state5 = ap_const_boolean_1);
    end process;


    ap_enable_operation_162_assign_proc : process(ap_predicate_op162_store_state5)
    begin
                ap_enable_operation_162 <= (ap_predicate_op162_store_state5 = ap_const_boolean_1);
    end process;


    ap_enable_operation_164_assign_proc : process(ap_predicate_op164_store_state5)
    begin
                ap_enable_operation_164 <= (ap_predicate_op164_store_state5 = ap_const_boolean_1);
    end process;


    ap_enable_operation_166_assign_proc : process(ap_predicate_op166_store_state5)
    begin
                ap_enable_operation_166 <= (ap_predicate_op166_store_state5 = ap_const_boolean_1);
    end process;


    ap_enable_operation_170_assign_proc : process(ap_predicate_op170_store_state5)
    begin
                ap_enable_operation_170 <= (ap_predicate_op170_store_state5 = ap_const_boolean_1);
    end process;


    ap_enable_operation_171_assign_proc : process(ap_predicate_op171_store_state5)
    begin
                ap_enable_operation_171 <= (ap_predicate_op171_store_state5 = ap_const_boolean_1);
    end process;


    ap_enable_operation_173_assign_proc : process(ap_predicate_op173_store_state5)
    begin
                ap_enable_operation_173 <= (ap_predicate_op173_store_state5 = ap_const_boolean_1);
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_enable_state4_pp0_iter1_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1)
    begin
                ap_enable_state4_pp0_iter1_stage0 <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_enable_state5_pp0_iter2_stage0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage0)
    begin
                ap_enable_state5_pp0_iter2_stage0 <= ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4)
    begin
        if (((ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_predicate_op140_load_state4_assign_proc : process(exitcond460_i_reg_1419, brmerge_reg_1442)
    begin
                ap_predicate_op140_load_state4 <= ((brmerge_reg_1442 = ap_const_lv1_1) and (exitcond460_i_reg_1419 = ap_const_lv1_0));
    end process;


    ap_predicate_op158_load_state5_assign_proc : process(exitcond460_i_reg_1419_pp0_iter1_reg, brmerge_reg_1442_pp0_iter1_reg)
    begin
                ap_predicate_op158_load_state5 <= ((brmerge_reg_1442_pp0_iter1_reg = ap_const_lv1_1) and (exitcond460_i_reg_1419_pp0_iter1_reg = ap_const_lv1_0));
    end process;


    ap_predicate_op161_read_state5_assign_proc : process(exitcond460_i_reg_1419_pp0_iter1_reg, or_cond_i_i_reg_1428_pp0_iter1_reg, icmp_reg_1384)
    begin
                ap_predicate_op161_read_state5 <= ((or_cond_i_i_reg_1428_pp0_iter1_reg = ap_const_lv1_1) and (icmp_reg_1384 = ap_const_lv1_0) and (exitcond460_i_reg_1419_pp0_iter1_reg = ap_const_lv1_0));
    end process;


    ap_predicate_op162_store_state5_assign_proc : process(exitcond460_i_reg_1419_pp0_iter1_reg, or_cond_i_i_reg_1428_pp0_iter1_reg, icmp_reg_1384, tmp_2_reg_1389)
    begin
                ap_predicate_op162_store_state5 <= ((tmp_2_reg_1389 = ap_const_lv1_1) and (or_cond_i_i_reg_1428_pp0_iter1_reg = ap_const_lv1_1) and (icmp_reg_1384 = ap_const_lv1_0) and (exitcond460_i_reg_1419_pp0_iter1_reg = ap_const_lv1_0));
    end process;


    ap_predicate_op164_store_state5_assign_proc : process(exitcond460_i_reg_1419_pp0_iter1_reg, or_cond_i_i_reg_1428_pp0_iter1_reg, icmp_reg_1384, tmp_328_1_reg_1393)
    begin
                ap_predicate_op164_store_state5 <= ((tmp_328_1_reg_1393 = ap_const_lv1_1) and (or_cond_i_i_reg_1428_pp0_iter1_reg = ap_const_lv1_1) and (icmp_reg_1384 = ap_const_lv1_0) and (exitcond460_i_reg_1419_pp0_iter1_reg = ap_const_lv1_0));
    end process;


    ap_predicate_op166_store_state5_assign_proc : process(exitcond460_i_reg_1419_pp0_iter1_reg, or_cond_i_i_reg_1428_pp0_iter1_reg, icmp_reg_1384, tmp_2_reg_1389)
    begin
                ap_predicate_op166_store_state5 <= ((tmp_2_reg_1389 = ap_const_lv1_1) and (or_cond_i_i_reg_1428_pp0_iter1_reg = ap_const_lv1_1) and (icmp_reg_1384 = ap_const_lv1_0) and (exitcond460_i_reg_1419_pp0_iter1_reg = ap_const_lv1_0));
    end process;


    ap_predicate_op170_store_state5_assign_proc : process(exitcond460_i_reg_1419_pp0_iter1_reg, or_cond_i_i_reg_1428_pp0_iter1_reg, icmp_reg_1384, tmp_s_reg_1375)
    begin
                ap_predicate_op170_store_state5 <= ((tmp_s_reg_1375 = ap_const_lv1_1) and (icmp_reg_1384 = ap_const_lv1_1) and (or_cond_i_i_reg_1428_pp0_iter1_reg = ap_const_lv1_1) and (exitcond460_i_reg_1419_pp0_iter1_reg = ap_const_lv1_0));
    end process;


    ap_predicate_op171_store_state5_assign_proc : process(exitcond460_i_reg_1419_pp0_iter1_reg, or_cond_i_i_reg_1428_pp0_iter1_reg, icmp_reg_1384, tmp_s_reg_1375)
    begin
                ap_predicate_op171_store_state5 <= ((tmp_s_reg_1375 = ap_const_lv1_1) and (icmp_reg_1384 = ap_const_lv1_1) and (or_cond_i_i_reg_1428_pp0_iter1_reg = ap_const_lv1_1) and (exitcond460_i_reg_1419_pp0_iter1_reg = ap_const_lv1_0));
    end process;


    ap_predicate_op172_read_state5_assign_proc : process(exitcond460_i_reg_1419_pp0_iter1_reg, or_cond_i_i_reg_1428_pp0_iter1_reg, icmp_reg_1384, tmp_s_reg_1375)
    begin
                ap_predicate_op172_read_state5 <= ((tmp_s_reg_1375 = ap_const_lv1_1) and (icmp_reg_1384 = ap_const_lv1_1) and (or_cond_i_i_reg_1428_pp0_iter1_reg = ap_const_lv1_1) and (exitcond460_i_reg_1419_pp0_iter1_reg = ap_const_lv1_0));
    end process;


    ap_predicate_op173_store_state5_assign_proc : process(exitcond460_i_reg_1419_pp0_iter1_reg, or_cond_i_i_reg_1428_pp0_iter1_reg, icmp_reg_1384, tmp_s_reg_1375)
    begin
                ap_predicate_op173_store_state5 <= ((tmp_s_reg_1375 = ap_const_lv1_1) and (icmp_reg_1384 = ap_const_lv1_1) and (or_cond_i_i_reg_1428_pp0_iter1_reg = ap_const_lv1_1) and (exitcond460_i_reg_1419_pp0_iter1_reg = ap_const_lv1_0));
    end process;


    ap_ready_assign_proc : process(exitcond461_i_fu_362_p2, ap_CS_fsm_state2)
    begin
        if (((exitcond461_i_fu_362_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    brmerge_fu_802_p2 <= (tmp_284_0_not_reg_1379 or tmp_19_fu_706_p2);
    col_assign_3_t_fu_822_p2 <= (tmp_73_reg_1437 xor ap_const_lv2_3);
        col_assign_cast_fu_812_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(x_reg_1432),32));

    col_buf_0_val_0_0_fu_856_p3 <= 
        k_buf_0_val_3_q0 when (brmerge_reg_1442_pp0_iter1_reg(0) = '1') else 
        tmp_24_fu_845_p5;
    col_buf_0_val_1_0_fu_874_p3 <= 
        k_buf_0_val_4_q0 when (brmerge_reg_1442_pp0_iter1_reg(0) = '1') else 
        tmp_25_fu_863_p5;
    col_buf_0_val_2_0_fu_892_p3 <= 
        k_buf_0_val_5_q0 when (brmerge_reg_1442_pp0_iter1_reg(0) = '1') else 
        tmp_26_fu_881_p5;
    exitcond460_i_fu_654_p2 <= "1" when (t_V_2_reg_323 = ap_const_lv11_782) else "0";
    exitcond461_i_fu_362_p2 <= "1" when (t_V_reg_312 = ap_const_lv11_43A) else "0";
    grp_fu_1245_p0 <= tmp_369_0_1_cast_reg_1336(2 - 1 downto 0);
    grp_fu_1245_p1 <= grp_fu_1245_p10(8 - 1 downto 0);
    grp_fu_1245_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_kernel_win_0_va_21_fu_166),10));
    grp_fu_1252_p0 <= tmp_369_0_2_cast_reg_1341(2 - 1 downto 0);
    grp_fu_1252_p1 <= grp_fu_1252_p10(8 - 1 downto 0);
    grp_fu_1252_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_kernel_win_0_va_25_reg_1491),10));
    i_V_fu_368_p2 <= std_logic_vector(unsigned(t_V_reg_312) + unsigned(ap_const_lv11_1));
    icmp2_fu_676_p2 <= "0" when (tmp_70_fu_666_p4 = ap_const_lv10_0) else "1";
    icmp_fu_396_p2 <= "0" when (tmp_55_fu_386_p4 = ap_const_lv10_0) else "1";
    j_V_fu_660_p2 <= std_logic_vector(unsigned(t_V_2_reg_323) + unsigned(ap_const_lv11_1));
    k_buf_0_val_3_address0 <= tmp_23_fu_815_p1(11 - 1 downto 0);
    k_buf_0_val_3_address1 <= k_buf_0_val_3_addr_reg_1453;

    k_buf_0_val_3_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            k_buf_0_val_3_ce0 <= ap_const_logic_1;
        else 
            k_buf_0_val_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    k_buf_0_val_3_ce1_assign_proc : process(ap_enable_reg_pp0_iter2, exitcond460_i_reg_1419_pp0_iter1_reg, or_cond_i_i_reg_1428_pp0_iter1_reg, icmp_reg_1384, tmp_s_reg_1375, tmp_2_reg_1389, ap_block_pp0_stage0_11001)
    begin
        if ((((tmp_s_reg_1375 = ap_const_lv1_1) and (icmp_reg_1384 = ap_const_lv1_1) and (or_cond_i_i_reg_1428_pp0_iter1_reg = ap_const_lv1_1) and (exitcond460_i_reg_1419_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((tmp_2_reg_1389 = ap_const_lv1_1) and (or_cond_i_i_reg_1428_pp0_iter1_reg = ap_const_lv1_1) and (icmp_reg_1384 = ap_const_lv1_0) and (exitcond460_i_reg_1419_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            k_buf_0_val_3_ce1 <= ap_const_logic_1;
        else 
            k_buf_0_val_3_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    k_buf_0_val_3_we1_assign_proc : process(ap_enable_reg_pp0_iter2, exitcond460_i_reg_1419_pp0_iter1_reg, or_cond_i_i_reg_1428_pp0_iter1_reg, icmp_reg_1384, tmp_s_reg_1375, tmp_2_reg_1389, ap_block_pp0_stage0_11001)
    begin
        if ((((tmp_s_reg_1375 = ap_const_lv1_1) and (icmp_reg_1384 = ap_const_lv1_1) and (or_cond_i_i_reg_1428_pp0_iter1_reg = ap_const_lv1_1) and (exitcond460_i_reg_1419_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((tmp_2_reg_1389 = ap_const_lv1_1) and (or_cond_i_i_reg_1428_pp0_iter1_reg = ap_const_lv1_1) and (icmp_reg_1384 = ap_const_lv1_0) and (exitcond460_i_reg_1419_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            k_buf_0_val_3_we1 <= ap_const_logic_1;
        else 
            k_buf_0_val_3_we1 <= ap_const_logic_0;
        end if; 
    end process;

    k_buf_0_val_4_address0 <= tmp_23_fu_815_p1(11 - 1 downto 0);
    k_buf_0_val_4_address1 <= k_buf_0_val_4_addr_reg_1466;

    k_buf_0_val_4_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            k_buf_0_val_4_ce0 <= ap_const_logic_1;
        else 
            k_buf_0_val_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    k_buf_0_val_4_ce1_assign_proc : process(ap_enable_reg_pp0_iter2, exitcond460_i_reg_1419_pp0_iter1_reg, or_cond_i_i_reg_1428_pp0_iter1_reg, icmp_reg_1384, tmp_s_reg_1375, tmp_328_1_reg_1393, ap_block_pp0_stage0_11001)
    begin
        if ((((tmp_s_reg_1375 = ap_const_lv1_1) and (icmp_reg_1384 = ap_const_lv1_1) and (or_cond_i_i_reg_1428_pp0_iter1_reg = ap_const_lv1_1) and (exitcond460_i_reg_1419_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((tmp_328_1_reg_1393 = ap_const_lv1_1) and (or_cond_i_i_reg_1428_pp0_iter1_reg = ap_const_lv1_1) and (icmp_reg_1384 = ap_const_lv1_0) and (exitcond460_i_reg_1419_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            k_buf_0_val_4_ce1 <= ap_const_logic_1;
        else 
            k_buf_0_val_4_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    k_buf_0_val_4_d1_assign_proc : process(p_src_data_stream_V_dout, icmp_reg_1384, tmp_s_reg_1375, tmp_328_1_reg_1393, k_buf_0_val_3_q0, ap_condition_1006)
    begin
        if ((ap_const_boolean_1 = ap_condition_1006)) then
            if (((tmp_s_reg_1375 = ap_const_lv1_1) and (icmp_reg_1384 = ap_const_lv1_1))) then 
                k_buf_0_val_4_d1 <= k_buf_0_val_3_q0;
            elsif (((tmp_328_1_reg_1393 = ap_const_lv1_1) and (icmp_reg_1384 = ap_const_lv1_0))) then 
                k_buf_0_val_4_d1 <= p_src_data_stream_V_dout;
            else 
                k_buf_0_val_4_d1 <= "XXXXXXXX";
            end if;
        else 
            k_buf_0_val_4_d1 <= "XXXXXXXX";
        end if; 
    end process;


    k_buf_0_val_4_we1_assign_proc : process(ap_enable_reg_pp0_iter2, exitcond460_i_reg_1419_pp0_iter1_reg, or_cond_i_i_reg_1428_pp0_iter1_reg, icmp_reg_1384, tmp_s_reg_1375, tmp_328_1_reg_1393, ap_block_pp0_stage0_11001)
    begin
        if ((((tmp_s_reg_1375 = ap_const_lv1_1) and (icmp_reg_1384 = ap_const_lv1_1) and (or_cond_i_i_reg_1428_pp0_iter1_reg = ap_const_lv1_1) and (exitcond460_i_reg_1419_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((tmp_328_1_reg_1393 = ap_const_lv1_1) and (or_cond_i_i_reg_1428_pp0_iter1_reg = ap_const_lv1_1) and (icmp_reg_1384 = ap_const_lv1_0) and (exitcond460_i_reg_1419_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            k_buf_0_val_4_we1 <= ap_const_logic_1;
        else 
            k_buf_0_val_4_we1 <= ap_const_logic_0;
        end if; 
    end process;

    k_buf_0_val_5_address0 <= tmp_23_fu_815_p1(11 - 1 downto 0);
    k_buf_0_val_5_address1 <= k_buf_0_val_5_addr_reg_1472;

    k_buf_0_val_5_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            k_buf_0_val_5_ce0 <= ap_const_logic_1;
        else 
            k_buf_0_val_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    k_buf_0_val_5_ce1_assign_proc : process(ap_enable_reg_pp0_iter2, exitcond460_i_reg_1419_pp0_iter1_reg, or_cond_i_i_reg_1428_pp0_iter1_reg, icmp_reg_1384, tmp_s_reg_1375, tmp_2_reg_1389, ap_block_pp0_stage0_11001)
    begin
        if ((((tmp_s_reg_1375 = ap_const_lv1_1) and (icmp_reg_1384 = ap_const_lv1_1) and (or_cond_i_i_reg_1428_pp0_iter1_reg = ap_const_lv1_1) and (exitcond460_i_reg_1419_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((tmp_2_reg_1389 = ap_const_lv1_1) and (or_cond_i_i_reg_1428_pp0_iter1_reg = ap_const_lv1_1) and (icmp_reg_1384 = ap_const_lv1_0) and (exitcond460_i_reg_1419_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            k_buf_0_val_5_ce1 <= ap_const_logic_1;
        else 
            k_buf_0_val_5_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    k_buf_0_val_5_d1_assign_proc : process(p_src_data_stream_V_dout, icmp_reg_1384, tmp_s_reg_1375, tmp_2_reg_1389, k_buf_0_val_4_q0, ap_condition_1006)
    begin
        if ((ap_const_boolean_1 = ap_condition_1006)) then
            if (((tmp_s_reg_1375 = ap_const_lv1_1) and (icmp_reg_1384 = ap_const_lv1_1))) then 
                k_buf_0_val_5_d1 <= k_buf_0_val_4_q0;
            elsif (((tmp_2_reg_1389 = ap_const_lv1_1) and (icmp_reg_1384 = ap_const_lv1_0))) then 
                k_buf_0_val_5_d1 <= p_src_data_stream_V_dout;
            else 
                k_buf_0_val_5_d1 <= "XXXXXXXX";
            end if;
        else 
            k_buf_0_val_5_d1 <= "XXXXXXXX";
        end if; 
    end process;


    k_buf_0_val_5_we1_assign_proc : process(ap_enable_reg_pp0_iter2, exitcond460_i_reg_1419_pp0_iter1_reg, or_cond_i_i_reg_1428_pp0_iter1_reg, icmp_reg_1384, tmp_s_reg_1375, tmp_2_reg_1389, ap_block_pp0_stage0_11001)
    begin
        if ((((tmp_s_reg_1375 = ap_const_lv1_1) and (icmp_reg_1384 = ap_const_lv1_1) and (or_cond_i_i_reg_1428_pp0_iter1_reg = ap_const_lv1_1) and (exitcond460_i_reg_1419_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((tmp_2_reg_1389 = ap_const_lv1_1) and (or_cond_i_i_reg_1428_pp0_iter1_reg = ap_const_lv1_1) and (icmp_reg_1384 = ap_const_lv1_0) and (exitcond460_i_reg_1419_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            k_buf_0_val_5_we1 <= ap_const_logic_1;
        else 
            k_buf_0_val_5_we1 <= ap_const_logic_0;
        end if; 
    end process;

    not_i_i_fu_1211_p2 <= "0" when (tmp_44_fu_1195_p4 = ap_const_lv4_0) else "1";
    or_cond_i496_i_fu_450_p2 <= (tmp_10_fu_444_p2 and rev_fu_438_p2);
    or_cond_i_fu_807_p2 <= (icmp_reg_1384 and icmp2_fu_676_p2);
    or_cond_i_i_fu_712_p2 <= (tmp_19_fu_706_p2 and rev3_fu_700_p2);
    overflow_fu_1217_p2 <= (tmp_i_i_fu_1205_p2 and not_i_i_fu_1211_p2);
    p_Result_s_fu_1178_p3 <= p_Val2_s_fu_1172_p2(11 downto 11);
    p_Val2_1_fu_1190_p2 <= std_logic_vector(unsigned(tmp6_reg_1521) + unsigned(tmp7_fu_1186_p2));
    p_Val2_6_fu_1237_p3 <= 
        p_mux_i_i_cast_fu_1223_p3 when (tmp_1_i_i_fu_1231_p2(0) = '1') else 
        p_Val2_1_fu_1190_p2;
    p_Val2_s_fu_1172_p2 <= std_logic_vector(unsigned(tmp3_fu_1165_p2) + unsigned(tmp4_cast_fu_1169_p1));
    p_assign_1_fu_726_p2 <= std_logic_vector(unsigned(ap_const_lv12_1) - unsigned(t_V_2_cast_fu_650_p1));
    p_assign_2_fu_754_p2 <= std_logic_vector(unsigned(ap_const_lv13_EFE) - unsigned(p_p2_i_i_cast_fu_744_p1));
    p_assign_3_fu_760_p3 <= 
        ImagLoc_x_cast_fu_688_p1 when (or_cond_i_i_fu_712_p2(0) = '1') else 
        p_assign_2_fu_754_p2;
    p_assign_6_1_fu_488_p2 <= std_logic_vector(signed(ap_const_lv12_FFE) + signed(t_V_cast_fu_358_p1));
    p_assign_6_2_fu_514_p2 <= std_logic_vector(signed(ap_const_lv12_FFD) + signed(t_V_cast_fu_358_p1));
    p_assign_7_fu_464_p2 <= std_logic_vector(unsigned(ap_const_lv12_1) - unsigned(t_V_cast_fu_358_p1));

    p_dst_data_stream_V_blk_n_assign_proc : process(p_dst_data_stream_V_full_n, ap_block_pp0_stage0, ap_enable_reg_pp0_iter5, or_cond_i_reg_1449_pp0_iter4_reg)
    begin
        if (((or_cond_i_reg_1449_pp0_iter4_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))) then 
            p_dst_data_stream_V_blk_n <= p_dst_data_stream_V_full_n;
        else 
            p_dst_data_stream_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    p_dst_data_stream_V_din <= p_Val2_6_reg_1531;

    p_dst_data_stream_V_write_assign_proc : process(ap_enable_reg_pp0_iter5, or_cond_i_reg_1449_pp0_iter4_reg, ap_block_pp0_stage0_11001)
    begin
        if (((or_cond_i_reg_1449_pp0_iter4_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            p_dst_data_stream_V_write <= ap_const_logic_1;
        else 
            p_dst_data_stream_V_write <= ap_const_logic_0;
        end if; 
    end process;

    p_mux_i_i_cast_fu_1223_p3 <= 
        ap_const_lv8_FF when (tmp_i_i_fu_1205_p2(0) = '1') else 
        ap_const_lv8_0;
    p_p2_i497_i_fu_470_p3 <= 
        p_assign_7_fu_464_p2 when (tmp_58_fu_456_p3(0) = '1') else 
        tmp_7_fu_424_p2;
        p_p2_i_i_cast1_fu_740_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_p2_i_i_fu_732_p3),14));

        p_p2_i_i_cast_fu_744_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_p2_i_i_fu_732_p3),13));

    p_p2_i_i_fu_732_p3 <= 
        p_assign_1_fu_726_p2 when (tmp_72_fu_718_p3(0) = '1') else 
        ImagLoc_x_fu_682_p2;

    p_src_data_stream_V_blk_n_assign_proc : process(p_src_data_stream_V_empty_n, ap_enable_reg_pp0_iter2, ap_block_pp0_stage0, exitcond460_i_reg_1419_pp0_iter1_reg, or_cond_i_i_reg_1428_pp0_iter1_reg, icmp_reg_1384, tmp_s_reg_1375)
    begin
        if ((((tmp_s_reg_1375 = ap_const_lv1_1) and (icmp_reg_1384 = ap_const_lv1_1) and (or_cond_i_i_reg_1428_pp0_iter1_reg = ap_const_lv1_1) and (exitcond460_i_reg_1419_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)) or ((or_cond_i_i_reg_1428_pp0_iter1_reg = ap_const_lv1_1) and (icmp_reg_1384 = ap_const_lv1_0) and (exitcond460_i_reg_1419_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)))) then 
            p_src_data_stream_V_blk_n <= p_src_data_stream_V_empty_n;
        else 
            p_src_data_stream_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    p_src_data_stream_V_read_assign_proc : process(ap_enable_reg_pp0_iter2, ap_predicate_op161_read_state5, ap_predicate_op172_read_state5, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_op172_read_state5 = ap_const_boolean_1)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_op161_read_state5 = ap_const_boolean_1)))) then 
            p_src_data_stream_V_read <= ap_const_logic_1;
        else 
            p_src_data_stream_V_read <= ap_const_logic_0;
        end if; 
    end process;

    r_V_0_cast_fu_995_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_kernel_win_0_va_22_fu_170),9));
    r_V_50_1_2_fu_1070_p0 <= tmp_369_1_2_cast_reg_1351(4 - 1 downto 0);
    r_V_50_1_2_fu_1070_p1 <= r_V_50_1_2_fu_1070_p10(8 - 1 downto 0);
    r_V_50_1_2_fu_1070_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_kernel_win_0_va_24_reg_1485),12));
    r_V_50_1_2_fu_1070_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_V_50_1_2_fu_1070_p0) * unsigned(r_V_50_1_2_fu_1070_p1), 12));
    r_V_50_1_fu_1045_p0 <= tmp_369_1_cast_reg_1346(3 - 1 downto 0);
    r_V_50_1_fu_1045_p1 <= r_V_50_1_fu_1045_p10(8 - 1 downto 0);
    r_V_50_1_fu_1045_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_kernel_win_0_va_20_fu_162),11));
    r_V_50_1_fu_1045_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(r_V_50_1_fu_1045_p0) * signed('0' &r_V_50_1_fu_1045_p1))), 11));
    r_V_50_2_1_fu_1102_p0 <= tmp_369_2_1_cast_reg_1361(3 - 1 downto 0);
    r_V_50_2_1_fu_1102_p1 <= r_V_50_2_1_fu_1102_p10(8 - 1 downto 0);
    r_V_50_2_1_fu_1102_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_kernel_win_0_va_fu_150),11));
    r_V_50_2_1_fu_1102_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_V_50_2_1_fu_1102_p0) * unsigned(r_V_50_2_1_fu_1102_p1), 11));
    r_V_50_2_fu_1089_p0 <= tmp_369_2_cast_reg_1356(2 - 1 downto 0);
    r_V_50_2_fu_1089_p1 <= r_V_50_2_fu_1089_p10(8 - 1 downto 0);
    r_V_50_2_fu_1089_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_kernel_win_0_va_18_fu_154),10));
    r_V_50_2_fu_1089_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(r_V_50_2_fu_1089_p0) * signed('0' &r_V_50_2_fu_1089_p1))), 10));
    r_V_s_fu_999_p2 <= std_logic_vector(unsigned(ap_const_lv9_0) - unsigned(r_V_0_cast_fu_995_p1));
    rev3_fu_700_p2 <= (tmp_71_fu_692_p3 xor ap_const_lv1_1);
    rev_fu_438_p2 <= (tmp_57_fu_430_p3 xor ap_const_lv1_1);
    row_assign_10_0_t_fu_568_p2 <= (tmp_31_fu_560_p3 xor ap_const_lv2_3);
    row_assign_10_1_t_fu_606_p2 <= (tmp_35_fu_598_p3 xor ap_const_lv2_3);
    row_assign_10_2_t_fu_644_p2 <= (tmp_39_fu_636_p3 xor ap_const_lv2_3);
    sel_tmp7_fu_778_p2 <= (tmp_71_fu_692_p3 or tmp_19_not_fu_772_p2);
    sel_tmp8_fu_784_p2 <= (tmp_21_fu_748_p2 and sel_tmp7_fu_778_p2);
    sel_tmp_cast_fu_768_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_assign_3_fu_760_p3),14));
    src_kernel_win_0_va_23_fu_946_p3 <= 
        tmp_32_fu_935_p5 when (tmp_3_reg_1397(0) = '1') else 
        col_buf_0_val_0_0_fu_856_p3;
    src_kernel_win_0_va_24_fu_964_p3 <= 
        tmp_36_fu_953_p5 when (tmp_3_reg_1397(0) = '1') else 
        col_buf_0_val_1_0_fu_874_p3;
    src_kernel_win_0_va_25_fu_982_p3 <= 
        tmp_40_fu_971_p5 when (tmp_3_reg_1397(0) = '1') else 
        col_buf_0_val_2_0_fu_892_p3;
        sum_V_0_2_cast_fu_1038_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(grp_fu_1252_p3),12));

    sum_V_1_1_fu_1061_p2 <= std_logic_vector(signed(tmp_370_1_cast_cast_fu_1050_p1) + signed(sum_V_0_2_cast_fu_1038_p1));
    t_V_2_cast_fu_650_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(t_V_2_reg_323),12));
    t_V_cast_fu_358_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(t_V_reg_312),12));
    tmp3_fu_1165_p2 <= std_logic_vector(unsigned(r_V_50_1_2_reg_1506) + unsigned(sum_V_1_1_reg_1501));
        tmp4_cast_fu_1169_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp4_reg_1516),12));

    tmp4_fu_1124_p2 <= std_logic_vector(unsigned(r_V_50_2_1_fu_1102_p2) + unsigned(tmp5_cast_fu_1120_p1));
        tmp5_cast_fu_1120_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp5_fu_1114_p2),11));

    tmp5_fu_1114_p2 <= std_logic_vector(unsigned(tmp_370_2_2_cast_cas_fu_1111_p1) + unsigned(r_V_50_2_fu_1089_p2));
    tmp6_fu_1130_p2 <= std_logic_vector(unsigned(tmp_43_fu_1079_p2) + unsigned(tmp_78_fu_1075_p1));
    tmp7_fu_1186_p2 <= std_logic_vector(unsigned(tmp_79_reg_1511) + unsigned(tmp8_reg_1526));
    tmp8_fu_1136_p2 <= std_logic_vector(unsigned(src_kernel_win_0_va_23_reg_1478) + unsigned(tmp_80_fu_1107_p1));
    tmp_10_fu_444_p2 <= "1" when (signed(tmp_7_fu_424_p2) < signed(ap_const_lv12_438)) else "0";
    tmp_13_fu_478_p2 <= "1" when (signed(p_p2_i497_i_fu_470_p3) < signed(ap_const_lv12_438)) else "0";
    tmp_19_fu_706_p2 <= "1" when (signed(ImagLoc_x_fu_682_p2) < signed(ap_const_lv12_780)) else "0";
    tmp_19_not_fu_772_p2 <= (tmp_19_fu_706_p2 xor ap_const_lv1_1);
    tmp_1_i_i_fu_1231_p2 <= (p_Result_s_fu_1178_p3 or overflow_fu_1217_p2);
    tmp_21_fu_748_p2 <= "1" when (signed(p_p2_i_i_fu_732_p3) < signed(ap_const_lv12_780)) else "0";
    tmp_23_fu_815_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(col_assign_cast_fu_812_p1),64));
    tmp_284_0_not_fu_380_p2 <= (tmp_s_fu_374_p2 xor ap_const_lv1_1);
    tmp_28_fu_540_p2 <= std_logic_vector(signed(ap_const_lv2_2) - signed(tmp_59_fu_484_p1));
    tmp_29_fu_546_p3 <= 
        tmp_59_fu_484_p1 when (tmp_13_fu_478_p2(0) = '1') else 
        tmp_28_fu_540_p2;
    tmp_2_fu_402_p2 <= "1" when (t_V_reg_312 = ap_const_lv11_1) else "0";
    tmp_30_fu_554_p2 <= std_logic_vector(signed(ap_const_lv2_3) + signed(tmp_56_fu_420_p1));
    tmp_31_fu_560_p3 <= 
        tmp_30_fu_554_p2 when (or_cond_i496_i_fu_450_p2(0) = '1') else 
        tmp_29_fu_546_p3;
    tmp_328_1_fu_408_p2 <= "1" when (t_V_reg_312 = ap_const_lv11_0) else "0";
    tmp_33_fu_574_p2 <= (tmp_56_fu_420_p1 xor ap_const_lv2_2);
    tmp_35_fu_598_p3 <= 
        tmp_41_fu_590_p3 when (tmp_60_fu_494_p3(0) = '1') else 
        tmp_33_fu_574_p2;
        tmp_369_0_1_cast_fu_334_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_kernel_val_0_V_1_read),10));

        tmp_369_0_2_cast_fu_338_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_kernel_val_0_V_2_read),10));

    tmp_369_1_2_cast_fu_346_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_kernel_val_1_V_2_read),12));
        tmp_369_1_cast_fu_342_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_kernel_val_1_V_0_read),11));

    tmp_369_2_1_cast_fu_354_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_kernel_val_2_V_1_read),11));
        tmp_369_2_cast_fu_350_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_kernel_val_2_V_0_read),10));

        tmp_370_1_cast_cast_fu_1050_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_50_1_fu_1045_p2),12));

    tmp_370_2_2_cast_cas_fu_1111_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_kernel_win_0_va_23_reg_1478),10));
    tmp_37_fu_612_p2 <= std_logic_vector(unsigned(ap_const_lv2_1) + unsigned(tmp_56_fu_420_p1));
    tmp_39_fu_636_p3 <= 
        tmp_42_fu_628_p3 when (tmp_63_fu_520_p3(0) = '1') else 
        tmp_37_fu_612_p2;
    tmp_3_fu_414_p2 <= "1" when (unsigned(t_V_reg_312) > unsigned(ap_const_lv11_438)) else "0";
    tmp_41_fu_590_p3 <= 
        tmp_66_fu_580_p2 when (tmp_61_fu_502_p3(0) = '1') else 
        tmp_67_fu_586_p1;
    tmp_42_fu_628_p3 <= 
        tmp_68_fu_618_p2 when (tmp_64_fu_528_p3(0) = '1') else 
        tmp_69_fu_624_p1;
    tmp_43_fu_1079_p2 <= std_logic_vector(unsigned(tmp_77_fu_1058_p1) + unsigned(tmp_76_fu_1054_p1));
    tmp_44_fu_1195_p4 <= p_Val2_s_fu_1172_p2(11 downto 8);
    tmp_55_fu_386_p4 <= t_V_reg_312(10 downto 1);
    tmp_56_fu_420_p1 <= t_V_reg_312(2 - 1 downto 0);
    tmp_57_fu_430_p3 <= tmp_7_fu_424_p2(11 downto 11);
    tmp_58_fu_456_p3 <= tmp_7_fu_424_p2(11 downto 11);
    tmp_59_fu_484_p1 <= p_p2_i497_i_fu_470_p3(2 - 1 downto 0);
    tmp_60_fu_494_p3 <= p_assign_6_1_fu_488_p2(11 downto 11);
    tmp_61_fu_502_p3 <= p_assign_6_1_fu_488_p2(11 downto 11);
    tmp_62_fu_510_p1 <= t_V_reg_312(2 - 1 downto 0);
    tmp_63_fu_520_p3 <= p_assign_6_2_fu_514_p2(11 downto 11);
    tmp_64_fu_528_p3 <= p_assign_6_2_fu_514_p2(11 downto 11);
    tmp_65_fu_536_p1 <= t_V_reg_312(2 - 1 downto 0);
    tmp_66_fu_580_p2 <= std_logic_vector(signed(ap_const_lv2_2) - signed(tmp_62_fu_510_p1));
    tmp_67_fu_586_p1 <= p_assign_6_1_fu_488_p2(2 - 1 downto 0);
    tmp_68_fu_618_p2 <= (tmp_65_fu_536_p1 xor ap_const_lv2_3);
    tmp_69_fu_624_p1 <= p_assign_6_2_fu_514_p2(2 - 1 downto 0);
    tmp_70_fu_666_p4 <= t_V_2_reg_323(10 downto 1);
    tmp_71_fu_692_p3 <= ImagLoc_x_fu_682_p2(11 downto 11);
    tmp_72_fu_718_p3 <= ImagLoc_x_fu_682_p2(11 downto 11);
    tmp_73_fu_798_p1 <= x_fu_790_p3(2 - 1 downto 0);
    tmp_76_fu_1054_p1 <= r_V_50_1_fu_1045_p2(8 - 1 downto 0);
    tmp_77_fu_1058_p1 <= grp_fu_1252_p3(8 - 1 downto 0);
    tmp_78_fu_1075_p1 <= r_V_50_1_2_fu_1070_p2(8 - 1 downto 0);
    tmp_79_fu_1094_p1 <= r_V_50_2_fu_1089_p2(8 - 1 downto 0);
    tmp_7_fu_424_p2 <= std_logic_vector(signed(ap_const_lv12_FFF) + signed(t_V_cast_fu_358_p1));
    tmp_80_fu_1107_p1 <= r_V_50_2_1_fu_1102_p2(8 - 1 downto 0);
    tmp_i_i_fu_1205_p2 <= (p_Result_s_fu_1178_p3 xor ap_const_lv1_1);
    tmp_s_fu_374_p2 <= "1" when (unsigned(t_V_reg_312) < unsigned(ap_const_lv11_438)) else "0";
    x_fu_790_p3 <= 
        p_p2_i_i_cast1_fu_740_p1 when (sel_tmp8_fu_784_p2(0) = '1') else 
        sel_tmp_cast_fu_768_p1;
end behav;
