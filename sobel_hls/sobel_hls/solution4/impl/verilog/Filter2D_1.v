// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module Filter2D_1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        p_src_data_stream_V_dout,
        p_src_data_stream_V_empty_n,
        p_src_data_stream_V_read,
        p_dst_data_stream_V_din,
        p_dst_data_stream_V_full_n,
        p_dst_data_stream_V_write
);

parameter    ap_ST_fsm_state1 = 4'd1;
parameter    ap_ST_fsm_state2 = 4'd2;
parameter    ap_ST_fsm_pp0_stage0 = 4'd4;
parameter    ap_ST_fsm_state9 = 4'd8;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [7:0] p_src_data_stream_V_dout;
input   p_src_data_stream_V_empty_n;
output   p_src_data_stream_V_read;
output  [7:0] p_dst_data_stream_V_din;
input   p_dst_data_stream_V_full_n;
output   p_dst_data_stream_V_write;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg p_src_data_stream_V_read;
reg p_dst_data_stream_V_write;

(* fsm_encoding = "none" *) reg   [3:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    p_src_data_stream_V_blk_n;
reg    ap_enable_reg_pp0_iter2;
wire    ap_block_pp0_stage0;
reg   [0:0] exitcond460_i_reg_1441;
reg   [0:0] exitcond460_i_reg_1441_pp0_iter1_reg;
reg   [0:0] or_cond_i_i_reg_1450;
reg   [0:0] or_cond_i_i_reg_1450_pp0_iter1_reg;
reg   [0:0] icmp_reg_1406;
reg   [0:0] tmp_s_reg_1397;
reg    p_dst_data_stream_V_blk_n;
reg    ap_enable_reg_pp0_iter5;
reg   [0:0] or_cond_i_reg_1471;
reg   [0:0] or_cond_i_reg_1471_pp0_iter4_reg;
reg   [10:0] t_V_2_reg_303;
wire   [0:0] exitcond461_i_fu_318_p2;
wire    ap_CS_fsm_state2;
wire   [9:0] i_V_fu_324_p2;
reg   [9:0] i_V_reg_1392;
wire   [0:0] tmp_s_fu_330_p2;
wire   [0:0] tmp_424_0_not_fu_336_p2;
reg   [0:0] tmp_424_0_not_reg_1401;
wire   [0:0] icmp_fu_352_p2;
wire   [0:0] tmp_2_fu_358_p2;
reg   [0:0] tmp_2_reg_1411;
wire   [0:0] tmp_468_1_fu_364_p2;
reg   [0:0] tmp_468_1_reg_1415;
wire   [0:0] tmp_3_fu_370_p2;
reg   [0:0] tmp_3_reg_1419;
wire   [1:0] row_assign_13_0_t_fu_524_p2;
reg   [1:0] row_assign_13_0_t_reg_1426;
wire   [1:0] row_assign_13_1_t_fu_562_p2;
reg   [1:0] row_assign_13_1_t_reg_1431;
wire   [1:0] row_assign_13_2_t_fu_600_p2;
reg   [1:0] row_assign_13_2_t_reg_1436;
wire   [0:0] exitcond460_i_fu_610_p2;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state3_pp0_stage0_iter0;
wire    ap_block_state4_pp0_stage0_iter1;
reg    ap_predicate_op147_read_state5;
reg    ap_predicate_op158_read_state5;
reg    ap_block_state5_pp0_stage0_iter2;
wire    ap_block_state6_pp0_stage0_iter3;
wire    ap_block_state7_pp0_stage0_iter4;
reg    ap_block_state8_pp0_stage0_iter5;
reg    ap_block_pp0_stage0_11001;
reg   [0:0] exitcond460_i_reg_1441_pp0_iter2_reg;
wire   [10:0] j_V_fu_616_p2;
reg    ap_enable_reg_pp0_iter0;
wire   [0:0] or_cond_i_i_fu_664_p2;
wire  signed [12:0] x_fu_738_p3;
reg  signed [12:0] x_reg_1454;
wire   [1:0] tmp_43_fu_746_p1;
reg   [1:0] tmp_43_reg_1459;
wire   [0:0] brmerge_fu_750_p2;
reg   [0:0] brmerge_reg_1464;
reg   [0:0] brmerge_reg_1464_pp0_iter1_reg;
wire   [0:0] or_cond_i_fu_755_p2;
reg   [0:0] or_cond_i_reg_1471_pp0_iter1_reg;
reg   [0:0] or_cond_i_reg_1471_pp0_iter2_reg;
reg   [0:0] or_cond_i_reg_1471_pp0_iter3_reg;
reg   [10:0] k_buf_0_val_3_addr_reg_1475;
wire   [1:0] col_assign_6_t_fu_770_p2;
reg   [1:0] col_assign_6_t_reg_1481;
reg   [10:0] k_buf_0_val_4_addr_reg_1488;
reg   [10:0] k_buf_0_val_5_addr_reg_1494;
wire   [7:0] src_kernel_win_0_va_6_fu_894_p3;
reg   [7:0] src_kernel_win_0_va_6_reg_1500;
reg   [7:0] src_kernel_win_0_va_6_reg_1500_pp0_iter3_reg;
wire   [7:0] src_kernel_win_0_va_7_fu_912_p3;
reg   [7:0] src_kernel_win_0_va_7_reg_1506;
wire   [7:0] src_kernel_win_0_va_8_fu_930_p3;
reg   [7:0] src_kernel_win_0_va_8_reg_1512;
wire   [20:0] r_V_52_1_1_fu_1278_p2;
reg   [20:0] r_V_52_1_1_reg_1518;
reg   [7:0] src_kernel_win_0_va_16_reg_1523;
reg   [7:0] src_kernel_win_0_va_9_reg_1528;
reg   [7:0] src_kernel_win_0_va_12_reg_1534;
wire   [24:0] grp_fu_1284_p4;
reg   [24:0] sum_V_0_2_reg_1540;
reg    ap_enable_reg_pp0_iter3;
wire   [24:0] tmp3_fu_1055_p2;
reg   [24:0] tmp3_reg_1545;
wire   [26:0] p_Val2_s_fu_1189_p2;
reg   [26:0] p_Val2_s_reg_1550;
reg   [7:0] p_Val2_1_reg_1555;
reg   [0:0] tmp_46_reg_1560;
reg   [4:0] tmp_35_reg_1565;
reg    ap_block_pp0_stage0_subdone;
reg    ap_enable_reg_pp0_iter1;
reg    ap_condition_pp0_exit_iter2_state5;
reg    ap_enable_reg_pp0_iter4;
wire   [10:0] k_buf_0_val_3_address0;
reg    k_buf_0_val_3_ce0;
wire   [7:0] k_buf_0_val_3_q0;
wire   [10:0] k_buf_0_val_3_address1;
reg    k_buf_0_val_3_ce1;
reg    k_buf_0_val_3_we1;
wire   [10:0] k_buf_0_val_4_address0;
reg    k_buf_0_val_4_ce0;
wire   [7:0] k_buf_0_val_4_q0;
wire   [10:0] k_buf_0_val_4_address1;
reg    k_buf_0_val_4_ce1;
reg    k_buf_0_val_4_we1;
reg   [7:0] k_buf_0_val_4_d1;
wire   [10:0] k_buf_0_val_5_address0;
reg    k_buf_0_val_5_ce0;
wire   [7:0] k_buf_0_val_5_q0;
wire   [10:0] k_buf_0_val_5_address1;
reg    k_buf_0_val_5_ce1;
reg    k_buf_0_val_5_we1;
reg   [7:0] k_buf_0_val_5_d1;
reg   [9:0] t_V_reg_292;
wire    ap_CS_fsm_state9;
wire   [63:0] tmp_26_fu_763_p1;
reg    ap_block_pp0_stage0_01001;
reg   [7:0] src_kernel_win_0_va_fu_166;
reg   [7:0] src_kernel_win_0_va_1_fu_170;
reg   [7:0] src_kernel_win_0_va_2_fu_174;
reg   [7:0] src_kernel_win_0_va_3_fu_178;
reg   [7:0] src_kernel_win_0_va_4_fu_182;
reg   [7:0] src_kernel_win_0_va_5_fu_186;
reg   [7:0] right_border_buf_0_s_fu_190;
wire   [7:0] col_buf_0_val_0_0_fu_804_p3;
reg   [7:0] right_border_buf_0_1_fu_194;
reg   [7:0] right_border_buf_0_2_fu_198;
reg   [7:0] right_border_buf_0_3_fu_202;
wire   [7:0] col_buf_0_val_1_0_fu_822_p3;
reg   [7:0] right_border_buf_0_4_fu_206;
reg   [7:0] right_border_buf_0_5_fu_210;
wire   [7:0] col_buf_0_val_2_0_fu_840_p3;
wire   [8:0] tmp_6_fu_342_p4;
wire   [10:0] t_V_cast_fu_314_p1;
wire   [1:0] tmp_8_fu_376_p1;
wire   [10:0] tmp_5_fu_380_p2;
wire   [0:0] tmp_10_fu_392_p3;
wire   [0:0] tmp_7_fu_406_p2;
wire   [0:0] rev_fu_400_p2;
wire   [0:0] tmp_11_fu_418_p3;
wire   [10:0] p_assign_s_fu_426_p2;
wire   [10:0] p_p2_i497_i_fu_432_p3;
wire   [1:0] tmp_12_fu_440_p1;
wire   [10:0] p_assign_14_1_fu_456_p2;
wire   [10:0] p_assign_14_2_fu_482_p2;
wire   [0:0] tmp_9_fu_444_p2;
wire   [1:0] p_assign_1_fu_450_p2;
wire   [0:0] or_cond_i496_i_fu_412_p2;
wire   [1:0] tmp_72_cast_fu_386_p2;
wire   [1:0] p_p2_i497_i_p_assign_s_fu_508_p3;
wire   [1:0] y_fu_516_p3;
wire   [1:0] tmp_20_fu_478_p1;
wire   [0:0] tmp_15_fu_470_p3;
wire   [1:0] tmp_27_fu_536_p2;
wire   [1:0] tmp_29_fu_542_p1;
wire   [0:0] tmp_14_fu_462_p3;
wire   [1:0] tmp_4_fu_546_p3;
wire   [1:0] tmp_1_fu_530_p2;
wire   [1:0] tmp_13_fu_554_p3;
wire   [1:0] tmp_25_fu_504_p1;
wire   [0:0] tmp_24_fu_496_p3;
wire   [1:0] tmp_38_fu_574_p2;
wire   [1:0] tmp_39_fu_580_p1;
wire   [0:0] tmp_21_fu_488_p3;
wire   [1:0] tmp_17_fu_584_p3;
wire   [1:0] tmp_16_fu_568_p2;
wire   [1:0] tmp_18_fu_592_p3;
wire   [9:0] tmp_40_fu_622_p4;
wire   [11:0] t_V_3_cast_fu_606_p1;
wire   [11:0] ImagLoc_x_fu_638_p2;
wire   [0:0] tmp_41_fu_644_p3;
wire   [0:0] tmp_22_fu_658_p2;
wire   [0:0] rev1_fu_652_p2;
wire   [0:0] tmp_42_fu_670_p3;
wire   [11:0] p_assign_3_fu_678_p2;
wire  signed [11:0] p_p2_i_i_fu_684_p3;
wire   [11:0] p_assign_4_fu_702_p2;
wire   [11:0] p_assign_5_fu_708_p3;
wire   [0:0] tmp_26_not_fu_720_p2;
wire   [0:0] tmp_23_fu_696_p2;
wire   [0:0] sel_tmp7_fu_726_p2;
wire   [0:0] sel_tmp8_fu_732_p2;
wire  signed [12:0] p_p2_i_i_cast_fu_692_p1;
wire   [12:0] sel_tmp_cast_fu_716_p1;
wire   [0:0] icmp1_fu_632_p2;
wire  signed [31:0] col_assign_cast_fu_760_p1;
wire   [7:0] tmp_28_fu_793_p5;
wire   [7:0] tmp_30_fu_811_p5;
wire   [7:0] tmp_31_fu_829_p5;
wire   [7:0] tmp_32_fu_883_p5;
wire   [7:0] tmp_33_fu_901_p5;
wire   [7:0] tmp_34_fu_919_p5;
wire   [18:0] p_shl1_fu_971_p3;
wire   [9:0] p_shl2_fu_983_p3;
wire   [19:0] p_shl1_cast_fu_979_p1;
wire   [19:0] p_shl2_cast_fu_991_p1;
wire   [19:0] r_V_52_0_1_fu_995_p2;
wire  signed [23:0] r_V_52_0_1_cast_fu_1001_p1;
wire   [18:0] p_shl5_fu_1012_p3;
wire   [9:0] p_shl6_fu_1023_p3;
wire   [19:0] p_shl5_cast_fu_1019_p1;
wire   [19:0] p_shl6_cast_fu_1030_p1;
wire   [19:0] r_V_52_1_2_fu_1034_p2;
wire  signed [23:0] r_V_52_1_2_cast_fu_1040_p1;
wire   [20:0] grp_fu_1294_p3;
wire   [24:0] tmp_510_1_2_cast_cas_fu_1044_p1;
wire   [24:0] tmp4_cast_fu_1052_p1;
wire   [18:0] p_shl3_fu_1092_p3;
wire   [9:0] p_shl4_fu_1103_p3;
wire   [19:0] p_shl3_cast_fu_1099_p1;
wire   [19:0] p_shl4_cast_fu_1110_p1;
wire   [19:0] r_V_52_1_fu_1114_p2;
wire  signed [23:0] r_V_52_1_cast_fu_1120_p1;
wire   [25:0] tmp_510_1_cast_fu_1124_p1;
wire   [25:0] sum_V_0_2_cast_fu_1089_p1;
wire   [25:0] tmp2_fu_1128_p2;
wire   [25:0] tmp3_cast_fu_1134_p1;
wire   [25:0] sum_V_2_fu_1137_p2;
wire   [18:0] p_shl_fu_1147_p3;
wire   [9:0] p_shl7_fu_1158_p3;
wire   [19:0] p_shl_cast_fu_1154_p1;
wire   [19:0] p_shl7_cast_fu_1165_p1;
wire   [19:0] r_V_52_2_1_fu_1169_p2;
wire  signed [23:0] r_V_52_2_1_cast_fu_1175_p1;
wire   [24:0] grp_fu_1302_p3;
wire   [26:0] sum_V_2_cast_fu_1143_p1;
wire   [26:0] tmp5_cast_fu_1186_p1;
wire   [7:0] tmp_6_i_i_cast_fu_1223_p1;
wire   [0:0] tmp_47_fu_1236_p3;
wire   [7:0] p_Val2_2_fu_1226_p2;
wire   [0:0] tmp_48_fu_1249_p3;
wire   [0:0] rev2_fu_1243_p2;
wire   [0:0] Range1_all_zeros_fu_1231_p2;
wire   [0:0] not_carry_1_fu_1257_p2;
wire   [0:0] deleted_zeros_fu_1263_p2;
wire   [13:0] r_V_52_1_1_fu_1278_p0;
wire   [7:0] r_V_52_1_1_fu_1278_p1;
wire   [7:0] grp_fu_1284_p0;
wire   [7:0] grp_fu_1284_p1;
wire   [10:0] grp_fu_1284_p2;
wire   [23:0] grp_fu_1284_p3;
wire   [10:0] grp_fu_1294_p0;
wire   [7:0] grp_fu_1294_p1;
wire   [10:0] grp_fu_1302_p0;
wire   [7:0] grp_fu_1302_p1;
wire   [23:0] grp_fu_1302_p2;
reg   [3:0] ap_NS_fsm;
reg    ap_block_pp0;
reg    ap_enable_operation_121;
reg    ap_enable_state4_pp0_iter1_stage0;
reg    ap_enable_operation_138;
reg    ap_enable_state5_pp0_iter2_stage0;
reg    ap_predicate_op152_store_state5;
reg    ap_enable_operation_152;
reg    ap_predicate_op159_store_state5;
reg    ap_enable_operation_159;
reg    ap_enable_operation_124;
reg    ap_enable_operation_141;
reg    ap_predicate_op150_store_state5;
reg    ap_enable_operation_150;
reg    ap_predicate_op157_store_state5;
reg    ap_enable_operation_157;
reg    ap_predicate_op126_load_state4;
reg    ap_enable_operation_126;
reg    ap_predicate_op144_load_state5;
reg    ap_enable_operation_144;
reg    ap_predicate_op148_store_state5;
reg    ap_enable_operation_148;
reg    ap_predicate_op156_store_state5;
reg    ap_enable_operation_156;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire   [8:0] grp_fu_1284_p00;
wire   [8:0] grp_fu_1284_p10;
wire   [24:0] grp_fu_1284_p30;
wire   [18:0] grp_fu_1294_p10;
wire   [18:0] grp_fu_1302_p10;
wire   [24:0] grp_fu_1302_p20;
wire   [20:0] r_V_52_1_1_fu_1278_p10;
reg    ap_condition_1038;

// power-on initialization
initial begin
#0 ap_CS_fsm = 4'd1;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
end

Filter2D_1_k_buf_eOg #(
    .DataWidth( 8 ),
    .AddressRange( 1280 ),
    .AddressWidth( 11 ))
k_buf_0_val_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(k_buf_0_val_3_address0),
    .ce0(k_buf_0_val_3_ce0),
    .q0(k_buf_0_val_3_q0),
    .address1(k_buf_0_val_3_address1),
    .ce1(k_buf_0_val_3_ce1),
    .we1(k_buf_0_val_3_we1),
    .d1(p_src_data_stream_V_dout)
);

Filter2D_1_k_buf_eOg #(
    .DataWidth( 8 ),
    .AddressRange( 1280 ),
    .AddressWidth( 11 ))
k_buf_0_val_4_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(k_buf_0_val_4_address0),
    .ce0(k_buf_0_val_4_ce0),
    .q0(k_buf_0_val_4_q0),
    .address1(k_buf_0_val_4_address1),
    .ce1(k_buf_0_val_4_ce1),
    .we1(k_buf_0_val_4_we1),
    .d1(k_buf_0_val_4_d1)
);

Filter2D_1_k_buf_eOg #(
    .DataWidth( 8 ),
    .AddressRange( 1280 ),
    .AddressWidth( 11 ))
k_buf_0_val_5_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(k_buf_0_val_5_address0),
    .ce0(k_buf_0_val_5_ce0),
    .q0(k_buf_0_val_5_q0),
    .address1(k_buf_0_val_5_address1),
    .ce1(k_buf_0_val_5_ce1),
    .we1(k_buf_0_val_5_we1),
    .d1(k_buf_0_val_5_d1)
);

sobel_hls_mux_32_hbi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
sobel_hls_mux_32_hbi_U31(
    .din0(right_border_buf_0_s_fu_190),
    .din1(right_border_buf_0_1_fu_194),
    .din2(8'd0),
    .din3(col_assign_6_t_reg_1481),
    .dout(tmp_28_fu_793_p5)
);

sobel_hls_mux_32_hbi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
sobel_hls_mux_32_hbi_U32(
    .din0(right_border_buf_0_3_fu_202),
    .din1(right_border_buf_0_4_fu_206),
    .din2(8'd0),
    .din3(col_assign_6_t_reg_1481),
    .dout(tmp_30_fu_811_p5)
);

sobel_hls_mux_32_hbi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
sobel_hls_mux_32_hbi_U33(
    .din0(right_border_buf_0_5_fu_210),
    .din1(right_border_buf_0_2_fu_198),
    .din2(8'd0),
    .din3(col_assign_6_t_reg_1481),
    .dout(tmp_31_fu_829_p5)
);

sobel_hls_mux_32_hbi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
sobel_hls_mux_32_hbi_U34(
    .din0(col_buf_0_val_0_0_fu_804_p3),
    .din1(col_buf_0_val_1_0_fu_822_p3),
    .din2(col_buf_0_val_2_0_fu_840_p3),
    .din3(row_assign_13_0_t_reg_1426),
    .dout(tmp_32_fu_883_p5)
);

sobel_hls_mux_32_hbi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
sobel_hls_mux_32_hbi_U35(
    .din0(col_buf_0_val_0_0_fu_804_p3),
    .din1(col_buf_0_val_1_0_fu_822_p3),
    .din2(col_buf_0_val_2_0_fu_840_p3),
    .din3(row_assign_13_1_t_reg_1431),
    .dout(tmp_33_fu_901_p5)
);

sobel_hls_mux_32_hbi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
sobel_hls_mux_32_hbi_U36(
    .din0(col_buf_0_val_0_0_fu_804_p3),
    .din1(col_buf_0_val_1_0_fu_822_p3),
    .din2(col_buf_0_val_2_0_fu_840_p3),
    .din3(row_assign_13_2_t_reg_1436),
    .dout(tmp_34_fu_919_p5)
);

sobel_hls_mul_mulibs #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 14 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 21 ))
sobel_hls_mul_mulibs_U37(
    .din0(r_V_52_1_1_fu_1278_p0),
    .din1(r_V_52_1_1_fu_1278_p1),
    .dout(r_V_52_1_1_fu_1278_p2)
);

sobel_hls_ama_addjbC #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 11 ),
    .din3_WIDTH( 24 ),
    .dout_WIDTH( 25 ))
sobel_hls_ama_addjbC_U38(
    .din0(grp_fu_1284_p0),
    .din1(grp_fu_1284_p1),
    .din2(grp_fu_1284_p2),
    .din3(grp_fu_1284_p3),
    .dout(grp_fu_1284_p4)
);

sobel_hls_mac_mulkbM #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 21 ),
    .dout_WIDTH( 21 ))
sobel_hls_mac_mulkbM_U39(
    .din0(grp_fu_1294_p0),
    .din1(grp_fu_1294_p1),
    .din2(r_V_52_1_1_reg_1518),
    .dout(grp_fu_1294_p3)
);

sobel_hls_mac_mullbW #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 25 ))
sobel_hls_mac_mullbW_U40(
    .din0(grp_fu_1302_p0),
    .din1(grp_fu_1302_p1),
    .din2(grp_fu_1302_p2),
    .dout(grp_fu_1302_p3)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((exitcond460_i_fu_610_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((exitcond461_i_fu_318_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter2_state5)) begin
                ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter1;
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end else if (((exitcond461_i_fu_318_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_enable_reg_pp0_iter5 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond460_i_fu_610_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        t_V_2_reg_303 <= j_V_fu_616_p2;
    end else if (((exitcond461_i_fu_318_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        t_V_2_reg_303 <= 11'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        t_V_reg_292 <= i_V_reg_1392;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        t_V_reg_292 <= 10'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond460_i_fu_610_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        brmerge_reg_1464 <= brmerge_fu_750_p2;
        or_cond_i_i_reg_1450 <= or_cond_i_i_fu_664_p2;
        or_cond_i_reg_1471 <= or_cond_i_fu_755_p2;
        tmp_43_reg_1459 <= tmp_43_fu_746_p1;
        x_reg_1454 <= x_fu_738_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        brmerge_reg_1464_pp0_iter1_reg <= brmerge_reg_1464;
        exitcond460_i_reg_1441 <= exitcond460_i_fu_610_p2;
        exitcond460_i_reg_1441_pp0_iter1_reg <= exitcond460_i_reg_1441;
        or_cond_i_i_reg_1450_pp0_iter1_reg <= or_cond_i_i_reg_1450;
        or_cond_i_reg_1471_pp0_iter1_reg <= or_cond_i_reg_1471;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond460_i_reg_1441 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        col_assign_6_t_reg_1481 <= col_assign_6_t_fu_770_p2;
        k_buf_0_val_3_addr_reg_1475 <= tmp_26_fu_763_p1;
        k_buf_0_val_4_addr_reg_1488 <= tmp_26_fu_763_p1;
        k_buf_0_val_5_addr_reg_1494 <= tmp_26_fu_763_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        exitcond460_i_reg_1441_pp0_iter2_reg <= exitcond460_i_reg_1441_pp0_iter1_reg;
        or_cond_i_reg_1471_pp0_iter2_reg <= or_cond_i_reg_1471_pp0_iter1_reg;
        or_cond_i_reg_1471_pp0_iter3_reg <= or_cond_i_reg_1471_pp0_iter2_reg;
        or_cond_i_reg_1471_pp0_iter4_reg <= or_cond_i_reg_1471_pp0_iter3_reg;
        src_kernel_win_0_va_6_reg_1500_pp0_iter3_reg <= src_kernel_win_0_va_6_reg_1500;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        i_V_reg_1392 <= i_V_fu_324_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond461_i_fu_318_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        icmp_reg_1406 <= icmp_fu_352_p2;
        row_assign_13_0_t_reg_1426 <= row_assign_13_0_t_fu_524_p2;
        row_assign_13_1_t_reg_1431 <= row_assign_13_1_t_fu_562_p2;
        row_assign_13_2_t_reg_1436 <= row_assign_13_2_t_fu_600_p2;
        tmp_2_reg_1411 <= tmp_2_fu_358_p2;
        tmp_3_reg_1419 <= tmp_3_fu_370_p2;
        tmp_424_0_not_reg_1401 <= tmp_424_0_not_fu_336_p2;
        tmp_468_1_reg_1415 <= tmp_468_1_fu_364_p2;
        tmp_s_reg_1397 <= tmp_s_fu_330_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((or_cond_i_reg_1471_pp0_iter3_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_Val2_1_reg_1555 <= {{p_Val2_s_fu_1189_p2[21:14]}};
        p_Val2_s_reg_1550 <= p_Val2_s_fu_1189_p2;
        tmp_35_reg_1565 <= {{p_Val2_s_fu_1189_p2[26:22]}};
        tmp_46_reg_1560 <= p_Val2_s_fu_1189_p2[32'd13];
    end
end

always @ (posedge ap_clk) begin
    if (((or_cond_i_reg_1471_pp0_iter1_reg == 1'd1) & (exitcond460_i_reg_1441_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        r_V_52_1_1_reg_1518 <= r_V_52_1_1_fu_1278_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_s_reg_1397 == 1'd1) & (icmp_reg_1406 == 1'd1) & (or_cond_i_i_reg_1450_pp0_iter1_reg == 1'd1) & (exitcond460_i_reg_1441_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        right_border_buf_0_1_fu_194 <= right_border_buf_0_s_fu_190;
        right_border_buf_0_2_fu_198 <= right_border_buf_0_5_fu_210;
        right_border_buf_0_3_fu_202 <= col_buf_0_val_1_0_fu_822_p3;
        right_border_buf_0_4_fu_206 <= right_border_buf_0_3_fu_202;
        right_border_buf_0_5_fu_210 <= col_buf_0_val_2_0_fu_840_p3;
        right_border_buf_0_s_fu_190 <= col_buf_0_val_0_0_fu_804_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((or_cond_i_reg_1471_pp0_iter2_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        src_kernel_win_0_va_12_reg_1534 <= src_kernel_win_0_va_3_fu_178;
        src_kernel_win_0_va_9_reg_1528 <= src_kernel_win_0_va_fu_166;
        tmp3_reg_1545 <= tmp3_fu_1055_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond460_i_reg_1441_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        src_kernel_win_0_va_16_reg_1523 <= src_kernel_win_0_va_2_fu_174;
        src_kernel_win_0_va_6_reg_1500 <= src_kernel_win_0_va_6_fu_894_p3;
        src_kernel_win_0_va_7_reg_1506 <= src_kernel_win_0_va_7_fu_912_p3;
        src_kernel_win_0_va_8_reg_1512 <= src_kernel_win_0_va_8_fu_930_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond460_i_reg_1441_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        src_kernel_win_0_va_1_fu_170 <= src_kernel_win_0_va_fu_166;
        src_kernel_win_0_va_3_fu_178 <= src_kernel_win_0_va_16_reg_1523;
        src_kernel_win_0_va_4_fu_182 <= src_kernel_win_0_va_8_reg_1512;
        src_kernel_win_0_va_5_fu_186 <= src_kernel_win_0_va_4_fu_182;
        src_kernel_win_0_va_fu_166 <= src_kernel_win_0_va_6_reg_1500;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond460_i_reg_1441_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        src_kernel_win_0_va_2_fu_174 <= src_kernel_win_0_va_7_fu_912_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((or_cond_i_reg_1471_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        sum_V_0_2_reg_1540 <= grp_fu_1284_p4;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_condition_pp0_exit_iter2_state5 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter2_state5 = 1'b0;
    end
end

always @ (*) begin
    if ((((exitcond461_i_fu_318_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2)) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond461_i_fu_318_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        k_buf_0_val_3_ce0 = 1'b1;
    end else begin
        k_buf_0_val_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((tmp_s_reg_1397 == 1'd1) & (icmp_reg_1406 == 1'd1) & (or_cond_i_i_reg_1450_pp0_iter1_reg == 1'd1) & (exitcond460_i_reg_1441_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((tmp_2_reg_1411 == 1'd1) & (or_cond_i_i_reg_1450_pp0_iter1_reg == 1'd1) & (icmp_reg_1406 == 1'd0) & (exitcond460_i_reg_1441_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        k_buf_0_val_3_ce1 = 1'b1;
    end else begin
        k_buf_0_val_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((((tmp_s_reg_1397 == 1'd1) & (icmp_reg_1406 == 1'd1) & (or_cond_i_i_reg_1450_pp0_iter1_reg == 1'd1) & (exitcond460_i_reg_1441_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((tmp_2_reg_1411 == 1'd1) & (or_cond_i_i_reg_1450_pp0_iter1_reg == 1'd1) & (icmp_reg_1406 == 1'd0) & (exitcond460_i_reg_1441_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        k_buf_0_val_3_we1 = 1'b1;
    end else begin
        k_buf_0_val_3_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        k_buf_0_val_4_ce0 = 1'b1;
    end else begin
        k_buf_0_val_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((tmp_s_reg_1397 == 1'd1) & (icmp_reg_1406 == 1'd1) & (or_cond_i_i_reg_1450_pp0_iter1_reg == 1'd1) & (exitcond460_i_reg_1441_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((tmp_468_1_reg_1415 == 1'd1) & (or_cond_i_i_reg_1450_pp0_iter1_reg == 1'd1) & (icmp_reg_1406 == 1'd0) & (exitcond460_i_reg_1441_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        k_buf_0_val_4_ce1 = 1'b1;
    end else begin
        k_buf_0_val_4_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_1038)) begin
        if (((tmp_s_reg_1397 == 1'd1) & (icmp_reg_1406 == 1'd1))) begin
            k_buf_0_val_4_d1 = k_buf_0_val_3_q0;
        end else if (((tmp_468_1_reg_1415 == 1'd1) & (icmp_reg_1406 == 1'd0))) begin
            k_buf_0_val_4_d1 = p_src_data_stream_V_dout;
        end else begin
            k_buf_0_val_4_d1 = 'bx;
        end
    end else begin
        k_buf_0_val_4_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((tmp_s_reg_1397 == 1'd1) & (icmp_reg_1406 == 1'd1) & (or_cond_i_i_reg_1450_pp0_iter1_reg == 1'd1) & (exitcond460_i_reg_1441_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((tmp_468_1_reg_1415 == 1'd1) & (or_cond_i_i_reg_1450_pp0_iter1_reg == 1'd1) & (icmp_reg_1406 == 1'd0) & (exitcond460_i_reg_1441_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        k_buf_0_val_4_we1 = 1'b1;
    end else begin
        k_buf_0_val_4_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        k_buf_0_val_5_ce0 = 1'b1;
    end else begin
        k_buf_0_val_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((tmp_s_reg_1397 == 1'd1) & (icmp_reg_1406 == 1'd1) & (or_cond_i_i_reg_1450_pp0_iter1_reg == 1'd1) & (exitcond460_i_reg_1441_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((tmp_2_reg_1411 == 1'd1) & (or_cond_i_i_reg_1450_pp0_iter1_reg == 1'd1) & (icmp_reg_1406 == 1'd0) & (exitcond460_i_reg_1441_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        k_buf_0_val_5_ce1 = 1'b1;
    end else begin
        k_buf_0_val_5_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_1038)) begin
        if (((tmp_s_reg_1397 == 1'd1) & (icmp_reg_1406 == 1'd1))) begin
            k_buf_0_val_5_d1 = k_buf_0_val_4_q0;
        end else if (((tmp_2_reg_1411 == 1'd1) & (icmp_reg_1406 == 1'd0))) begin
            k_buf_0_val_5_d1 = p_src_data_stream_V_dout;
        end else begin
            k_buf_0_val_5_d1 = 'bx;
        end
    end else begin
        k_buf_0_val_5_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((tmp_s_reg_1397 == 1'd1) & (icmp_reg_1406 == 1'd1) & (or_cond_i_i_reg_1450_pp0_iter1_reg == 1'd1) & (exitcond460_i_reg_1441_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((tmp_2_reg_1411 == 1'd1) & (or_cond_i_i_reg_1450_pp0_iter1_reg == 1'd1) & (icmp_reg_1406 == 1'd0) & (exitcond460_i_reg_1441_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        k_buf_0_val_5_we1 = 1'b1;
    end else begin
        k_buf_0_val_5_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((or_cond_i_reg_1471_pp0_iter4_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter5 == 1'b1))) begin
        p_dst_data_stream_V_blk_n = p_dst_data_stream_V_full_n;
    end else begin
        p_dst_data_stream_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((or_cond_i_reg_1471_pp0_iter4_reg == 1'd1) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_dst_data_stream_V_write = 1'b1;
    end else begin
        p_dst_data_stream_V_write = 1'b0;
    end
end

always @ (*) begin
    if ((((tmp_s_reg_1397 == 1'd1) & (icmp_reg_1406 == 1'd1) & (or_cond_i_i_reg_1450_pp0_iter1_reg == 1'd1) & (exitcond460_i_reg_1441_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((or_cond_i_i_reg_1450_pp0_iter1_reg == 1'd1) & (icmp_reg_1406 == 1'd0) & (exitcond460_i_reg_1441_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1)))) begin
        p_src_data_stream_V_blk_n = p_src_data_stream_V_empty_n;
    end else begin
        p_src_data_stream_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter2 == 1'b1) & (ap_predicate_op158_read_state5 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (ap_predicate_op147_read_state5 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        p_src_data_stream_V_read = 1'b1;
    end else begin
        p_src_data_stream_V_read = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((exitcond461_i_fu_318_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter2 == 1'b1) & (ap_enable_reg_pp0_iter3 == 1'b0)) & ~((ap_enable_reg_pp0_iter4 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter5 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((ap_enable_reg_pp0_iter4 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter5 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter2 == 1'b1) & (ap_enable_reg_pp0_iter3 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ImagLoc_x_fu_638_p2 = ($signed(12'd4095) + $signed(t_V_3_cast_fu_606_p1));

assign Range1_all_zeros_fu_1231_p2 = ((tmp_35_reg_1565 == 5'd0) ? 1'b1 : 1'b0);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd3];

always @ (*) begin
    ap_block_pp0 = ((ap_ST_fsm_pp0_stage0 == ap_CS_fsm) & (1'b1 == ap_block_pp0_stage0_subdone));
end

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((or_cond_i_reg_1471_pp0_iter4_reg == 1'd1) & (p_dst_data_stream_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b1)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op158_read_state5 == 1'b1)) | ((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op147_read_state5 == 1'b1)))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((or_cond_i_reg_1471_pp0_iter4_reg == 1'd1) & (p_dst_data_stream_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b1)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op158_read_state5 == 1'b1)) | ((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op147_read_state5 == 1'b1)))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((or_cond_i_reg_1471_pp0_iter4_reg == 1'd1) & (p_dst_data_stream_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b1)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op158_read_state5 == 1'b1)) | ((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op147_read_state5 == 1'b1)))));
end

assign ap_block_state3_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state5_pp0_stage0_iter2 = (((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op158_read_state5 == 1'b1)) | ((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op147_read_state5 == 1'b1)));
end

assign ap_block_state6_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state8_pp0_stage0_iter5 = ((or_cond_i_reg_1471_pp0_iter4_reg == 1'd1) & (p_dst_data_stream_V_full_n == 1'b0));
end

always @ (*) begin
    ap_condition_1038 = ((or_cond_i_i_reg_1450_pp0_iter1_reg == 1'd1) & (exitcond460_i_reg_1441_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1));
end

always @ (*) begin
    ap_enable_operation_121 = (exitcond460_i_reg_1441 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_124 = (exitcond460_i_reg_1441 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_126 = (ap_predicate_op126_load_state4 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_138 = (exitcond460_i_reg_1441_pp0_iter1_reg == 1'd0);
end

always @ (*) begin
    ap_enable_operation_141 = (exitcond460_i_reg_1441_pp0_iter1_reg == 1'd0);
end

always @ (*) begin
    ap_enable_operation_144 = (ap_predicate_op144_load_state5 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_148 = (ap_predicate_op148_store_state5 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_150 = (ap_predicate_op150_store_state5 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_152 = (ap_predicate_op152_store_state5 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_156 = (ap_predicate_op156_store_state5 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_157 = (ap_predicate_op157_store_state5 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_159 = (ap_predicate_op159_store_state5 == 1'b1);
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

always @ (*) begin
    ap_enable_state4_pp0_iter1_stage0 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_enable_state5_pp0_iter2_stage0 = ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_predicate_op126_load_state4 = ((brmerge_reg_1464 == 1'd1) & (exitcond460_i_reg_1441 == 1'd0));
end

always @ (*) begin
    ap_predicate_op144_load_state5 = ((brmerge_reg_1464_pp0_iter1_reg == 1'd1) & (exitcond460_i_reg_1441_pp0_iter1_reg == 1'd0));
end

always @ (*) begin
    ap_predicate_op147_read_state5 = ((or_cond_i_i_reg_1450_pp0_iter1_reg == 1'd1) & (icmp_reg_1406 == 1'd0) & (exitcond460_i_reg_1441_pp0_iter1_reg == 1'd0));
end

always @ (*) begin
    ap_predicate_op148_store_state5 = ((tmp_2_reg_1411 == 1'd1) & (or_cond_i_i_reg_1450_pp0_iter1_reg == 1'd1) & (icmp_reg_1406 == 1'd0) & (exitcond460_i_reg_1441_pp0_iter1_reg == 1'd0));
end

always @ (*) begin
    ap_predicate_op150_store_state5 = ((tmp_468_1_reg_1415 == 1'd1) & (or_cond_i_i_reg_1450_pp0_iter1_reg == 1'd1) & (icmp_reg_1406 == 1'd0) & (exitcond460_i_reg_1441_pp0_iter1_reg == 1'd0));
end

always @ (*) begin
    ap_predicate_op152_store_state5 = ((tmp_2_reg_1411 == 1'd1) & (or_cond_i_i_reg_1450_pp0_iter1_reg == 1'd1) & (icmp_reg_1406 == 1'd0) & (exitcond460_i_reg_1441_pp0_iter1_reg == 1'd0));
end

always @ (*) begin
    ap_predicate_op156_store_state5 = ((tmp_s_reg_1397 == 1'd1) & (icmp_reg_1406 == 1'd1) & (or_cond_i_i_reg_1450_pp0_iter1_reg == 1'd1) & (exitcond460_i_reg_1441_pp0_iter1_reg == 1'd0));
end

always @ (*) begin
    ap_predicate_op157_store_state5 = ((tmp_s_reg_1397 == 1'd1) & (icmp_reg_1406 == 1'd1) & (or_cond_i_i_reg_1450_pp0_iter1_reg == 1'd1) & (exitcond460_i_reg_1441_pp0_iter1_reg == 1'd0));
end

always @ (*) begin
    ap_predicate_op158_read_state5 = ((tmp_s_reg_1397 == 1'd1) & (icmp_reg_1406 == 1'd1) & (or_cond_i_i_reg_1450_pp0_iter1_reg == 1'd1) & (exitcond460_i_reg_1441_pp0_iter1_reg == 1'd0));
end

always @ (*) begin
    ap_predicate_op159_store_state5 = ((tmp_s_reg_1397 == 1'd1) & (icmp_reg_1406 == 1'd1) & (or_cond_i_i_reg_1450_pp0_iter1_reg == 1'd1) & (exitcond460_i_reg_1441_pp0_iter1_reg == 1'd0));
end

assign brmerge_fu_750_p2 = (tmp_424_0_not_reg_1401 | tmp_22_fu_658_p2);

assign col_assign_6_t_fu_770_p2 = (tmp_43_reg_1459 ^ 2'd3);

assign col_assign_cast_fu_760_p1 = x_reg_1454;

assign col_buf_0_val_0_0_fu_804_p3 = ((brmerge_reg_1464_pp0_iter1_reg[0:0] === 1'b1) ? k_buf_0_val_3_q0 : tmp_28_fu_793_p5);

assign col_buf_0_val_1_0_fu_822_p3 = ((brmerge_reg_1464_pp0_iter1_reg[0:0] === 1'b1) ? k_buf_0_val_4_q0 : tmp_30_fu_811_p5);

assign col_buf_0_val_2_0_fu_840_p3 = ((brmerge_reg_1464_pp0_iter1_reg[0:0] === 1'b1) ? k_buf_0_val_5_q0 : tmp_31_fu_829_p5);

assign deleted_zeros_fu_1263_p2 = (not_carry_1_fu_1257_p2 & Range1_all_zeros_fu_1231_p2);

assign exitcond460_i_fu_610_p2 = ((t_V_2_reg_303 == 11'd1282) ? 1'b1 : 1'b0);

assign exitcond461_i_fu_318_p2 = ((t_V_reg_292 == 10'd722) ? 1'b1 : 1'b0);

assign grp_fu_1284_p0 = grp_fu_1284_p00;

assign grp_fu_1284_p00 = src_kernel_win_0_va_8_reg_1512;

assign grp_fu_1284_p1 = grp_fu_1284_p10;

assign grp_fu_1284_p10 = src_kernel_win_0_va_5_fu_186;

assign grp_fu_1284_p2 = 19'd936;

assign grp_fu_1284_p3 = grp_fu_1284_p30;

assign grp_fu_1284_p30 = $unsigned(r_V_52_0_1_cast_fu_1001_p1);

assign grp_fu_1294_p0 = 19'd936;

assign grp_fu_1294_p1 = grp_fu_1294_p10;

assign grp_fu_1294_p10 = src_kernel_win_0_va_1_fu_170;

assign grp_fu_1302_p0 = 19'd936;

assign grp_fu_1302_p1 = grp_fu_1302_p10;

assign grp_fu_1302_p10 = src_kernel_win_0_va_6_reg_1500_pp0_iter3_reg;

assign grp_fu_1302_p2 = grp_fu_1302_p20;

assign grp_fu_1302_p20 = $unsigned(r_V_52_2_1_cast_fu_1175_p1);

assign i_V_fu_324_p2 = (t_V_reg_292 + 10'd1);

assign icmp1_fu_632_p2 = ((tmp_40_fu_622_p4 != 10'd0) ? 1'b1 : 1'b0);

assign icmp_fu_352_p2 = ((tmp_6_fu_342_p4 != 9'd0) ? 1'b1 : 1'b0);

assign j_V_fu_616_p2 = (t_V_2_reg_303 + 11'd1);

assign k_buf_0_val_3_address0 = tmp_26_fu_763_p1;

assign k_buf_0_val_3_address1 = k_buf_0_val_3_addr_reg_1475;

assign k_buf_0_val_4_address0 = tmp_26_fu_763_p1;

assign k_buf_0_val_4_address1 = k_buf_0_val_4_addr_reg_1488;

assign k_buf_0_val_5_address0 = tmp_26_fu_763_p1;

assign k_buf_0_val_5_address1 = k_buf_0_val_5_addr_reg_1494;

assign not_carry_1_fu_1257_p2 = (tmp_48_fu_1249_p3 | rev2_fu_1243_p2);

assign or_cond_i496_i_fu_412_p2 = (tmp_7_fu_406_p2 & rev_fu_400_p2);

assign or_cond_i_fu_755_p2 = (icmp_reg_1406 & icmp1_fu_632_p2);

assign or_cond_i_i_fu_664_p2 = (tmp_22_fu_658_p2 & rev1_fu_652_p2);

assign p_Val2_2_fu_1226_p2 = (tmp_6_i_i_cast_fu_1223_p1 + p_Val2_1_reg_1555);

assign p_Val2_s_fu_1189_p2 = (sum_V_2_cast_fu_1143_p1 + tmp5_cast_fu_1186_p1);

assign p_assign_14_1_fu_456_p2 = ($signed(11'd2046) + $signed(t_V_cast_fu_314_p1));

assign p_assign_14_2_fu_482_p2 = ($signed(11'd2045) + $signed(t_V_cast_fu_314_p1));

assign p_assign_1_fu_450_p2 = ($signed(2'd2) - $signed(tmp_12_fu_440_p1));

assign p_assign_3_fu_678_p2 = (12'd1 - t_V_3_cast_fu_606_p1);

assign p_assign_4_fu_702_p2 = ($signed(12'd2558) - $signed(p_p2_i_i_fu_684_p3));

assign p_assign_5_fu_708_p3 = ((or_cond_i_i_fu_664_p2[0:0] === 1'b1) ? ImagLoc_x_fu_638_p2 : p_assign_4_fu_702_p2);

assign p_assign_s_fu_426_p2 = (11'd1 - t_V_cast_fu_314_p1);

assign p_dst_data_stream_V_din = ((deleted_zeros_fu_1263_p2[0:0] === 1'b1) ? p_Val2_2_fu_1226_p2 : 8'd255);

assign p_p2_i497_i_fu_432_p3 = ((tmp_11_fu_418_p3[0:0] === 1'b1) ? p_assign_s_fu_426_p2 : tmp_5_fu_380_p2);

assign p_p2_i497_i_p_assign_s_fu_508_p3 = ((tmp_9_fu_444_p2[0:0] === 1'b1) ? tmp_12_fu_440_p1 : p_assign_1_fu_450_p2);

assign p_p2_i_i_cast_fu_692_p1 = p_p2_i_i_fu_684_p3;

assign p_p2_i_i_fu_684_p3 = ((tmp_42_fu_670_p3[0:0] === 1'b1) ? p_assign_3_fu_678_p2 : ImagLoc_x_fu_638_p2);

assign p_shl1_cast_fu_979_p1 = p_shl1_fu_971_p3;

assign p_shl1_fu_971_p3 = {{src_kernel_win_0_va_4_fu_182}, {11'd0}};

assign p_shl2_cast_fu_991_p1 = p_shl2_fu_983_p3;

assign p_shl2_fu_983_p3 = {{src_kernel_win_0_va_4_fu_182}, {2'd0}};

assign p_shl3_cast_fu_1099_p1 = p_shl3_fu_1092_p3;

assign p_shl3_fu_1092_p3 = {{src_kernel_win_0_va_12_reg_1534}, {11'd0}};

assign p_shl4_cast_fu_1110_p1 = p_shl4_fu_1103_p3;

assign p_shl4_fu_1103_p3 = {{src_kernel_win_0_va_12_reg_1534}, {2'd0}};

assign p_shl5_cast_fu_1019_p1 = p_shl5_fu_1012_p3;

assign p_shl5_fu_1012_p3 = {{src_kernel_win_0_va_7_reg_1506}, {11'd0}};

assign p_shl6_cast_fu_1030_p1 = p_shl6_fu_1023_p3;

assign p_shl6_fu_1023_p3 = {{src_kernel_win_0_va_7_reg_1506}, {2'd0}};

assign p_shl7_cast_fu_1165_p1 = p_shl7_fu_1158_p3;

assign p_shl7_fu_1158_p3 = {{src_kernel_win_0_va_9_reg_1528}, {2'd0}};

assign p_shl_cast_fu_1154_p1 = p_shl_fu_1147_p3;

assign p_shl_fu_1147_p3 = {{src_kernel_win_0_va_9_reg_1528}, {11'd0}};

assign r_V_52_0_1_cast_fu_1001_p1 = $signed(r_V_52_0_1_fu_995_p2);

assign r_V_52_0_1_fu_995_p2 = (p_shl1_cast_fu_979_p1 - p_shl2_cast_fu_991_p1);

assign r_V_52_1_1_fu_1278_p0 = 21'd4465;

assign r_V_52_1_1_fu_1278_p1 = r_V_52_1_1_fu_1278_p10;

assign r_V_52_1_1_fu_1278_p10 = src_kernel_win_0_va_2_fu_174;

assign r_V_52_1_2_cast_fu_1040_p1 = $signed(r_V_52_1_2_fu_1034_p2);

assign r_V_52_1_2_fu_1034_p2 = (p_shl5_cast_fu_1019_p1 - p_shl6_cast_fu_1030_p1);

assign r_V_52_1_cast_fu_1120_p1 = $signed(r_V_52_1_fu_1114_p2);

assign r_V_52_1_fu_1114_p2 = (p_shl3_cast_fu_1099_p1 - p_shl4_cast_fu_1110_p1);

assign r_V_52_2_1_cast_fu_1175_p1 = $signed(r_V_52_2_1_fu_1169_p2);

assign r_V_52_2_1_fu_1169_p2 = (p_shl_cast_fu_1154_p1 - p_shl7_cast_fu_1165_p1);

assign rev1_fu_652_p2 = (tmp_41_fu_644_p3 ^ 1'd1);

assign rev2_fu_1243_p2 = (tmp_47_fu_1236_p3 ^ 1'd1);

assign rev_fu_400_p2 = (tmp_10_fu_392_p3 ^ 1'd1);

assign row_assign_13_0_t_fu_524_p2 = (y_fu_516_p3 ^ 2'd3);

assign row_assign_13_1_t_fu_562_p2 = (tmp_13_fu_554_p3 ^ 2'd3);

assign row_assign_13_2_t_fu_600_p2 = (tmp_18_fu_592_p3 ^ 2'd3);

assign sel_tmp7_fu_726_p2 = (tmp_41_fu_644_p3 | tmp_26_not_fu_720_p2);

assign sel_tmp8_fu_732_p2 = (tmp_23_fu_696_p2 & sel_tmp7_fu_726_p2);

assign sel_tmp_cast_fu_716_p1 = p_assign_5_fu_708_p3;

assign src_kernel_win_0_va_6_fu_894_p3 = ((tmp_3_reg_1419[0:0] === 1'b1) ? tmp_32_fu_883_p5 : col_buf_0_val_0_0_fu_804_p3);

assign src_kernel_win_0_va_7_fu_912_p3 = ((tmp_3_reg_1419[0:0] === 1'b1) ? tmp_33_fu_901_p5 : col_buf_0_val_1_0_fu_822_p3);

assign src_kernel_win_0_va_8_fu_930_p3 = ((tmp_3_reg_1419[0:0] === 1'b1) ? tmp_34_fu_919_p5 : col_buf_0_val_2_0_fu_840_p3);

assign sum_V_0_2_cast_fu_1089_p1 = sum_V_0_2_reg_1540;

assign sum_V_2_cast_fu_1143_p1 = sum_V_2_fu_1137_p2;

assign sum_V_2_fu_1137_p2 = (tmp2_fu_1128_p2 + tmp3_cast_fu_1134_p1);

assign t_V_3_cast_fu_606_p1 = t_V_2_reg_303;

assign t_V_cast_fu_314_p1 = t_V_reg_292;

assign tmp2_fu_1128_p2 = (tmp_510_1_cast_fu_1124_p1 + sum_V_0_2_cast_fu_1089_p1);

assign tmp3_cast_fu_1134_p1 = tmp3_reg_1545;

assign tmp3_fu_1055_p2 = (tmp_510_1_2_cast_cas_fu_1044_p1 + tmp4_cast_fu_1052_p1);

assign tmp4_cast_fu_1052_p1 = grp_fu_1294_p3;

assign tmp5_cast_fu_1186_p1 = grp_fu_1302_p3;

assign tmp_10_fu_392_p3 = tmp_5_fu_380_p2[32'd10];

assign tmp_11_fu_418_p3 = tmp_5_fu_380_p2[32'd10];

assign tmp_12_fu_440_p1 = p_p2_i497_i_fu_432_p3[1:0];

assign tmp_13_fu_554_p3 = ((tmp_14_fu_462_p3[0:0] === 1'b1) ? tmp_4_fu_546_p3 : tmp_1_fu_530_p2);

assign tmp_14_fu_462_p3 = p_assign_14_1_fu_456_p2[32'd10];

assign tmp_15_fu_470_p3 = p_assign_14_1_fu_456_p2[32'd10];

assign tmp_16_fu_568_p2 = (2'd1 + tmp_8_fu_376_p1);

assign tmp_17_fu_584_p3 = ((tmp_24_fu_496_p3[0:0] === 1'b1) ? tmp_38_fu_574_p2 : tmp_39_fu_580_p1);

assign tmp_18_fu_592_p3 = ((tmp_21_fu_488_p3[0:0] === 1'b1) ? tmp_17_fu_584_p3 : tmp_16_fu_568_p2);

assign tmp_1_fu_530_p2 = (tmp_8_fu_376_p1 ^ 2'd2);

assign tmp_20_fu_478_p1 = t_V_reg_292[1:0];

assign tmp_21_fu_488_p3 = p_assign_14_2_fu_482_p2[32'd10];

assign tmp_22_fu_658_p2 = (($signed(ImagLoc_x_fu_638_p2) < $signed(12'd1280)) ? 1'b1 : 1'b0);

assign tmp_23_fu_696_p2 = (($signed(p_p2_i_i_fu_684_p3) < $signed(12'd1280)) ? 1'b1 : 1'b0);

assign tmp_24_fu_496_p3 = p_assign_14_2_fu_482_p2[32'd10];

assign tmp_25_fu_504_p1 = t_V_reg_292[1:0];

assign tmp_26_fu_763_p1 = $unsigned(col_assign_cast_fu_760_p1);

assign tmp_26_not_fu_720_p2 = (tmp_22_fu_658_p2 ^ 1'd1);

assign tmp_27_fu_536_p2 = ($signed(2'd2) - $signed(tmp_20_fu_478_p1));

assign tmp_29_fu_542_p1 = p_assign_14_1_fu_456_p2[1:0];

assign tmp_2_fu_358_p2 = ((t_V_reg_292 == 10'd1) ? 1'b1 : 1'b0);

assign tmp_38_fu_574_p2 = (tmp_25_fu_504_p1 ^ 2'd3);

assign tmp_39_fu_580_p1 = p_assign_14_2_fu_482_p2[1:0];

assign tmp_3_fu_370_p2 = ((t_V_reg_292 > 10'd720) ? 1'b1 : 1'b0);

assign tmp_40_fu_622_p4 = {{t_V_2_reg_303[10:1]}};

assign tmp_41_fu_644_p3 = ImagLoc_x_fu_638_p2[32'd11];

assign tmp_424_0_not_fu_336_p2 = (tmp_s_fu_330_p2 ^ 1'd1);

assign tmp_42_fu_670_p3 = ImagLoc_x_fu_638_p2[32'd11];

assign tmp_43_fu_746_p1 = x_fu_738_p3[1:0];

assign tmp_468_1_fu_364_p2 = ((t_V_reg_292 == 10'd0) ? 1'b1 : 1'b0);

assign tmp_47_fu_1236_p3 = p_Val2_s_reg_1550[32'd21];

assign tmp_48_fu_1249_p3 = p_Val2_2_fu_1226_p2[32'd7];

assign tmp_4_fu_546_p3 = ((tmp_15_fu_470_p3[0:0] === 1'b1) ? tmp_27_fu_536_p2 : tmp_29_fu_542_p1);

assign tmp_510_1_2_cast_cas_fu_1044_p1 = $unsigned(r_V_52_1_2_cast_fu_1040_p1);

assign tmp_510_1_cast_fu_1124_p1 = $unsigned(r_V_52_1_cast_fu_1120_p1);

assign tmp_5_fu_380_p2 = ($signed(11'd2047) + $signed(t_V_cast_fu_314_p1));

assign tmp_6_fu_342_p4 = {{t_V_reg_292[9:1]}};

assign tmp_6_i_i_cast_fu_1223_p1 = tmp_46_reg_1560;

assign tmp_72_cast_fu_386_p2 = ($signed(2'd3) + $signed(tmp_8_fu_376_p1));

assign tmp_7_fu_406_p2 = (($signed(tmp_5_fu_380_p2) < $signed(11'd720)) ? 1'b1 : 1'b0);

assign tmp_8_fu_376_p1 = t_V_reg_292[1:0];

assign tmp_9_fu_444_p2 = (($signed(p_p2_i497_i_fu_432_p3) < $signed(11'd720)) ? 1'b1 : 1'b0);

assign tmp_s_fu_330_p2 = ((t_V_reg_292 < 10'd720) ? 1'b1 : 1'b0);

assign x_fu_738_p3 = ((sel_tmp8_fu_732_p2[0:0] === 1'b1) ? p_p2_i_i_cast_fu_692_p1 : sel_tmp_cast_fu_716_p1);

assign y_fu_516_p3 = ((or_cond_i496_i_fu_412_p2[0:0] === 1'b1) ? tmp_72_cast_fu_386_p2 : p_p2_i497_i_p_assign_s_fu_508_p3);

endmodule //Filter2D_1
