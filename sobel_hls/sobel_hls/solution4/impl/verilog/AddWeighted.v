// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module AddWeighted (
        ap_clk,
        ap_rst,
        ap_start,
        start_full_n,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        start_out,
        start_write,
        src1_data_stream_V_dout,
        src1_data_stream_V_empty_n,
        src1_data_stream_V_read,
        src2_data_stream_V_dout,
        src2_data_stream_V_empty_n,
        src2_data_stream_V_read,
        dst_rows_V_dout,
        dst_rows_V_empty_n,
        dst_rows_V_read,
        dst_cols_V_dout,
        dst_cols_V_empty_n,
        dst_cols_V_read,
        dst_data_stream_V_din,
        dst_data_stream_V_full_n,
        dst_data_stream_V_write,
        dst_rows_V_out_din,
        dst_rows_V_out_full_n,
        dst_rows_V_out_write,
        dst_cols_V_out_din,
        dst_cols_V_out_full_n,
        dst_cols_V_out_write
);

parameter    ap_ST_fsm_state1 = 4'd1;
parameter    ap_ST_fsm_state2 = 4'd2;
parameter    ap_ST_fsm_pp0_stage0 = 4'd4;
parameter    ap_ST_fsm_state31 = 4'd8;

input   ap_clk;
input   ap_rst;
input   ap_start;
input   start_full_n;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output   start_out;
output   start_write;
input  [7:0] src1_data_stream_V_dout;
input   src1_data_stream_V_empty_n;
output   src1_data_stream_V_read;
input  [7:0] src2_data_stream_V_dout;
input   src2_data_stream_V_empty_n;
output   src2_data_stream_V_read;
input  [10:0] dst_rows_V_dout;
input   dst_rows_V_empty_n;
output   dst_rows_V_read;
input  [11:0] dst_cols_V_dout;
input   dst_cols_V_empty_n;
output   dst_cols_V_read;
output  [7:0] dst_data_stream_V_din;
input   dst_data_stream_V_full_n;
output   dst_data_stream_V_write;
output  [10:0] dst_rows_V_out_din;
input   dst_rows_V_out_full_n;
output   dst_rows_V_out_write;
output  [11:0] dst_cols_V_out_din;
input   dst_cols_V_out_full_n;
output   dst_cols_V_out_write;

reg ap_done;
reg ap_idle;
reg start_write;
reg src1_data_stream_V_read;
reg src2_data_stream_V_read;
reg dst_rows_V_read;
reg dst_cols_V_read;
reg dst_data_stream_V_write;
reg dst_rows_V_out_write;
reg dst_cols_V_out_write;

reg    real_start;
reg    start_once_reg;
reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [3:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    internal_ap_ready;
reg    src1_data_stream_V_blk_n;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
reg   [0:0] exitcond_i_i_reg_1048;
reg    src2_data_stream_V_blk_n;
reg    dst_rows_V_blk_n;
reg    dst_cols_V_blk_n;
reg    dst_data_stream_V_blk_n;
reg    ap_enable_reg_pp0_iter27;
reg   [0:0] exitcond_i_i_reg_1048_pp0_iter26_reg;
reg    dst_rows_V_out_blk_n;
reg    dst_cols_V_out_blk_n;
reg   [31:0] t_V_4_reg_266;
wire  signed [31:0] rows_V_fu_302_p1;
reg  signed [31:0] rows_V_reg_1029;
reg    ap_block_state1;
wire  signed [31:0] cols_V_fu_306_p1;
reg  signed [31:0] cols_V_reg_1034;
wire   [0:0] exitcond4_i_i_fu_310_p2;
wire    ap_CS_fsm_state2;
wire   [31:0] i_V_fu_315_p2;
reg   [31:0] i_V_reg_1043;
wire   [0:0] exitcond_i_i_fu_321_p2;
wire    ap_block_state3_pp0_stage0_iter0;
reg    ap_block_state4_pp0_stage0_iter1;
wire    ap_block_state5_pp0_stage0_iter2;
wire    ap_block_state6_pp0_stage0_iter3;
wire    ap_block_state7_pp0_stage0_iter4;
wire    ap_block_state8_pp0_stage0_iter5;
wire    ap_block_state9_pp0_stage0_iter6;
wire    ap_block_state10_pp0_stage0_iter7;
wire    ap_block_state11_pp0_stage0_iter8;
wire    ap_block_state12_pp0_stage0_iter9;
wire    ap_block_state13_pp0_stage0_iter10;
wire    ap_block_state14_pp0_stage0_iter11;
wire    ap_block_state15_pp0_stage0_iter12;
wire    ap_block_state16_pp0_stage0_iter13;
wire    ap_block_state17_pp0_stage0_iter14;
wire    ap_block_state18_pp0_stage0_iter15;
wire    ap_block_state19_pp0_stage0_iter16;
wire    ap_block_state20_pp0_stage0_iter17;
wire    ap_block_state21_pp0_stage0_iter18;
wire    ap_block_state22_pp0_stage0_iter19;
wire    ap_block_state23_pp0_stage0_iter20;
wire    ap_block_state24_pp0_stage0_iter21;
wire    ap_block_state25_pp0_stage0_iter22;
wire    ap_block_state26_pp0_stage0_iter23;
wire    ap_block_state27_pp0_stage0_iter24;
wire    ap_block_state28_pp0_stage0_iter25;
wire    ap_block_state29_pp0_stage0_iter26;
reg    ap_block_state30_pp0_stage0_iter27;
reg    ap_block_pp0_stage0_11001;
reg   [0:0] exitcond_i_i_reg_1048_pp0_iter1_reg;
reg   [0:0] exitcond_i_i_reg_1048_pp0_iter2_reg;
reg   [0:0] exitcond_i_i_reg_1048_pp0_iter3_reg;
reg   [0:0] exitcond_i_i_reg_1048_pp0_iter4_reg;
reg   [0:0] exitcond_i_i_reg_1048_pp0_iter5_reg;
reg   [0:0] exitcond_i_i_reg_1048_pp0_iter6_reg;
reg   [0:0] exitcond_i_i_reg_1048_pp0_iter7_reg;
reg   [0:0] exitcond_i_i_reg_1048_pp0_iter8_reg;
reg   [0:0] exitcond_i_i_reg_1048_pp0_iter9_reg;
reg   [0:0] exitcond_i_i_reg_1048_pp0_iter10_reg;
reg   [0:0] exitcond_i_i_reg_1048_pp0_iter11_reg;
reg   [0:0] exitcond_i_i_reg_1048_pp0_iter12_reg;
reg   [0:0] exitcond_i_i_reg_1048_pp0_iter13_reg;
reg   [0:0] exitcond_i_i_reg_1048_pp0_iter14_reg;
reg   [0:0] exitcond_i_i_reg_1048_pp0_iter15_reg;
reg   [0:0] exitcond_i_i_reg_1048_pp0_iter16_reg;
reg   [0:0] exitcond_i_i_reg_1048_pp0_iter17_reg;
reg   [0:0] exitcond_i_i_reg_1048_pp0_iter18_reg;
reg   [0:0] exitcond_i_i_reg_1048_pp0_iter19_reg;
reg   [0:0] exitcond_i_i_reg_1048_pp0_iter20_reg;
reg   [0:0] exitcond_i_i_reg_1048_pp0_iter21_reg;
reg   [0:0] exitcond_i_i_reg_1048_pp0_iter22_reg;
reg   [0:0] exitcond_i_i_reg_1048_pp0_iter23_reg;
reg   [0:0] exitcond_i_i_reg_1048_pp0_iter24_reg;
reg   [0:0] exitcond_i_i_reg_1048_pp0_iter25_reg;
wire   [31:0] j_V_fu_326_p2;
reg    ap_enable_reg_pp0_iter0;
reg   [7:0] tmp_reg_1057;
reg   [7:0] tmp_87_reg_1062;
wire   [63:0] grp_fu_296_p1;
reg   [63:0] tmp_i_i_110_reg_1077;
wire   [63:0] grp_fu_299_p1;
reg   [63:0] tmp_43_i_i_reg_1082;
wire   [63:0] grp_fu_286_p2;
reg   [63:0] t1_reg_1087;
wire   [63:0] grp_fu_291_p2;
reg   [63:0] t2_reg_1092;
wire   [63:0] grp_fu_277_p2;
reg   [63:0] tmp_44_i_i_reg_1097;
wire   [63:0] grp_fu_281_p2;
reg   [63:0] sum_reg_1102;
wire   [63:0] p_Val2_16_fu_340_p1;
reg   [63:0] p_Val2_16_reg_1107;
wire   [0:0] tmp_i_i_i_i_fu_357_p2;
reg   [0:0] tmp_i_i_i_i_reg_1112;
reg   [0:0] tmp_i_i_i_i_reg_1112_pp0_iter25_reg;
reg   [0:0] tmp_i_i_i_i_reg_1112_pp0_iter26_reg;
wire   [0:0] tmp_i_i_i_i_111_fu_363_p2;
reg   [0:0] tmp_i_i_i_i_111_reg_1118;
reg   [0:0] tmp_i_i_i_i_111_reg_1118_pp0_iter25_reg;
reg   [0:0] tmp_i_i_i_i_111_reg_1118_pp0_iter26_reg;
reg   [0:0] p_Result_7_reg_1124;
reg   [0:0] p_Result_7_reg_1124_pp0_iter25_reg;
wire   [53:0] p_Result_8_fu_393_p1;
reg   [53:0] p_Result_8_reg_1133;
wire   [53:0] man_V_1_fu_397_p2;
reg   [53:0] man_V_1_reg_1138;
wire   [0:0] tmp_i_fu_403_p2;
reg   [0:0] tmp_i_reg_1143;
reg   [0:0] tmp_i_reg_1143_pp0_iter25_reg;
reg   [0:0] tmp_i_reg_1143_pp0_iter26_reg;
wire   [11:0] F2_fu_409_p2;
reg   [11:0] F2_reg_1149;
wire   [0:0] tmp_1_i_fu_415_p2;
reg   [0:0] tmp_1_i_reg_1157;
wire  signed [11:0] F2_2_fu_427_p3;
reg  signed [11:0] F2_2_reg_1163;
reg  signed [11:0] F2_2_reg_1163_pp0_iter25_reg;
wire   [0:0] tmp_6_i_fu_435_p2;
reg   [0:0] tmp_6_i_reg_1169;
reg   [0:0] tmp_6_i_reg_1169_pp0_iter25_reg;
wire   [0:0] tmp_9_i_fu_441_p2;
reg   [0:0] tmp_9_i_reg_1176;
wire   [0:0] icmp_fu_457_p2;
reg   [0:0] icmp_reg_1181;
reg   [0:0] icmp_reg_1181_pp0_iter25_reg;
wire   [7:0] tmp_92_fu_471_p1;
reg   [7:0] tmp_92_reg_1187;
wire   [0:0] p_Result_9_fu_540_p3;
reg   [0:0] p_Result_9_reg_1193;
wire   [7:0] p_Val2_18_fu_552_p2;
reg   [7:0] p_Val2_18_reg_1198;
wire   [0:0] sel_tmp2_i_fu_577_p2;
reg   [0:0] sel_tmp2_i_reg_1204;
wire   [0:0] sel_tmp3_i_fu_582_p2;
reg   [0:0] sel_tmp3_i_reg_1209;
wire   [0:0] sel_tmp12_demorgan_i_fu_588_p2;
reg   [0:0] sel_tmp12_demorgan_i_reg_1214;
wire   [0:0] carry_1_i_i_fu_609_p2;
reg   [0:0] carry_1_i_i_reg_1219;
wire   [0:0] tmp_21_i_fu_633_p2;
reg   [0:0] tmp_21_i_reg_1225;
wire   [0:0] rev4_fu_647_p2;
reg   [0:0] rev4_reg_1231;
wire   [0:0] Range1_all_ones_1_fu_673_p2;
reg   [0:0] Range1_all_ones_1_reg_1238;
reg   [0:0] tmp_101_reg_1245;
wire   [0:0] tmp_26_i_fu_687_p2;
reg   [0:0] tmp_26_i_reg_1250;
wire   [53:0] tmp_27_i_fu_693_p1;
reg   [53:0] tmp_27_i_reg_1256;
wire   [53:0] Range2_V_1_fu_697_p2;
reg   [53:0] Range2_V_1_reg_1261;
wire   [0:0] Range1_all_zeros_1_fu_709_p2;
reg   [0:0] Range1_all_zeros_1_reg_1267;
wire   [0:0] sel_tmp34_i_fu_727_p2;
reg   [0:0] sel_tmp34_i_reg_1272;
wire   [7:0] p_Val2_19_fu_780_p3;
reg   [7:0] p_Val2_19_reg_1278;
wire   [0:0] underflow_fu_919_p3;
reg   [0:0] underflow_reg_1284;
wire   [0:0] p_179_demorgan_i_i_fu_932_p2;
reg   [0:0] p_179_demorgan_i_i_reg_1290;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state3;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg    ap_enable_reg_pp0_iter13;
reg    ap_enable_reg_pp0_iter14;
reg    ap_enable_reg_pp0_iter15;
reg    ap_enable_reg_pp0_iter16;
reg    ap_enable_reg_pp0_iter17;
reg    ap_enable_reg_pp0_iter18;
reg    ap_enable_reg_pp0_iter19;
reg    ap_enable_reg_pp0_iter20;
reg    ap_enable_reg_pp0_iter21;
reg    ap_enable_reg_pp0_iter22;
reg    ap_enable_reg_pp0_iter23;
reg    ap_enable_reg_pp0_iter24;
reg    ap_enable_reg_pp0_iter25;
reg    ap_enable_reg_pp0_iter26;
reg   [31:0] t_V_reg_255;
wire    ap_CS_fsm_state31;
reg    ap_block_pp0_stage0_01001;
wire   [31:0] grp_fu_296_p0;
wire   [31:0] grp_fu_299_p0;
wire  signed [10:0] rows_V_fu_302_p0;
wire  signed [11:0] cols_V_fu_306_p0;
wire   [10:0] tmp_V_fu_343_p4;
wire   [51:0] tmp_V_3_fu_353_p1;
wire   [52:0] tmp_2_i_fu_385_p3;
wire   [62:0] tmp_89_fu_369_p1;
wire   [11:0] tmp_8_i_fu_381_p1;
wire   [11:0] tmp_5_i_fu_421_p2;
wire   [8:0] tmp_93_fu_447_p4;
wire   [53:0] p_Val2_s_fu_463_p3;
wire  signed [31:0] F2_2_cast_i_fu_468_p1;
wire   [53:0] tmp_12_i_fu_475_p1;
wire   [53:0] tmp_13_i_fu_479_p2;
wire   [0:0] tmp_95_fu_489_p3;
wire   [7:0] tmp_94_fu_485_p1;
wire   [7:0] tmp_15_i_fu_496_p3;
wire   [11:0] tmp_18_i_fu_516_p2;
wire   [31:0] tmp_27_cast_i_fu_521_p1;
wire   [0:0] tmp_17_i_fu_511_p2;
wire   [0:0] p_Result_s_fu_525_p3;
wire   [7:0] p_Val2_17_fu_504_p3;
wire   [0:0] qb_fu_533_p3;
wire   [7:0] tmp_19_i_fu_548_p1;
wire   [0:0] tmp_97_fu_558_p3;
wire   [0:0] sel_tmp1_i_fu_572_p2;
wire   [0:0] tmp_11_not_i_fu_592_p2;
wire   [0:0] not_sel_tmp28_i_fu_597_p2;
wire   [0:0] rev_fu_566_p2;
wire   [0:0] tmp1_fu_603_p2;
wire  signed [11:0] pos1_fu_615_p2;
wire  signed [11:0] pos2_fu_624_p2;
wire   [0:0] tmp_99_fu_639_p3;
wire  signed [31:0] pos1_cast_i_fu_620_p1;
wire   [53:0] tmp_23_i_fu_653_p1;
wire   [53:0] tmp_24_i_fu_657_p2;
wire   [0:0] lD_fu_663_p1;
wire   [0:0] tmp2_fu_667_p2;
wire  signed [31:0] pos2_cast_i_fu_629_p1;
wire   [0:0] tmp_26_i_not_fu_715_p2;
wire   [0:0] tmp_30_i_fu_703_p2;
wire   [0:0] sel_tmp33_i_fu_721_p2;
wire   [7:0] tmp_91_fu_733_p1;
wire   [7:0] sel_tmp_i_fu_741_p3;
wire   [0:0] sel_tmp7_i_fu_753_p2;
wire   [0:0] sel_tmp8_i_fu_758_p2;
wire   [7:0] sel_tmp4_i_fu_747_p3;
wire   [0:0] sel_tmp12_i_fu_770_p2;
wire   [0:0] sel_tmp13_i_fu_775_p2;
wire   [7:0] tmp_16_i_fu_736_p2;
wire   [7:0] sel_tmp9_i_fu_763_p3;
wire   [0:0] rev5_fu_796_p2;
wire   [53:0] r_V_fu_806_p2;
wire   [0:0] or_cond173_i_i_fu_801_p2;
wire   [0:0] Range2_all_ones_fu_811_p2;
wire   [0:0] Range2_all_ones_1_i_s_fu_816_p3;
wire   [0:0] tmp_28_i_fu_833_p2;
wire   [0:0] Range1_all_zeros_fu_838_p2;
wire   [0:0] or_cond175_i_i_fu_824_p2;
wire   [0:0] Range1_all_ones_fu_828_p2;
wire   [0:0] sel_tmp35_i_fu_853_p3;
wire   [0:0] p_177_i_i_fu_849_p2;
wire   [0:0] p_180_i_i_fu_843_p2;
wire   [0:0] sel_tmp39_i_fu_866_p3;
wire   [0:0] Range1_all_ones_2_i_s_fu_858_p3;
wire   [0:0] Range1_all_zeros_2_i_fu_873_p3;
wire   [0:0] Range1_all_ones_2_i_fu_888_p2;
wire   [0:0] p_Result_10_fu_788_p3;
wire   [0:0] sel_tmp41_i_fu_899_p2;
wire   [0:0] tmp3_fu_904_p2;
wire   [0:0] sel_tmp47_i_fu_915_p2;
wire   [0:0] tmp_31_i_fu_893_p2;
wire   [0:0] sel_tmp46_i_fu_910_p2;
wire   [0:0] tmp4_fu_927_p2;
wire   [0:0] deleted_zeros_fu_881_p3;
wire   [0:0] underflow_not_i_fu_942_p2;
wire   [0:0] p_179_demorgan_i_not_s_fu_952_p2;
wire   [0:0] brmerge_i_not_i_fu_947_p2;
wire   [0:0] sel_tmp50_i_demorgan_fu_970_p2;
wire   [0:0] sel_tmp50_i_fu_974_p2;
wire   [0:0] sel_tmp51_i_fu_980_p2;
wire   [0:0] tmp_demorgan_i_fu_938_p2;
wire   [0:0] tmp_s_fu_985_p2;
wire   [0:0] tmp_40_fu_991_p2;
wire   [0:0] sel_tmp55_demorgan_i_fu_1003_p2;
wire   [0:0] brmerge_i_fu_957_p2;
wire   [0:0] sel_tmp55_i_fu_1008_p2;
wire   [0:0] sel_tmp56_i_fu_1014_p2;
wire   [7:0] p_Val2_11_0_i_mux_i_fu_963_p3;
wire   [7:0] sel_tmp52_i_fu_996_p3;
reg    grp_fu_277_ce;
reg    grp_fu_281_ce;
reg    grp_fu_286_ce;
reg    grp_fu_291_ce;
reg    grp_fu_296_ce;
reg    grp_fu_299_ce;
reg   [3:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;

// power-on initialization
initial begin
#0 start_once_reg = 1'b0;
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 4'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter27 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
#0 ap_enable_reg_pp0_iter14 = 1'b0;
#0 ap_enable_reg_pp0_iter15 = 1'b0;
#0 ap_enable_reg_pp0_iter16 = 1'b0;
#0 ap_enable_reg_pp0_iter17 = 1'b0;
#0 ap_enable_reg_pp0_iter18 = 1'b0;
#0 ap_enable_reg_pp0_iter19 = 1'b0;
#0 ap_enable_reg_pp0_iter20 = 1'b0;
#0 ap_enable_reg_pp0_iter21 = 1'b0;
#0 ap_enable_reg_pp0_iter22 = 1'b0;
#0 ap_enable_reg_pp0_iter23 = 1'b0;
#0 ap_enable_reg_pp0_iter24 = 1'b0;
#0 ap_enable_reg_pp0_iter25 = 1'b0;
#0 ap_enable_reg_pp0_iter26 = 1'b0;
end

sobel_hls_dadd_64rcU #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
sobel_hls_dadd_64rcU_U76(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(t1_reg_1087),
    .din1(t2_reg_1092),
    .ce(grp_fu_277_ce),
    .dout(grp_fu_277_p2)
);

sobel_hls_dadd_64rcU #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
sobel_hls_dadd_64rcU_U77(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_44_i_i_reg_1097),
    .din1(64'd0),
    .ce(grp_fu_281_ce),
    .dout(grp_fu_281_p2)
);

sobel_hls_dmul_64sc4 #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
sobel_hls_dmul_64sc4_U78(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_i_i_110_reg_1077),
    .din1(64'd4602678819172646912),
    .ce(grp_fu_286_ce),
    .dout(grp_fu_286_p2)
);

sobel_hls_dmul_64sc4 #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
sobel_hls_dmul_64sc4_U79(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_43_i_i_reg_1082),
    .din1(64'd4602678819172646912),
    .ce(grp_fu_291_ce),
    .dout(grp_fu_291_p2)
);

sobel_hls_uitodp_tde #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
sobel_hls_uitodp_tde_U80(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_296_p0),
    .ce(grp_fu_296_ce),
    .dout(grp_fu_296_p1)
);

sobel_hls_uitodp_tde #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
sobel_hls_uitodp_tde_U81(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_299_p0),
    .ce(grp_fu_299_ce),
    .dout(grp_fu_299_p1)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state2) & (exitcond4_i_i_fu_310_p2 == 1'd1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_condition_pp0_exit_iter0_state3))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((exitcond4_i_i_fu_310_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state3)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state3);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter14 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter15 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter16 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter17 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter18 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter18 <= ap_enable_reg_pp0_iter17;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter19 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter19 <= ap_enable_reg_pp0_iter18;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter20 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter20 <= ap_enable_reg_pp0_iter19;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter21 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter21 <= ap_enable_reg_pp0_iter20;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter22 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter22 <= ap_enable_reg_pp0_iter21;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter23 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter23 <= ap_enable_reg_pp0_iter22;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter24 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter24 <= ap_enable_reg_pp0_iter23;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter25 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter25 <= ap_enable_reg_pp0_iter24;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter26 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter26 <= ap_enable_reg_pp0_iter25;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter27 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter27 <= ap_enable_reg_pp0_iter26;
        end else if (((exitcond4_i_i_fu_310_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_enable_reg_pp0_iter27 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        start_once_reg <= 1'b0;
    end else begin
        if (((internal_ap_ready == 1'b0) & (real_start == 1'b1))) begin
            start_once_reg <= 1'b1;
        end else if ((internal_ap_ready == 1'b1)) begin
            start_once_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_i_i_fu_321_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        t_V_4_reg_266 <= j_V_fu_326_p2;
    end else if (((exitcond4_i_i_fu_310_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        t_V_4_reg_266 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        t_V_reg_255 <= i_V_reg_1043;
    end else if ((~((dst_cols_V_out_full_n == 1'b0) | (dst_rows_V_out_full_n == 1'b0) | (dst_cols_V_empty_n == 1'b0) | (dst_rows_V_empty_n == 1'b0) | (real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        t_V_reg_255 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_i_i_reg_1048_pp0_iter23_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        F2_2_reg_1163 <= F2_2_fu_427_p3;
        F2_reg_1149 <= F2_fu_409_p2;
        icmp_reg_1181 <= icmp_fu_457_p2;
        man_V_1_reg_1138 <= man_V_1_fu_397_p2;
        p_Result_7_reg_1124 <= p_Val2_16_fu_340_p1[32'd63];
        p_Result_8_reg_1133[51 : 0] <= p_Result_8_fu_393_p1[51 : 0];
        p_Val2_16_reg_1107 <= p_Val2_16_fu_340_p1;
        tmp_1_i_reg_1157 <= tmp_1_i_fu_415_p2;
        tmp_6_i_reg_1169 <= tmp_6_i_fu_435_p2;
        tmp_9_i_reg_1176 <= tmp_9_i_fu_441_p2;
        tmp_i_i_i_i_111_reg_1118 <= tmp_i_i_i_i_111_fu_363_p2;
        tmp_i_i_i_i_reg_1112 <= tmp_i_i_i_i_fu_357_p2;
        tmp_i_reg_1143 <= tmp_i_fu_403_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        F2_2_reg_1163_pp0_iter25_reg <= F2_2_reg_1163;
        exitcond_i_i_reg_1048_pp0_iter10_reg <= exitcond_i_i_reg_1048_pp0_iter9_reg;
        exitcond_i_i_reg_1048_pp0_iter11_reg <= exitcond_i_i_reg_1048_pp0_iter10_reg;
        exitcond_i_i_reg_1048_pp0_iter12_reg <= exitcond_i_i_reg_1048_pp0_iter11_reg;
        exitcond_i_i_reg_1048_pp0_iter13_reg <= exitcond_i_i_reg_1048_pp0_iter12_reg;
        exitcond_i_i_reg_1048_pp0_iter14_reg <= exitcond_i_i_reg_1048_pp0_iter13_reg;
        exitcond_i_i_reg_1048_pp0_iter15_reg <= exitcond_i_i_reg_1048_pp0_iter14_reg;
        exitcond_i_i_reg_1048_pp0_iter16_reg <= exitcond_i_i_reg_1048_pp0_iter15_reg;
        exitcond_i_i_reg_1048_pp0_iter17_reg <= exitcond_i_i_reg_1048_pp0_iter16_reg;
        exitcond_i_i_reg_1048_pp0_iter18_reg <= exitcond_i_i_reg_1048_pp0_iter17_reg;
        exitcond_i_i_reg_1048_pp0_iter19_reg <= exitcond_i_i_reg_1048_pp0_iter18_reg;
        exitcond_i_i_reg_1048_pp0_iter20_reg <= exitcond_i_i_reg_1048_pp0_iter19_reg;
        exitcond_i_i_reg_1048_pp0_iter21_reg <= exitcond_i_i_reg_1048_pp0_iter20_reg;
        exitcond_i_i_reg_1048_pp0_iter22_reg <= exitcond_i_i_reg_1048_pp0_iter21_reg;
        exitcond_i_i_reg_1048_pp0_iter23_reg <= exitcond_i_i_reg_1048_pp0_iter22_reg;
        exitcond_i_i_reg_1048_pp0_iter24_reg <= exitcond_i_i_reg_1048_pp0_iter23_reg;
        exitcond_i_i_reg_1048_pp0_iter25_reg <= exitcond_i_i_reg_1048_pp0_iter24_reg;
        exitcond_i_i_reg_1048_pp0_iter26_reg <= exitcond_i_i_reg_1048_pp0_iter25_reg;
        exitcond_i_i_reg_1048_pp0_iter2_reg <= exitcond_i_i_reg_1048_pp0_iter1_reg;
        exitcond_i_i_reg_1048_pp0_iter3_reg <= exitcond_i_i_reg_1048_pp0_iter2_reg;
        exitcond_i_i_reg_1048_pp0_iter4_reg <= exitcond_i_i_reg_1048_pp0_iter3_reg;
        exitcond_i_i_reg_1048_pp0_iter5_reg <= exitcond_i_i_reg_1048_pp0_iter4_reg;
        exitcond_i_i_reg_1048_pp0_iter6_reg <= exitcond_i_i_reg_1048_pp0_iter5_reg;
        exitcond_i_i_reg_1048_pp0_iter7_reg <= exitcond_i_i_reg_1048_pp0_iter6_reg;
        exitcond_i_i_reg_1048_pp0_iter8_reg <= exitcond_i_i_reg_1048_pp0_iter7_reg;
        exitcond_i_i_reg_1048_pp0_iter9_reg <= exitcond_i_i_reg_1048_pp0_iter8_reg;
        icmp_reg_1181_pp0_iter25_reg <= icmp_reg_1181;
        p_Result_7_reg_1124_pp0_iter25_reg <= p_Result_7_reg_1124;
        tmp_6_i_reg_1169_pp0_iter25_reg <= tmp_6_i_reg_1169;
        tmp_i_i_i_i_111_reg_1118_pp0_iter25_reg <= tmp_i_i_i_i_111_reg_1118;
        tmp_i_i_i_i_111_reg_1118_pp0_iter26_reg <= tmp_i_i_i_i_111_reg_1118_pp0_iter25_reg;
        tmp_i_i_i_i_reg_1112_pp0_iter25_reg <= tmp_i_i_i_i_reg_1112;
        tmp_i_i_i_i_reg_1112_pp0_iter26_reg <= tmp_i_i_i_i_reg_1112_pp0_iter25_reg;
        tmp_i_reg_1143_pp0_iter25_reg <= tmp_i_reg_1143;
        tmp_i_reg_1143_pp0_iter26_reg <= tmp_i_reg_1143_pp0_iter25_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_i_i_reg_1048_pp0_iter24_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        Range1_all_ones_1_reg_1238 <= Range1_all_ones_1_fu_673_p2;
        Range1_all_zeros_1_reg_1267 <= Range1_all_zeros_1_fu_709_p2;
        Range2_V_1_reg_1261 <= Range2_V_1_fu_697_p2;
        carry_1_i_i_reg_1219 <= carry_1_i_i_fu_609_p2;
        p_Result_9_reg_1193 <= p_Val2_17_fu_504_p3[32'd7];
        p_Val2_18_reg_1198 <= p_Val2_18_fu_552_p2;
        rev4_reg_1231 <= rev4_fu_647_p2;
        sel_tmp12_demorgan_i_reg_1214 <= sel_tmp12_demorgan_i_fu_588_p2;
        sel_tmp2_i_reg_1204 <= sel_tmp2_i_fu_577_p2;
        sel_tmp34_i_reg_1272 <= sel_tmp34_i_fu_727_p2;
        sel_tmp3_i_reg_1209 <= sel_tmp3_i_fu_582_p2;
        tmp_101_reg_1245 <= pos2_fu_624_p2[32'd11];
        tmp_21_i_reg_1225 <= tmp_21_i_fu_633_p2;
        tmp_26_i_reg_1250 <= tmp_26_i_fu_687_p2;
        tmp_27_i_reg_1256[31 : 0] <= tmp_27_i_fu_693_p1[31 : 0];
        tmp_92_reg_1187 <= tmp_92_fu_471_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((~((dst_cols_V_out_full_n == 1'b0) | (dst_rows_V_out_full_n == 1'b0) | (dst_cols_V_empty_n == 1'b0) | (dst_rows_V_empty_n == 1'b0) | (real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        cols_V_reg_1034 <= cols_V_fu_306_p1;
        rows_V_reg_1029 <= rows_V_fu_302_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        exitcond_i_i_reg_1048 <= exitcond_i_i_fu_321_p2;
        exitcond_i_i_reg_1048_pp0_iter1_reg <= exitcond_i_i_reg_1048;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        i_V_reg_1043 <= i_V_fu_315_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_i_i_reg_1048_pp0_iter25_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_179_demorgan_i_i_reg_1290 <= p_179_demorgan_i_i_fu_932_p2;
        p_Val2_19_reg_1278 <= p_Val2_19_fu_780_p3;
        underflow_reg_1284 <= underflow_fu_919_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_i_i_reg_1048_pp0_iter22_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        sum_reg_1102 <= grp_fu_281_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_i_i_reg_1048_pp0_iter12_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        t1_reg_1087 <= grp_fu_286_p2;
        t2_reg_1092 <= grp_fu_291_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_i_i_reg_1048_pp0_iter6_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_43_i_i_reg_1082 <= grp_fu_299_p1;
        tmp_i_i_110_reg_1077 <= grp_fu_296_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_i_i_reg_1048_pp0_iter17_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_44_i_i_reg_1097 <= grp_fu_277_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_i_i_reg_1048 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_87_reg_1062 <= src2_data_stream_V_dout;
        tmp_reg_1057 <= src1_data_stream_V_dout;
    end
end

always @ (*) begin
    if ((exitcond_i_i_fu_321_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state3 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state3 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (exitcond4_i_i_fu_310_p2 == 1'd1))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((real_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter27 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter26 == 1'b0) & (ap_enable_reg_pp0_iter25 == 1'b0) & (ap_enable_reg_pp0_iter24 == 1'b0) & (ap_enable_reg_pp0_iter23 == 1'b0) & (ap_enable_reg_pp0_iter22 == 1'b0) & (ap_enable_reg_pp0_iter21 == 1'b0) & (ap_enable_reg_pp0_iter20 == 1'b0) & (ap_enable_reg_pp0_iter19 == 1'b0) & (ap_enable_reg_pp0_iter18 == 1'b0) & (ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        dst_cols_V_blk_n = dst_cols_V_empty_n;
    end else begin
        dst_cols_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        dst_cols_V_out_blk_n = dst_cols_V_out_full_n;
    end else begin
        dst_cols_V_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((dst_cols_V_out_full_n == 1'b0) | (dst_rows_V_out_full_n == 1'b0) | (dst_cols_V_empty_n == 1'b0) | (dst_rows_V_empty_n == 1'b0) | (real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        dst_cols_V_out_write = 1'b1;
    end else begin
        dst_cols_V_out_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((dst_cols_V_out_full_n == 1'b0) | (dst_rows_V_out_full_n == 1'b0) | (dst_cols_V_empty_n == 1'b0) | (dst_rows_V_empty_n == 1'b0) | (real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        dst_cols_V_read = 1'b1;
    end else begin
        dst_cols_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_i_i_reg_1048_pp0_iter26_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter27 == 1'b1))) begin
        dst_data_stream_V_blk_n = dst_data_stream_V_full_n;
    end else begin
        dst_data_stream_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((exitcond_i_i_reg_1048_pp0_iter26_reg == 1'd0) & (ap_enable_reg_pp0_iter27 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        dst_data_stream_V_write = 1'b1;
    end else begin
        dst_data_stream_V_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        dst_rows_V_blk_n = dst_rows_V_empty_n;
    end else begin
        dst_rows_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        dst_rows_V_out_blk_n = dst_rows_V_out_full_n;
    end else begin
        dst_rows_V_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((dst_cols_V_out_full_n == 1'b0) | (dst_rows_V_out_full_n == 1'b0) | (dst_cols_V_empty_n == 1'b0) | (dst_rows_V_empty_n == 1'b0) | (real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        dst_rows_V_out_write = 1'b1;
    end else begin
        dst_rows_V_out_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((dst_cols_V_out_full_n == 1'b0) | (dst_rows_V_out_full_n == 1'b0) | (dst_cols_V_empty_n == 1'b0) | (dst_rows_V_empty_n == 1'b0) | (real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        dst_rows_V_read = 1'b1;
    end else begin
        dst_rows_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_277_ce = 1'b1;
    end else begin
        grp_fu_277_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_281_ce = 1'b1;
    end else begin
        grp_fu_281_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_286_ce = 1'b1;
    end else begin
        grp_fu_286_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_291_ce = 1'b1;
    end else begin
        grp_fu_291_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_296_ce = 1'b1;
    end else begin
        grp_fu_296_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_299_ce = 1'b1;
    end else begin
        grp_fu_299_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (exitcond4_i_i_fu_310_p2 == 1'd1))) begin
        internal_ap_ready = 1'b1;
    end else begin
        internal_ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (start_full_n == 1'b0))) begin
        real_start = 1'b0;
    end else begin
        real_start = ap_start;
    end
end

always @ (*) begin
    if (((exitcond_i_i_reg_1048 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        src1_data_stream_V_blk_n = src1_data_stream_V_empty_n;
    end else begin
        src1_data_stream_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((exitcond_i_i_reg_1048 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        src1_data_stream_V_read = 1'b1;
    end else begin
        src1_data_stream_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_i_i_reg_1048 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        src2_data_stream_V_blk_n = src2_data_stream_V_empty_n;
    end else begin
        src2_data_stream_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((exitcond_i_i_reg_1048 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        src2_data_stream_V_read = 1'b1;
    end else begin
        src2_data_stream_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (real_start == 1'b1))) begin
        start_write = 1'b1;
    end else begin
        start_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((dst_cols_V_out_full_n == 1'b0) | (dst_rows_V_out_full_n == 1'b0) | (dst_cols_V_empty_n == 1'b0) | (dst_rows_V_empty_n == 1'b0) | (real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (exitcond4_i_i_fu_310_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond_i_i_fu_321_p2 == 1'd1)) & ~((ap_enable_reg_pp0_iter26 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter27 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((ap_enable_reg_pp0_iter26 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter27 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond_i_i_fu_321_p2 == 1'd1)))) begin
                ap_NS_fsm = ap_ST_fsm_state31;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign F2_2_cast_i_fu_468_p1 = F2_2_reg_1163;

assign F2_2_fu_427_p3 = ((tmp_1_i_fu_415_p2[0:0] === 1'b1) ? F2_fu_409_p2 : tmp_5_i_fu_421_p2);

assign F2_fu_409_p2 = (12'd1075 - tmp_8_i_fu_381_p1);

assign Range1_all_ones_1_fu_673_p2 = (tmp_21_i_fu_633_p2 & tmp2_fu_667_p2);

assign Range1_all_ones_2_i_fu_888_p2 = (carry_1_i_i_reg_1219 & Range1_all_ones_2_i_s_fu_858_p3);

assign Range1_all_ones_2_i_s_fu_858_p3 = ((or_cond175_i_i_fu_824_p2[0:0] === 1'b1) ? Range1_all_ones_fu_828_p2 : sel_tmp35_i_fu_853_p3);

assign Range1_all_ones_fu_828_p2 = (Range2_all_ones_1_i_s_fu_816_p3 & Range1_all_ones_1_reg_1238);

assign Range1_all_zeros_1_fu_709_p2 = ((p_Val2_s_fu_463_p3 == 54'd0) ? 1'b1 : 1'b0);

assign Range1_all_zeros_2_i_fu_873_p3 = ((or_cond175_i_i_fu_824_p2[0:0] === 1'b1) ? p_180_i_i_fu_843_p2 : sel_tmp39_i_fu_866_p3);

assign Range1_all_zeros_fu_838_p2 = (1'd1 ^ Range1_all_ones_1_reg_1238);

assign Range2_V_1_fu_697_p2 = p_Val2_s_fu_463_p3 >> tmp_27_i_fu_693_p1;

assign Range2_all_ones_1_i_s_fu_816_p3 = ((or_cond173_i_i_fu_801_p2[0:0] === 1'b1) ? Range2_all_ones_fu_811_p2 : rev5_fu_796_p2);

assign Range2_all_ones_fu_811_p2 = ((Range2_V_1_reg_1261 == r_V_fu_806_p2) ? 1'b1 : 1'b0);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state31 = ap_CS_fsm[32'd3];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((exitcond_i_i_reg_1048_pp0_iter26_reg == 1'd0) & (dst_data_stream_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter27 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((exitcond_i_i_reg_1048 == 1'd0) & (src2_data_stream_V_empty_n == 1'b0)) | ((exitcond_i_i_reg_1048 == 1'd0) & (src1_data_stream_V_empty_n == 1'b0)))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((exitcond_i_i_reg_1048_pp0_iter26_reg == 1'd0) & (dst_data_stream_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter27 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((exitcond_i_i_reg_1048 == 1'd0) & (src2_data_stream_V_empty_n == 1'b0)) | ((exitcond_i_i_reg_1048 == 1'd0) & (src1_data_stream_V_empty_n == 1'b0)))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((exitcond_i_i_reg_1048_pp0_iter26_reg == 1'd0) & (dst_data_stream_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter27 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((exitcond_i_i_reg_1048 == 1'd0) & (src2_data_stream_V_empty_n == 1'b0)) | ((exitcond_i_i_reg_1048 == 1'd0) & (src1_data_stream_V_empty_n == 1'b0)))));
end

always @ (*) begin
    ap_block_state1 = ((dst_cols_V_out_full_n == 1'b0) | (dst_rows_V_out_full_n == 1'b0) | (dst_cols_V_empty_n == 1'b0) | (dst_rows_V_empty_n == 1'b0) | (real_start == 1'b0) | (ap_done_reg == 1'b1));
end

assign ap_block_state10_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage0_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage0_iter16 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage0_iter17 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage0_iter18 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage0_iter19 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage0_iter20 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage0_iter21 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp0_stage0_iter22 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp0_stage0_iter23 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp0_stage0_iter24 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp0_stage0_iter25 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp0_stage0_iter26 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state30_pp0_stage0_iter27 = ((exitcond_i_i_reg_1048_pp0_iter26_reg == 1'd0) & (dst_data_stream_V_full_n == 1'b0));
end

assign ap_block_state3_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state4_pp0_stage0_iter1 = (((exitcond_i_i_reg_1048 == 1'd0) & (src2_data_stream_V_empty_n == 1'b0)) | ((exitcond_i_i_reg_1048 == 1'd0) & (src1_data_stream_V_empty_n == 1'b0)));
end

assign ap_block_state5_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_ready = internal_ap_ready;

assign brmerge_i_fu_957_p2 = (underflow_not_i_fu_942_p2 | p_179_demorgan_i_not_s_fu_952_p2);

assign brmerge_i_not_i_fu_947_p2 = (underflow_not_i_fu_942_p2 & p_179_demorgan_i_i_reg_1290);

assign carry_1_i_i_fu_609_p2 = (tmp1_fu_603_p2 & sel_tmp3_i_fu_582_p2);

assign cols_V_fu_306_p0 = dst_cols_V_dout;

assign cols_V_fu_306_p1 = cols_V_fu_306_p0;

assign deleted_zeros_fu_881_p3 = ((carry_1_i_i_reg_1219[0:0] === 1'b1) ? Range1_all_ones_2_i_s_fu_858_p3 : Range1_all_zeros_2_i_fu_873_p3);

assign dst_cols_V_out_din = dst_cols_V_dout;

assign dst_data_stream_V_din = ((sel_tmp56_i_fu_1014_p2[0:0] === 1'b1) ? p_Val2_11_0_i_mux_i_fu_963_p3 : sel_tmp52_i_fu_996_p3);

assign dst_rows_V_out_din = dst_rows_V_dout;

assign exitcond4_i_i_fu_310_p2 = ((t_V_reg_255 == rows_V_reg_1029) ? 1'b1 : 1'b0);

assign exitcond_i_i_fu_321_p2 = ((t_V_4_reg_266 == cols_V_reg_1034) ? 1'b1 : 1'b0);

assign grp_fu_296_p0 = tmp_reg_1057;

assign grp_fu_299_p0 = tmp_87_reg_1062;

assign i_V_fu_315_p2 = (t_V_reg_255 + 32'd1);

assign icmp_fu_457_p2 = ((tmp_93_fu_447_p4 == 9'd0) ? 1'b1 : 1'b0);

assign j_V_fu_326_p2 = (t_V_4_reg_266 + 32'd1);

assign lD_fu_663_p1 = tmp_24_i_fu_657_p2[0:0];

assign man_V_1_fu_397_p2 = (54'd0 - p_Result_8_fu_393_p1);

assign not_sel_tmp28_i_fu_597_p2 = (tmp_11_not_i_fu_592_p2 | sel_tmp12_demorgan_i_fu_588_p2);

assign or_cond173_i_i_fu_801_p2 = (tmp_26_i_reg_1250 & rev5_fu_796_p2);

assign or_cond175_i_i_fu_824_p2 = (tmp_26_i_reg_1250 & rev4_reg_1231);

assign p_177_i_i_fu_849_p2 = (rev4_reg_1231 | Range1_all_zeros_1_reg_1267);

assign p_179_demorgan_i_i_fu_932_p2 = (tmp4_fu_927_p2 | deleted_zeros_fu_881_p3);

assign p_179_demorgan_i_not_s_fu_952_p2 = (p_179_demorgan_i_i_reg_1290 ^ 1'd1);

assign p_180_i_i_fu_843_p2 = (tmp_28_i_fu_833_p2 & Range1_all_zeros_fu_838_p2);

assign p_Result_10_fu_788_p3 = p_Val2_19_fu_780_p3[32'd7];

assign p_Result_8_fu_393_p1 = tmp_2_i_fu_385_p3;

assign p_Result_9_fu_540_p3 = p_Val2_17_fu_504_p3[32'd7];

assign p_Result_s_fu_525_p3 = p_Val2_s_fu_463_p3[tmp_27_cast_i_fu_521_p1];

assign p_Val2_11_0_i_mux_i_fu_963_p3 = ((brmerge_i_not_i_fu_947_p2[0:0] === 1'b1) ? p_Val2_19_reg_1278 : 8'd255);

assign p_Val2_16_fu_340_p1 = sum_reg_1102;

assign p_Val2_17_fu_504_p3 = ((tmp_9_i_reg_1176[0:0] === 1'b1) ? tmp_94_fu_485_p1 : tmp_15_i_fu_496_p3);

assign p_Val2_18_fu_552_p2 = (p_Val2_17_fu_504_p3 + tmp_19_i_fu_548_p1);

assign p_Val2_19_fu_780_p3 = ((sel_tmp13_i_fu_775_p2[0:0] === 1'b1) ? tmp_16_i_fu_736_p2 : sel_tmp9_i_fu_763_p3);

assign p_Val2_s_fu_463_p3 = ((p_Result_7_reg_1124[0:0] === 1'b1) ? man_V_1_reg_1138 : p_Result_8_reg_1133);

assign pos1_cast_i_fu_620_p1 = pos1_fu_615_p2;

assign pos1_fu_615_p2 = (12'd8 + F2_reg_1149);

assign pos2_cast_i_fu_629_p1 = pos2_fu_624_p2;

assign pos2_fu_624_p2 = (12'd9 + F2_reg_1149);

assign qb_fu_533_p3 = ((tmp_17_i_fu_511_p2[0:0] === 1'b1) ? p_Result_7_reg_1124 : p_Result_s_fu_525_p3);

assign r_V_fu_806_p2 = 54'd18014398509481983 >> tmp_27_i_reg_1256;

assign rev4_fu_647_p2 = (tmp_99_fu_639_p3 ^ 1'd1);

assign rev5_fu_796_p2 = (tmp_101_reg_1245 ^ 1'd1);

assign rev_fu_566_p2 = (tmp_97_fu_558_p3 ^ 1'd1);

assign rows_V_fu_302_p0 = dst_rows_V_dout;

assign rows_V_fu_302_p1 = rows_V_fu_302_p0;

assign sel_tmp12_demorgan_i_fu_588_p2 = (tmp_6_i_reg_1169 | tmp_1_i_reg_1157);

assign sel_tmp12_i_fu_770_p2 = (sel_tmp12_demorgan_i_reg_1214 ^ 1'd1);

assign sel_tmp13_i_fu_775_p2 = (sel_tmp12_i_fu_770_p2 & icmp_reg_1181_pp0_iter25_reg);

assign sel_tmp1_i_fu_572_p2 = (tmp_6_i_reg_1169 ^ 1'd1);

assign sel_tmp2_i_fu_577_p2 = (tmp_1_i_reg_1157 & sel_tmp1_i_fu_572_p2);

assign sel_tmp33_i_fu_721_p2 = (tmp_99_fu_639_p3 | tmp_26_i_not_fu_715_p2);

assign sel_tmp34_i_fu_727_p2 = (tmp_30_i_fu_703_p2 & sel_tmp33_i_fu_721_p2);

assign sel_tmp35_i_fu_853_p3 = ((sel_tmp34_i_reg_1272[0:0] === 1'b1) ? Range1_all_ones_1_reg_1238 : rev4_reg_1231);

assign sel_tmp39_i_fu_866_p3 = ((sel_tmp34_i_reg_1272[0:0] === 1'b1) ? Range1_all_zeros_fu_838_p2 : p_177_i_i_fu_849_p2);

assign sel_tmp3_i_fu_582_p2 = (sel_tmp2_i_fu_577_p2 & p_Result_9_fu_540_p3);

assign sel_tmp41_i_fu_899_p2 = (tmp_21_i_reg_1225 ^ 1'd1);

assign sel_tmp46_i_fu_910_p2 = (tmp3_fu_904_p2 & p_Result_7_reg_1124_pp0_iter25_reg);

assign sel_tmp47_i_fu_915_p2 = (tmp_21_i_reg_1225 & p_Result_7_reg_1124_pp0_iter25_reg);

assign sel_tmp4_i_fu_747_p3 = ((sel_tmp3_i_reg_1209[0:0] === 1'b1) ? p_Val2_18_reg_1198 : sel_tmp_i_fu_741_p3);

assign sel_tmp50_i_demorgan_fu_970_p2 = (tmp_i_i_i_i_reg_1112_pp0_iter26_reg & tmp_i_i_i_i_111_reg_1118_pp0_iter26_reg);

assign sel_tmp50_i_fu_974_p2 = (sel_tmp50_i_demorgan_fu_970_p2 ^ 1'd1);

assign sel_tmp51_i_fu_980_p2 = (tmp_i_reg_1143_pp0_iter26_reg & sel_tmp50_i_fu_974_p2);

assign sel_tmp52_i_fu_996_p3 = ((tmp_40_fu_991_p2[0:0] === 1'b1) ? 8'd0 : p_Val2_19_reg_1278);

assign sel_tmp55_demorgan_i_fu_1003_p2 = (tmp_i_reg_1143_pp0_iter26_reg | tmp_demorgan_i_fu_938_p2);

assign sel_tmp55_i_fu_1008_p2 = (sel_tmp55_demorgan_i_fu_1003_p2 ^ 1'd1);

assign sel_tmp56_i_fu_1014_p2 = (sel_tmp55_i_fu_1008_p2 & brmerge_i_fu_957_p2);

assign sel_tmp7_i_fu_753_p2 = (p_Result_9_reg_1193 ^ 1'd1);

assign sel_tmp8_i_fu_758_p2 = (sel_tmp7_i_fu_753_p2 & sel_tmp2_i_reg_1204);

assign sel_tmp9_i_fu_763_p3 = ((sel_tmp8_i_fu_758_p2[0:0] === 1'b1) ? p_Val2_18_reg_1198 : sel_tmp4_i_fu_747_p3);

assign sel_tmp_i_fu_741_p3 = ((tmp_6_i_reg_1169_pp0_iter25_reg[0:0] === 1'b1) ? tmp_92_reg_1187 : 8'd0);

assign start_out = real_start;

assign tmp1_fu_603_p2 = (rev_fu_566_p2 & not_sel_tmp28_i_fu_597_p2);

assign tmp2_fu_667_p2 = (rev4_fu_647_p2 & lD_fu_663_p1);

assign tmp3_fu_904_p2 = (sel_tmp41_i_fu_899_p2 & p_Result_10_fu_788_p3);

assign tmp4_fu_927_p2 = (sel_tmp41_i_fu_899_p2 | p_Result_7_reg_1124_pp0_iter25_reg);

assign tmp_11_not_i_fu_592_p2 = (icmp_reg_1181 ^ 1'd1);

assign tmp_12_i_fu_475_p1 = $unsigned(F2_2_cast_i_fu_468_p1);

assign tmp_13_i_fu_479_p2 = $signed(p_Val2_s_fu_463_p3) >>> tmp_12_i_fu_475_p1;

assign tmp_15_i_fu_496_p3 = ((tmp_95_fu_489_p3[0:0] === 1'b1) ? 8'd255 : 8'd0);

assign tmp_16_i_fu_736_p2 = tmp_92_reg_1187 << tmp_91_fu_733_p1;

assign tmp_17_i_fu_511_p2 = (($signed(F2_reg_1149) > $signed(12'd54)) ? 1'b1 : 1'b0);

assign tmp_18_i_fu_516_p2 = ($signed(12'd4095) + $signed(F2_reg_1149));

assign tmp_19_i_fu_548_p1 = qb_fu_533_p3;

assign tmp_1_i_fu_415_p2 = (($signed(F2_fu_409_p2) > $signed(12'd0)) ? 1'b1 : 1'b0);

assign tmp_21_i_fu_633_p2 = (($signed(pos1_fu_615_p2) < $signed(12'd54)) ? 1'b1 : 1'b0);

assign tmp_23_i_fu_653_p1 = $unsigned(pos1_cast_i_fu_620_p1);

assign tmp_24_i_fu_657_p2 = $signed(p_Val2_s_fu_463_p3) >>> tmp_23_i_fu_653_p1;

assign tmp_26_i_fu_687_p2 = (($signed(pos2_fu_624_p2) < $signed(12'd54)) ? 1'b1 : 1'b0);

assign tmp_26_i_not_fu_715_p2 = (tmp_26_i_fu_687_p2 ^ 1'd1);

assign tmp_27_cast_i_fu_521_p1 = tmp_18_i_fu_516_p2;

assign tmp_27_i_fu_693_p1 = $unsigned(pos2_cast_i_fu_629_p1);

assign tmp_28_i_fu_833_p2 = ((Range2_V_1_reg_1261 == 54'd0) ? 1'b1 : 1'b0);

assign tmp_2_i_fu_385_p3 = {{1'd1}, {tmp_V_3_fu_353_p1}};

assign tmp_30_i_fu_703_p2 = ((pos2_fu_624_p2 == 12'd54) ? 1'b1 : 1'b0);

assign tmp_31_i_fu_893_p2 = (1'd1 ^ Range1_all_ones_2_i_fu_888_p2);

assign tmp_40_fu_991_p2 = (underflow_reg_1284 | tmp_s_fu_985_p2);

assign tmp_5_i_fu_421_p2 = (12'd0 - F2_fu_409_p2);

assign tmp_6_i_fu_435_p2 = ((tmp_V_fu_343_p4 == 11'd1075) ? 1'b1 : 1'b0);

assign tmp_89_fu_369_p1 = p_Val2_16_fu_340_p1[62:0];

assign tmp_8_i_fu_381_p1 = tmp_V_fu_343_p4;

assign tmp_91_fu_733_p1 = F2_2_reg_1163_pp0_iter25_reg[7:0];

assign tmp_92_fu_471_p1 = p_Val2_s_fu_463_p3[7:0];

assign tmp_93_fu_447_p4 = {{F2_2_fu_427_p3[11:3]}};

assign tmp_94_fu_485_p1 = tmp_13_i_fu_479_p2[7:0];

assign tmp_95_fu_489_p3 = p_Val2_16_reg_1107[32'd63];

assign tmp_97_fu_558_p3 = p_Val2_18_fu_552_p2[32'd7];

assign tmp_99_fu_639_p3 = pos1_fu_615_p2[32'd11];

assign tmp_9_i_fu_441_p2 = ((F2_2_fu_427_p3 < 12'd54) ? 1'b1 : 1'b0);

assign tmp_V_3_fu_353_p1 = p_Val2_16_fu_340_p1[51:0];

assign tmp_V_fu_343_p4 = {{p_Val2_16_fu_340_p1[62:52]}};

assign tmp_demorgan_i_fu_938_p2 = (tmp_i_i_i_i_reg_1112_pp0_iter26_reg & tmp_i_i_i_i_111_reg_1118_pp0_iter26_reg);

assign tmp_i_fu_403_p2 = ((tmp_89_fu_369_p1 == 63'd0) ? 1'b1 : 1'b0);

assign tmp_i_i_i_i_111_fu_363_p2 = ((tmp_V_3_fu_353_p1 != 52'd0) ? 1'b1 : 1'b0);

assign tmp_i_i_i_i_fu_357_p2 = ((tmp_V_fu_343_p4 == 11'd2047) ? 1'b1 : 1'b0);

assign tmp_s_fu_985_p2 = (tmp_demorgan_i_fu_938_p2 | sel_tmp51_i_fu_980_p2);

assign underflow_fu_919_p3 = ((sel_tmp47_i_fu_915_p2[0:0] === 1'b1) ? tmp_31_i_fu_893_p2 : sel_tmp46_i_fu_910_p2);

assign underflow_not_i_fu_942_p2 = (underflow_reg_1284 ^ 1'd1);

always @ (posedge ap_clk) begin
    p_Result_8_reg_1133[53:52] <= 2'b01;
    tmp_27_i_reg_1256[53:32] <= 22'b0000000000000000000000;
end

endmodule //AddWeighted
