// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module Filter2D (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        p_src_data_stream_V_dout,
        p_src_data_stream_V_empty_n,
        p_src_data_stream_V_read,
        p_dst_data_stream_V_din,
        p_dst_data_stream_V_full_n,
        p_dst_data_stream_V_write,
        p_kernel_val_0_V_1_read,
        p_kernel_val_0_V_2_read,
        p_kernel_val_1_V_0_read,
        p_kernel_val_1_V_2_read,
        p_kernel_val_2_V_0_read,
        p_kernel_val_2_V_1_read
);

parameter    ap_ST_fsm_state1 = 4'd1;
parameter    ap_ST_fsm_state2 = 4'd2;
parameter    ap_ST_fsm_pp0_stage0 = 4'd4;
parameter    ap_ST_fsm_state9 = 4'd8;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [7:0] p_src_data_stream_V_dout;
input   p_src_data_stream_V_empty_n;
output   p_src_data_stream_V_read;
output  [7:0] p_dst_data_stream_V_din;
input   p_dst_data_stream_V_full_n;
output   p_dst_data_stream_V_write;
input  [1:0] p_kernel_val_0_V_1_read;
input  [1:0] p_kernel_val_0_V_2_read;
input  [2:0] p_kernel_val_1_V_0_read;
input  [3:0] p_kernel_val_1_V_2_read;
input  [1:0] p_kernel_val_2_V_0_read;
input  [2:0] p_kernel_val_2_V_1_read;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg p_src_data_stream_V_read;
reg p_dst_data_stream_V_write;

(* fsm_encoding = "none" *) reg   [3:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    p_src_data_stream_V_blk_n;
reg    ap_enable_reg_pp0_iter2;
wire    ap_block_pp0_stage0;
reg   [0:0] exitcond460_i_reg_1421;
reg   [0:0] exitcond460_i_reg_1421_pp0_iter1_reg;
reg   [0:0] or_cond_i_i_reg_1430;
reg   [0:0] or_cond_i_i_reg_1430_pp0_iter1_reg;
reg   [0:0] icmp_reg_1386;
reg   [0:0] tmp_s_reg_1377;
reg    p_dst_data_stream_V_blk_n;
reg    ap_enable_reg_pp0_iter5;
reg   [0:0] or_cond_i_reg_1451;
reg   [0:0] or_cond_i_reg_1451_pp0_iter4_reg;
reg   [10:0] t_V_2_reg_333;
wire  signed [9:0] tmp_369_0_1_cast_fu_344_p1;
reg  signed [9:0] tmp_369_0_1_cast_reg_1338;
wire  signed [9:0] tmp_369_0_2_cast_fu_348_p1;
reg  signed [9:0] tmp_369_0_2_cast_reg_1343;
wire  signed [10:0] tmp_369_1_cast_fu_352_p1;
reg  signed [10:0] tmp_369_1_cast_reg_1348;
wire   [11:0] tmp_369_1_2_cast_fu_356_p1;
reg   [11:0] tmp_369_1_2_cast_reg_1353;
wire  signed [9:0] tmp_369_2_cast_fu_360_p1;
reg  signed [9:0] tmp_369_2_cast_reg_1358;
wire   [10:0] tmp_369_2_1_cast_fu_364_p1;
reg   [10:0] tmp_369_2_1_cast_reg_1363;
wire   [0:0] exitcond461_i_fu_372_p2;
wire    ap_CS_fsm_state2;
wire   [9:0] i_V_fu_378_p2;
reg   [9:0] i_V_reg_1372;
wire   [0:0] tmp_s_fu_384_p2;
wire   [0:0] tmp_284_0_not_fu_390_p2;
reg   [0:0] tmp_284_0_not_reg_1381;
wire   [0:0] icmp_fu_406_p2;
wire   [0:0] tmp_2_fu_412_p2;
reg   [0:0] tmp_2_reg_1391;
wire   [0:0] tmp_328_1_fu_418_p2;
reg   [0:0] tmp_328_1_reg_1395;
wire   [0:0] tmp_3_fu_424_p2;
reg   [0:0] tmp_3_reg_1399;
wire   [1:0] row_assign_10_0_t_fu_578_p2;
reg   [1:0] row_assign_10_0_t_reg_1406;
wire   [1:0] row_assign_10_1_t_fu_616_p2;
reg   [1:0] row_assign_10_1_t_reg_1411;
wire   [1:0] row_assign_10_2_t_fu_654_p2;
reg   [1:0] row_assign_10_2_t_reg_1416;
wire   [0:0] exitcond460_i_fu_664_p2;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state3_pp0_stage0_iter0;
wire    ap_block_state4_pp0_stage0_iter1;
reg    ap_predicate_op159_read_state5;
reg    ap_predicate_op170_read_state5;
reg    ap_block_state5_pp0_stage0_iter2;
wire    ap_block_state6_pp0_stage0_iter3;
wire    ap_block_state7_pp0_stage0_iter4;
reg    ap_block_state8_pp0_stage0_iter5;
reg    ap_block_pp0_stage0_11001;
reg   [0:0] exitcond460_i_reg_1421_pp0_iter2_reg;
wire   [10:0] j_V_fu_670_p2;
reg    ap_enable_reg_pp0_iter0;
wire   [0:0] or_cond_i_i_fu_718_p2;
wire  signed [12:0] x_fu_792_p3;
reg  signed [12:0] x_reg_1434;
wire   [1:0] tmp_69_fu_800_p1;
reg   [1:0] tmp_69_reg_1439;
wire   [0:0] brmerge_fu_804_p2;
reg   [0:0] brmerge_reg_1444;
reg   [0:0] brmerge_reg_1444_pp0_iter1_reg;
wire   [0:0] or_cond_i_fu_809_p2;
reg   [0:0] or_cond_i_reg_1451_pp0_iter1_reg;
reg   [0:0] or_cond_i_reg_1451_pp0_iter2_reg;
reg   [0:0] or_cond_i_reg_1451_pp0_iter3_reg;
reg   [10:0] k_buf_0_val_3_addr_reg_1455;
wire   [1:0] col_assign_3_t_fu_824_p2;
reg   [1:0] col_assign_3_t_reg_1461;
reg   [10:0] k_buf_0_val_4_addr_reg_1468;
reg   [10:0] k_buf_0_val_5_addr_reg_1474;
wire   [7:0] src_kernel_win_0_va_23_fu_948_p3;
reg   [7:0] src_kernel_win_0_va_23_reg_1480;
wire   [7:0] src_kernel_win_0_va_24_fu_966_p3;
reg   [7:0] src_kernel_win_0_va_24_reg_1487;
wire   [7:0] src_kernel_win_0_va_25_fu_984_p3;
reg   [7:0] src_kernel_win_0_va_25_reg_1493;
wire  signed [10:0] grp_fu_1247_p3;
reg  signed [10:0] sum_V_0_1_reg_1498;
wire   [11:0] sum_V_1_1_fu_1063_p2;
reg   [11:0] sum_V_1_1_reg_1503;
wire   [11:0] r_V_50_1_2_fu_1072_p2;
reg   [11:0] r_V_50_1_2_reg_1508;
wire   [7:0] tmp_75_fu_1096_p1;
reg   [7:0] tmp_75_reg_1513;
wire   [10:0] tmp4_fu_1126_p2;
reg   [10:0] tmp4_reg_1518;
wire   [7:0] tmp6_fu_1132_p2;
reg   [7:0] tmp6_reg_1523;
wire   [7:0] tmp8_fu_1138_p2;
reg   [7:0] tmp8_reg_1528;
wire   [7:0] p_Val2_6_fu_1239_p3;
reg   [7:0] p_Val2_6_reg_1533;
reg    ap_block_pp0_stage0_subdone;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter3;
reg    ap_condition_pp0_exit_iter2_state5;
reg    ap_enable_reg_pp0_iter4;
wire   [10:0] k_buf_0_val_3_address0;
reg    k_buf_0_val_3_ce0;
wire   [7:0] k_buf_0_val_3_q0;
wire   [10:0] k_buf_0_val_3_address1;
reg    k_buf_0_val_3_ce1;
reg    k_buf_0_val_3_we1;
wire   [10:0] k_buf_0_val_4_address0;
reg    k_buf_0_val_4_ce0;
wire   [7:0] k_buf_0_val_4_q0;
wire   [10:0] k_buf_0_val_4_address1;
reg    k_buf_0_val_4_ce1;
reg    k_buf_0_val_4_we1;
reg   [7:0] k_buf_0_val_4_d1;
wire   [10:0] k_buf_0_val_5_address0;
reg    k_buf_0_val_5_ce0;
wire   [7:0] k_buf_0_val_5_q0;
wire   [10:0] k_buf_0_val_5_address1;
reg    k_buf_0_val_5_ce1;
reg    k_buf_0_val_5_we1;
reg   [7:0] k_buf_0_val_5_d1;
reg   [9:0] t_V_reg_322;
wire    ap_CS_fsm_state9;
wire   [63:0] tmp_22_fu_817_p1;
reg    ap_block_pp0_stage0_01001;
reg   [7:0] src_kernel_win_0_va_fu_160;
reg   [7:0] src_kernel_win_0_va_18_fu_164;
reg   [7:0] src_kernel_win_0_va_19_fu_168;
reg   [7:0] src_kernel_win_0_va_20_fu_172;
reg   [7:0] src_kernel_win_0_va_21_fu_176;
reg   [7:0] src_kernel_win_0_va_22_fu_180;
reg   [7:0] right_border_buf_0_s_fu_184;
wire   [7:0] col_buf_0_val_0_0_fu_858_p3;
reg   [7:0] right_border_buf_0_14_fu_188;
reg   [7:0] right_border_buf_0_15_fu_192;
reg   [7:0] right_border_buf_0_16_fu_196;
wire   [7:0] col_buf_0_val_1_0_fu_876_p3;
reg   [7:0] right_border_buf_0_17_fu_200;
reg   [7:0] right_border_buf_0_18_fu_204;
wire   [7:0] col_buf_0_val_2_0_fu_894_p3;
wire   [8:0] tmp_51_fu_396_p4;
wire   [10:0] t_V_cast_fu_368_p1;
wire   [1:0] tmp_52_fu_430_p1;
wire   [10:0] tmp_7_fu_434_p2;
wire   [0:0] tmp_53_fu_446_p3;
wire   [0:0] tmp_10_fu_460_p2;
wire   [0:0] rev_fu_454_p2;
wire   [0:0] tmp_54_fu_472_p3;
wire   [10:0] p_assign_7_fu_480_p2;
wire   [10:0] p_p2_i497_i_fu_486_p3;
wire   [1:0] tmp_55_fu_494_p1;
wire   [10:0] p_assign_6_1_fu_510_p2;
wire   [10:0] p_assign_6_2_fu_536_p2;
wire   [0:0] tmp_13_fu_498_p2;
wire   [1:0] p_assign_8_fu_504_p2;
wire   [0:0] or_cond_i496_i_fu_466_p2;
wire   [1:0] tmp_42_cast_fu_440_p2;
wire   [1:0] p_p2_i497_i_p_assign_8_fu_562_p3;
wire   [1:0] y_fu_570_p3;
wire   [1:0] tmp_58_fu_532_p1;
wire   [0:0] tmp_57_fu_524_p3;
wire   [1:0] tmp_62_fu_590_p2;
wire   [1:0] tmp_63_fu_596_p1;
wire   [0:0] tmp_56_fu_516_p3;
wire   [1:0] tmp_36_fu_600_p3;
wire   [1:0] tmp_27_fu_584_p2;
wire   [1:0] tmp_29_fu_608_p3;
wire   [1:0] tmp_61_fu_558_p1;
wire   [0:0] tmp_60_fu_550_p3;
wire   [1:0] tmp_64_fu_628_p2;
wire   [1:0] tmp_65_fu_634_p1;
wire   [0:0] tmp_59_fu_542_p3;
wire   [1:0] tmp_37_fu_638_p3;
wire   [1:0] tmp_31_fu_622_p2;
wire   [1:0] tmp_33_fu_646_p3;
wire   [9:0] tmp_66_fu_676_p4;
wire   [11:0] t_V_2_cast_fu_660_p1;
wire   [11:0] ImagLoc_x_fu_692_p2;
wire   [0:0] tmp_67_fu_698_p3;
wire   [0:0] tmp_18_fu_712_p2;
wire   [0:0] rev3_fu_706_p2;
wire   [0:0] tmp_68_fu_724_p3;
wire   [11:0] p_assign_1_fu_732_p2;
wire  signed [11:0] p_p2_i_i_fu_738_p3;
wire   [11:0] p_assign_2_fu_756_p2;
wire   [11:0] p_assign_3_fu_762_p3;
wire   [0:0] tmp_18_not_fu_774_p2;
wire   [0:0] tmp_20_fu_750_p2;
wire   [0:0] sel_tmp7_fu_780_p2;
wire   [0:0] sel_tmp8_fu_786_p2;
wire  signed [12:0] p_p2_i_i_cast_fu_746_p1;
wire   [12:0] sel_tmp_cast_fu_770_p1;
wire   [0:0] icmp2_fu_686_p2;
wire  signed [31:0] col_assign_cast_fu_814_p1;
wire   [7:0] tmp_23_fu_847_p5;
wire   [7:0] tmp_24_fu_865_p5;
wire   [7:0] tmp_25_fu_883_p5;
wire   [7:0] tmp_26_fu_937_p5;
wire   [7:0] tmp_30_fu_955_p5;
wire   [7:0] tmp_34_fu_973_p5;
wire   [8:0] r_V_0_cast_fu_997_p1;
wire  signed [8:0] r_V_s_fu_1001_p2;
wire  signed [10:0] grp_fu_1254_p3;
wire  signed [2:0] r_V_50_1_fu_1047_p0;
wire   [7:0] r_V_50_1_fu_1047_p1;
wire  signed [10:0] r_V_50_1_fu_1047_p2;
wire  signed [11:0] tmp_370_1_cast_cast_fu_1052_p1;
wire  signed [11:0] sum_V_0_2_cast_fu_1040_p1;
wire   [3:0] r_V_50_1_2_fu_1072_p0;
wire   [7:0] r_V_50_1_2_fu_1072_p1;
wire   [7:0] tmp_73_fu_1060_p1;
wire   [7:0] tmp_72_fu_1056_p1;
wire  signed [1:0] r_V_50_2_fu_1091_p0;
wire   [7:0] r_V_50_2_fu_1091_p1;
wire   [9:0] r_V_50_2_fu_1091_p2;
wire   [2:0] r_V_50_2_1_fu_1104_p0;
wire   [7:0] r_V_50_2_1_fu_1104_p1;
wire   [10:0] r_V_50_2_1_fu_1104_p2;
wire   [9:0] tmp_370_2_2_cast_cas_fu_1113_p1;
wire   [9:0] tmp5_fu_1116_p2;
wire  signed [10:0] tmp5_cast_fu_1122_p1;
wire   [7:0] tmp_38_fu_1081_p2;
wire   [7:0] tmp_74_fu_1077_p1;
wire   [7:0] tmp_76_fu_1109_p1;
wire   [11:0] tmp3_fu_1167_p2;
wire  signed [11:0] tmp4_cast_fu_1171_p1;
wire   [11:0] p_Val2_s_fu_1174_p2;
wire   [7:0] tmp7_fu_1188_p2;
wire   [0:0] p_Result_s_fu_1180_p3;
wire   [3:0] tmp_39_fu_1197_p4;
wire   [0:0] not_i_i_fu_1213_p2;
wire   [0:0] tmp_i_i_fu_1207_p2;
wire   [0:0] overflow_fu_1219_p2;
wire   [0:0] tmp_1_i_i_fu_1233_p2;
wire   [7:0] p_mux_i_i_cast_fu_1225_p3;
wire   [7:0] p_Val2_1_fu_1192_p2;
wire  signed [1:0] grp_fu_1247_p0;
wire   [7:0] grp_fu_1247_p1;
wire  signed [1:0] grp_fu_1254_p0;
wire   [7:0] grp_fu_1254_p1;
reg   [3:0] ap_NS_fsm;
reg    ap_block_pp0;
reg    ap_enable_operation_133;
reg    ap_enable_state4_pp0_iter1_stage0;
reg    ap_enable_operation_150;
reg    ap_enable_state5_pp0_iter2_stage0;
reg    ap_predicate_op164_store_state5;
reg    ap_enable_operation_164;
reg    ap_predicate_op171_store_state5;
reg    ap_enable_operation_171;
reg    ap_enable_operation_136;
reg    ap_enable_operation_153;
reg    ap_predicate_op162_store_state5;
reg    ap_enable_operation_162;
reg    ap_predicate_op169_store_state5;
reg    ap_enable_operation_169;
reg    ap_predicate_op138_load_state4;
reg    ap_enable_operation_138;
reg    ap_predicate_op156_load_state5;
reg    ap_enable_operation_156;
reg    ap_predicate_op160_store_state5;
reg    ap_enable_operation_160;
reg    ap_predicate_op168_store_state5;
reg    ap_enable_operation_168;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire   [9:0] grp_fu_1247_p10;
wire   [9:0] grp_fu_1254_p10;
wire   [11:0] r_V_50_1_2_fu_1072_p10;
wire   [10:0] r_V_50_1_fu_1047_p10;
wire   [10:0] r_V_50_2_1_fu_1104_p10;
wire   [9:0] r_V_50_2_fu_1091_p10;
reg    ap_condition_1003;

// power-on initialization
initial begin
#0 ap_CS_fsm = 4'd1;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
end

Filter2D_1_k_buf_eOg #(
    .DataWidth( 8 ),
    .AddressRange( 1280 ),
    .AddressWidth( 11 ))
k_buf_0_val_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(k_buf_0_val_3_address0),
    .ce0(k_buf_0_val_3_ce0),
    .q0(k_buf_0_val_3_q0),
    .address1(k_buf_0_val_3_address1),
    .ce1(k_buf_0_val_3_ce1),
    .we1(k_buf_0_val_3_we1),
    .d1(p_src_data_stream_V_dout)
);

Filter2D_1_k_buf_eOg #(
    .DataWidth( 8 ),
    .AddressRange( 1280 ),
    .AddressWidth( 11 ))
k_buf_0_val_4_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(k_buf_0_val_4_address0),
    .ce0(k_buf_0_val_4_ce0),
    .q0(k_buf_0_val_4_q0),
    .address1(k_buf_0_val_4_address1),
    .ce1(k_buf_0_val_4_ce1),
    .we1(k_buf_0_val_4_we1),
    .d1(k_buf_0_val_4_d1)
);

Filter2D_1_k_buf_eOg #(
    .DataWidth( 8 ),
    .AddressRange( 1280 ),
    .AddressWidth( 11 ))
k_buf_0_val_5_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(k_buf_0_val_5_address0),
    .ce0(k_buf_0_val_5_ce0),
    .q0(k_buf_0_val_5_q0),
    .address1(k_buf_0_val_5_address1),
    .ce1(k_buf_0_val_5_ce1),
    .we1(k_buf_0_val_5_we1),
    .d1(k_buf_0_val_5_d1)
);

sobel_hls_mux_32_hbi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
sobel_hls_mux_32_hbi_U54(
    .din0(right_border_buf_0_s_fu_184),
    .din1(right_border_buf_0_14_fu_188),
    .din2(8'd0),
    .din3(col_assign_3_t_reg_1461),
    .dout(tmp_23_fu_847_p5)
);

sobel_hls_mux_32_hbi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
sobel_hls_mux_32_hbi_U55(
    .din0(right_border_buf_0_16_fu_196),
    .din1(right_border_buf_0_17_fu_200),
    .din2(8'd0),
    .din3(col_assign_3_t_reg_1461),
    .dout(tmp_24_fu_865_p5)
);

sobel_hls_mux_32_hbi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
sobel_hls_mux_32_hbi_U56(
    .din0(right_border_buf_0_18_fu_204),
    .din1(right_border_buf_0_15_fu_192),
    .din2(8'd0),
    .din3(col_assign_3_t_reg_1461),
    .dout(tmp_25_fu_883_p5)
);

sobel_hls_mux_32_hbi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
sobel_hls_mux_32_hbi_U57(
    .din0(col_buf_0_val_0_0_fu_858_p3),
    .din1(col_buf_0_val_1_0_fu_876_p3),
    .din2(col_buf_0_val_2_0_fu_894_p3),
    .din3(row_assign_10_0_t_reg_1406),
    .dout(tmp_26_fu_937_p5)
);

sobel_hls_mux_32_hbi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
sobel_hls_mux_32_hbi_U58(
    .din0(col_buf_0_val_0_0_fu_858_p3),
    .din1(col_buf_0_val_1_0_fu_876_p3),
    .din2(col_buf_0_val_2_0_fu_894_p3),
    .din3(row_assign_10_1_t_reg_1411),
    .dout(tmp_30_fu_955_p5)
);

sobel_hls_mux_32_hbi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
sobel_hls_mux_32_hbi_U59(
    .din0(col_buf_0_val_0_0_fu_858_p3),
    .din1(col_buf_0_val_1_0_fu_876_p3),
    .din2(col_buf_0_val_2_0_fu_894_p3),
    .din3(row_assign_10_2_t_reg_1416),
    .dout(tmp_34_fu_973_p5)
);

sobel_hls_mac_mulpcA #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 2 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 9 ),
    .dout_WIDTH( 11 ))
sobel_hls_mac_mulpcA_U60(
    .din0(grp_fu_1247_p0),
    .din1(grp_fu_1247_p1),
    .din2(r_V_s_fu_1001_p2),
    .dout(grp_fu_1247_p3)
);

sobel_hls_mac_mulqcK #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 2 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 11 ),
    .dout_WIDTH( 11 ))
sobel_hls_mac_mulqcK_U61(
    .din0(grp_fu_1254_p0),
    .din1(grp_fu_1254_p1),
    .din2(sum_V_0_1_reg_1498),
    .dout(grp_fu_1254_p3)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((exitcond460_i_fu_664_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((exitcond461_i_fu_372_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter2_state5)) begin
                ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter1;
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end else if (((exitcond461_i_fu_372_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_enable_reg_pp0_iter5 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond460_i_fu_664_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        t_V_2_reg_333 <= j_V_fu_670_p2;
    end else if (((exitcond461_i_fu_372_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        t_V_2_reg_333 <= 11'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        t_V_reg_322 <= i_V_reg_1372;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        t_V_reg_322 <= 10'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond460_i_fu_664_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        brmerge_reg_1444 <= brmerge_fu_804_p2;
        or_cond_i_i_reg_1430 <= or_cond_i_i_fu_718_p2;
        or_cond_i_reg_1451 <= or_cond_i_fu_809_p2;
        tmp_69_reg_1439 <= tmp_69_fu_800_p1;
        x_reg_1434 <= x_fu_792_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        brmerge_reg_1444_pp0_iter1_reg <= brmerge_reg_1444;
        exitcond460_i_reg_1421 <= exitcond460_i_fu_664_p2;
        exitcond460_i_reg_1421_pp0_iter1_reg <= exitcond460_i_reg_1421;
        or_cond_i_i_reg_1430_pp0_iter1_reg <= or_cond_i_i_reg_1430;
        or_cond_i_reg_1451_pp0_iter1_reg <= or_cond_i_reg_1451;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond460_i_reg_1421 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        col_assign_3_t_reg_1461 <= col_assign_3_t_fu_824_p2;
        k_buf_0_val_3_addr_reg_1455 <= tmp_22_fu_817_p1;
        k_buf_0_val_4_addr_reg_1468 <= tmp_22_fu_817_p1;
        k_buf_0_val_5_addr_reg_1474 <= tmp_22_fu_817_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        exitcond460_i_reg_1421_pp0_iter2_reg <= exitcond460_i_reg_1421_pp0_iter1_reg;
        or_cond_i_reg_1451_pp0_iter2_reg <= or_cond_i_reg_1451_pp0_iter1_reg;
        or_cond_i_reg_1451_pp0_iter3_reg <= or_cond_i_reg_1451_pp0_iter2_reg;
        or_cond_i_reg_1451_pp0_iter4_reg <= or_cond_i_reg_1451_pp0_iter3_reg;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        i_V_reg_1372 <= i_V_fu_378_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond461_i_fu_372_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        icmp_reg_1386 <= icmp_fu_406_p2;
        row_assign_10_0_t_reg_1406 <= row_assign_10_0_t_fu_578_p2;
        row_assign_10_1_t_reg_1411 <= row_assign_10_1_t_fu_616_p2;
        row_assign_10_2_t_reg_1416 <= row_assign_10_2_t_fu_654_p2;
        tmp_284_0_not_reg_1381 <= tmp_284_0_not_fu_390_p2;
        tmp_2_reg_1391 <= tmp_2_fu_412_p2;
        tmp_328_1_reg_1395 <= tmp_328_1_fu_418_p2;
        tmp_3_reg_1399 <= tmp_3_fu_424_p2;
        tmp_s_reg_1377 <= tmp_s_fu_384_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((or_cond_i_reg_1451_pp0_iter3_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_Val2_6_reg_1533 <= p_Val2_6_fu_1239_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((or_cond_i_reg_1451_pp0_iter2_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        r_V_50_1_2_reg_1508 <= r_V_50_1_2_fu_1072_p2;
        sum_V_1_1_reg_1503 <= sum_V_1_1_fu_1063_p2;
        tmp4_reg_1518 <= tmp4_fu_1126_p2;
        tmp6_reg_1523 <= tmp6_fu_1132_p2;
        tmp8_reg_1528 <= tmp8_fu_1138_p2;
        tmp_75_reg_1513 <= tmp_75_fu_1096_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_s_reg_1377 == 1'd1) & (icmp_reg_1386 == 1'd1) & (or_cond_i_i_reg_1430_pp0_iter1_reg == 1'd1) & (exitcond460_i_reg_1421_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        right_border_buf_0_14_fu_188 <= right_border_buf_0_s_fu_184;
        right_border_buf_0_15_fu_192 <= right_border_buf_0_18_fu_204;
        right_border_buf_0_16_fu_196 <= col_buf_0_val_1_0_fu_876_p3;
        right_border_buf_0_17_fu_200 <= right_border_buf_0_16_fu_196;
        right_border_buf_0_18_fu_204 <= col_buf_0_val_2_0_fu_894_p3;
        right_border_buf_0_s_fu_184 <= col_buf_0_val_0_0_fu_858_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond460_i_reg_1421_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        src_kernel_win_0_va_18_fu_164 <= src_kernel_win_0_va_fu_160;
        src_kernel_win_0_va_19_fu_168 <= src_kernel_win_0_va_24_reg_1487;
        src_kernel_win_0_va_20_fu_172 <= src_kernel_win_0_va_19_fu_168;
        src_kernel_win_0_va_fu_160 <= src_kernel_win_0_va_23_reg_1480;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond460_i_reg_1421_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        src_kernel_win_0_va_21_fu_176 <= src_kernel_win_0_va_25_fu_984_p3;
        src_kernel_win_0_va_22_fu_180 <= src_kernel_win_0_va_21_fu_176;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond460_i_reg_1421_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        src_kernel_win_0_va_23_reg_1480 <= src_kernel_win_0_va_23_fu_948_p3;
        src_kernel_win_0_va_24_reg_1487 <= src_kernel_win_0_va_24_fu_966_p3;
        src_kernel_win_0_va_25_reg_1493 <= src_kernel_win_0_va_25_fu_984_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((or_cond_i_reg_1451_pp0_iter1_reg == 1'd1) & (exitcond460_i_reg_1421_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        sum_V_0_1_reg_1498 <= grp_fu_1247_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        tmp_369_0_1_cast_reg_1338 <= tmp_369_0_1_cast_fu_344_p1;
        tmp_369_0_2_cast_reg_1343 <= tmp_369_0_2_cast_fu_348_p1;
        tmp_369_1_2_cast_reg_1353[3 : 0] <= tmp_369_1_2_cast_fu_356_p1[3 : 0];
        tmp_369_1_cast_reg_1348 <= tmp_369_1_cast_fu_352_p1;
        tmp_369_2_1_cast_reg_1363[2 : 0] <= tmp_369_2_1_cast_fu_364_p1[2 : 0];
        tmp_369_2_cast_reg_1358 <= tmp_369_2_cast_fu_360_p1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_condition_pp0_exit_iter2_state5 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter2_state5 = 1'b0;
    end
end

always @ (*) begin
    if ((((exitcond461_i_fu_372_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2)) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond461_i_fu_372_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        k_buf_0_val_3_ce0 = 1'b1;
    end else begin
        k_buf_0_val_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((tmp_s_reg_1377 == 1'd1) & (icmp_reg_1386 == 1'd1) & (or_cond_i_i_reg_1430_pp0_iter1_reg == 1'd1) & (exitcond460_i_reg_1421_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((tmp_2_reg_1391 == 1'd1) & (or_cond_i_i_reg_1430_pp0_iter1_reg == 1'd1) & (icmp_reg_1386 == 1'd0) & (exitcond460_i_reg_1421_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        k_buf_0_val_3_ce1 = 1'b1;
    end else begin
        k_buf_0_val_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((((tmp_s_reg_1377 == 1'd1) & (icmp_reg_1386 == 1'd1) & (or_cond_i_i_reg_1430_pp0_iter1_reg == 1'd1) & (exitcond460_i_reg_1421_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((tmp_2_reg_1391 == 1'd1) & (or_cond_i_i_reg_1430_pp0_iter1_reg == 1'd1) & (icmp_reg_1386 == 1'd0) & (exitcond460_i_reg_1421_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        k_buf_0_val_3_we1 = 1'b1;
    end else begin
        k_buf_0_val_3_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        k_buf_0_val_4_ce0 = 1'b1;
    end else begin
        k_buf_0_val_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((tmp_s_reg_1377 == 1'd1) & (icmp_reg_1386 == 1'd1) & (or_cond_i_i_reg_1430_pp0_iter1_reg == 1'd1) & (exitcond460_i_reg_1421_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((tmp_328_1_reg_1395 == 1'd1) & (or_cond_i_i_reg_1430_pp0_iter1_reg == 1'd1) & (icmp_reg_1386 == 1'd0) & (exitcond460_i_reg_1421_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        k_buf_0_val_4_ce1 = 1'b1;
    end else begin
        k_buf_0_val_4_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_1003)) begin
        if (((tmp_s_reg_1377 == 1'd1) & (icmp_reg_1386 == 1'd1))) begin
            k_buf_0_val_4_d1 = k_buf_0_val_3_q0;
        end else if (((tmp_328_1_reg_1395 == 1'd1) & (icmp_reg_1386 == 1'd0))) begin
            k_buf_0_val_4_d1 = p_src_data_stream_V_dout;
        end else begin
            k_buf_0_val_4_d1 = 'bx;
        end
    end else begin
        k_buf_0_val_4_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((tmp_s_reg_1377 == 1'd1) & (icmp_reg_1386 == 1'd1) & (or_cond_i_i_reg_1430_pp0_iter1_reg == 1'd1) & (exitcond460_i_reg_1421_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((tmp_328_1_reg_1395 == 1'd1) & (or_cond_i_i_reg_1430_pp0_iter1_reg == 1'd1) & (icmp_reg_1386 == 1'd0) & (exitcond460_i_reg_1421_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        k_buf_0_val_4_we1 = 1'b1;
    end else begin
        k_buf_0_val_4_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        k_buf_0_val_5_ce0 = 1'b1;
    end else begin
        k_buf_0_val_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((tmp_s_reg_1377 == 1'd1) & (icmp_reg_1386 == 1'd1) & (or_cond_i_i_reg_1430_pp0_iter1_reg == 1'd1) & (exitcond460_i_reg_1421_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((tmp_2_reg_1391 == 1'd1) & (or_cond_i_i_reg_1430_pp0_iter1_reg == 1'd1) & (icmp_reg_1386 == 1'd0) & (exitcond460_i_reg_1421_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        k_buf_0_val_5_ce1 = 1'b1;
    end else begin
        k_buf_0_val_5_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_1003)) begin
        if (((tmp_s_reg_1377 == 1'd1) & (icmp_reg_1386 == 1'd1))) begin
            k_buf_0_val_5_d1 = k_buf_0_val_4_q0;
        end else if (((tmp_2_reg_1391 == 1'd1) & (icmp_reg_1386 == 1'd0))) begin
            k_buf_0_val_5_d1 = p_src_data_stream_V_dout;
        end else begin
            k_buf_0_val_5_d1 = 'bx;
        end
    end else begin
        k_buf_0_val_5_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((tmp_s_reg_1377 == 1'd1) & (icmp_reg_1386 == 1'd1) & (or_cond_i_i_reg_1430_pp0_iter1_reg == 1'd1) & (exitcond460_i_reg_1421_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((tmp_2_reg_1391 == 1'd1) & (or_cond_i_i_reg_1430_pp0_iter1_reg == 1'd1) & (icmp_reg_1386 == 1'd0) & (exitcond460_i_reg_1421_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        k_buf_0_val_5_we1 = 1'b1;
    end else begin
        k_buf_0_val_5_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((or_cond_i_reg_1451_pp0_iter4_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter5 == 1'b1))) begin
        p_dst_data_stream_V_blk_n = p_dst_data_stream_V_full_n;
    end else begin
        p_dst_data_stream_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((or_cond_i_reg_1451_pp0_iter4_reg == 1'd1) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_dst_data_stream_V_write = 1'b1;
    end else begin
        p_dst_data_stream_V_write = 1'b0;
    end
end

always @ (*) begin
    if ((((tmp_s_reg_1377 == 1'd1) & (icmp_reg_1386 == 1'd1) & (or_cond_i_i_reg_1430_pp0_iter1_reg == 1'd1) & (exitcond460_i_reg_1421_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((or_cond_i_i_reg_1430_pp0_iter1_reg == 1'd1) & (icmp_reg_1386 == 1'd0) & (exitcond460_i_reg_1421_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1)))) begin
        p_src_data_stream_V_blk_n = p_src_data_stream_V_empty_n;
    end else begin
        p_src_data_stream_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op170_read_state5 == 1'b1)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op159_read_state5 == 1'b1)))) begin
        p_src_data_stream_V_read = 1'b1;
    end else begin
        p_src_data_stream_V_read = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((exitcond461_i_fu_372_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter2 == 1'b1)) & ~((ap_enable_reg_pp0_iter4 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter5 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((ap_enable_reg_pp0_iter4 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter5 == 1'b1)) | ((ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter2 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ImagLoc_x_fu_692_p2 = ($signed(12'd4095) + $signed(t_V_2_cast_fu_660_p1));

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd3];

always @ (*) begin
    ap_block_pp0 = ((ap_ST_fsm_pp0_stage0 == ap_CS_fsm) & (1'b1 == ap_block_pp0_stage0_subdone));
end

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((or_cond_i_reg_1451_pp0_iter4_reg == 1'd1) & (p_dst_data_stream_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b1)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op170_read_state5 == 1'b1)) | ((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op159_read_state5 == 1'b1)))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((or_cond_i_reg_1451_pp0_iter4_reg == 1'd1) & (p_dst_data_stream_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b1)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op170_read_state5 == 1'b1)) | ((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op159_read_state5 == 1'b1)))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((or_cond_i_reg_1451_pp0_iter4_reg == 1'd1) & (p_dst_data_stream_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b1)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op170_read_state5 == 1'b1)) | ((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op159_read_state5 == 1'b1)))));
end

assign ap_block_state3_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state5_pp0_stage0_iter2 = (((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op170_read_state5 == 1'b1)) | ((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op159_read_state5 == 1'b1)));
end

assign ap_block_state6_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state8_pp0_stage0_iter5 = ((or_cond_i_reg_1451_pp0_iter4_reg == 1'd1) & (p_dst_data_stream_V_full_n == 1'b0));
end

always @ (*) begin
    ap_condition_1003 = ((or_cond_i_i_reg_1430_pp0_iter1_reg == 1'd1) & (exitcond460_i_reg_1421_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1));
end

always @ (*) begin
    ap_enable_operation_133 = (exitcond460_i_reg_1421 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_136 = (exitcond460_i_reg_1421 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_138 = (ap_predicate_op138_load_state4 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_150 = (exitcond460_i_reg_1421_pp0_iter1_reg == 1'd0);
end

always @ (*) begin
    ap_enable_operation_153 = (exitcond460_i_reg_1421_pp0_iter1_reg == 1'd0);
end

always @ (*) begin
    ap_enable_operation_156 = (ap_predicate_op156_load_state5 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_160 = (ap_predicate_op160_store_state5 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_162 = (ap_predicate_op162_store_state5 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_164 = (ap_predicate_op164_store_state5 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_168 = (ap_predicate_op168_store_state5 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_169 = (ap_predicate_op169_store_state5 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_171 = (ap_predicate_op171_store_state5 == 1'b1);
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

always @ (*) begin
    ap_enable_state4_pp0_iter1_stage0 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_enable_state5_pp0_iter2_stage0 = ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_predicate_op138_load_state4 = ((brmerge_reg_1444 == 1'd1) & (exitcond460_i_reg_1421 == 1'd0));
end

always @ (*) begin
    ap_predicate_op156_load_state5 = ((brmerge_reg_1444_pp0_iter1_reg == 1'd1) & (exitcond460_i_reg_1421_pp0_iter1_reg == 1'd0));
end

always @ (*) begin
    ap_predicate_op159_read_state5 = ((or_cond_i_i_reg_1430_pp0_iter1_reg == 1'd1) & (icmp_reg_1386 == 1'd0) & (exitcond460_i_reg_1421_pp0_iter1_reg == 1'd0));
end

always @ (*) begin
    ap_predicate_op160_store_state5 = ((tmp_2_reg_1391 == 1'd1) & (or_cond_i_i_reg_1430_pp0_iter1_reg == 1'd1) & (icmp_reg_1386 == 1'd0) & (exitcond460_i_reg_1421_pp0_iter1_reg == 1'd0));
end

always @ (*) begin
    ap_predicate_op162_store_state5 = ((tmp_328_1_reg_1395 == 1'd1) & (or_cond_i_i_reg_1430_pp0_iter1_reg == 1'd1) & (icmp_reg_1386 == 1'd0) & (exitcond460_i_reg_1421_pp0_iter1_reg == 1'd0));
end

always @ (*) begin
    ap_predicate_op164_store_state5 = ((tmp_2_reg_1391 == 1'd1) & (or_cond_i_i_reg_1430_pp0_iter1_reg == 1'd1) & (icmp_reg_1386 == 1'd0) & (exitcond460_i_reg_1421_pp0_iter1_reg == 1'd0));
end

always @ (*) begin
    ap_predicate_op168_store_state5 = ((tmp_s_reg_1377 == 1'd1) & (icmp_reg_1386 == 1'd1) & (or_cond_i_i_reg_1430_pp0_iter1_reg == 1'd1) & (exitcond460_i_reg_1421_pp0_iter1_reg == 1'd0));
end

always @ (*) begin
    ap_predicate_op169_store_state5 = ((tmp_s_reg_1377 == 1'd1) & (icmp_reg_1386 == 1'd1) & (or_cond_i_i_reg_1430_pp0_iter1_reg == 1'd1) & (exitcond460_i_reg_1421_pp0_iter1_reg == 1'd0));
end

always @ (*) begin
    ap_predicate_op170_read_state5 = ((tmp_s_reg_1377 == 1'd1) & (icmp_reg_1386 == 1'd1) & (or_cond_i_i_reg_1430_pp0_iter1_reg == 1'd1) & (exitcond460_i_reg_1421_pp0_iter1_reg == 1'd0));
end

always @ (*) begin
    ap_predicate_op171_store_state5 = ((tmp_s_reg_1377 == 1'd1) & (icmp_reg_1386 == 1'd1) & (or_cond_i_i_reg_1430_pp0_iter1_reg == 1'd1) & (exitcond460_i_reg_1421_pp0_iter1_reg == 1'd0));
end

assign brmerge_fu_804_p2 = (tmp_284_0_not_reg_1381 | tmp_18_fu_712_p2);

assign col_assign_3_t_fu_824_p2 = (tmp_69_reg_1439 ^ 2'd3);

assign col_assign_cast_fu_814_p1 = x_reg_1434;

assign col_buf_0_val_0_0_fu_858_p3 = ((brmerge_reg_1444_pp0_iter1_reg[0:0] === 1'b1) ? k_buf_0_val_3_q0 : tmp_23_fu_847_p5);

assign col_buf_0_val_1_0_fu_876_p3 = ((brmerge_reg_1444_pp0_iter1_reg[0:0] === 1'b1) ? k_buf_0_val_4_q0 : tmp_24_fu_865_p5);

assign col_buf_0_val_2_0_fu_894_p3 = ((brmerge_reg_1444_pp0_iter1_reg[0:0] === 1'b1) ? k_buf_0_val_5_q0 : tmp_25_fu_883_p5);

assign exitcond460_i_fu_664_p2 = ((t_V_2_reg_333 == 11'd1282) ? 1'b1 : 1'b0);

assign exitcond461_i_fu_372_p2 = ((t_V_reg_322 == 10'd722) ? 1'b1 : 1'b0);

assign grp_fu_1247_p0 = tmp_369_0_1_cast_reg_1338;

assign grp_fu_1247_p1 = grp_fu_1247_p10;

assign grp_fu_1247_p10 = src_kernel_win_0_va_21_fu_176;

assign grp_fu_1254_p0 = tmp_369_0_2_cast_reg_1343;

assign grp_fu_1254_p1 = grp_fu_1254_p10;

assign grp_fu_1254_p10 = src_kernel_win_0_va_25_reg_1493;

assign i_V_fu_378_p2 = (t_V_reg_322 + 10'd1);

assign icmp2_fu_686_p2 = ((tmp_66_fu_676_p4 != 10'd0) ? 1'b1 : 1'b0);

assign icmp_fu_406_p2 = ((tmp_51_fu_396_p4 != 9'd0) ? 1'b1 : 1'b0);

assign j_V_fu_670_p2 = (t_V_2_reg_333 + 11'd1);

assign k_buf_0_val_3_address0 = tmp_22_fu_817_p1;

assign k_buf_0_val_3_address1 = k_buf_0_val_3_addr_reg_1455;

assign k_buf_0_val_4_address0 = tmp_22_fu_817_p1;

assign k_buf_0_val_4_address1 = k_buf_0_val_4_addr_reg_1468;

assign k_buf_0_val_5_address0 = tmp_22_fu_817_p1;

assign k_buf_0_val_5_address1 = k_buf_0_val_5_addr_reg_1474;

assign not_i_i_fu_1213_p2 = ((tmp_39_fu_1197_p4 != 4'd0) ? 1'b1 : 1'b0);

assign or_cond_i496_i_fu_466_p2 = (tmp_10_fu_460_p2 & rev_fu_454_p2);

assign or_cond_i_fu_809_p2 = (icmp_reg_1386 & icmp2_fu_686_p2);

assign or_cond_i_i_fu_718_p2 = (tmp_18_fu_712_p2 & rev3_fu_706_p2);

assign overflow_fu_1219_p2 = (tmp_i_i_fu_1207_p2 & not_i_i_fu_1213_p2);

assign p_Result_s_fu_1180_p3 = p_Val2_s_fu_1174_p2[32'd11];

assign p_Val2_1_fu_1192_p2 = (tmp6_reg_1523 + tmp7_fu_1188_p2);

assign p_Val2_6_fu_1239_p3 = ((tmp_1_i_i_fu_1233_p2[0:0] === 1'b1) ? p_mux_i_i_cast_fu_1225_p3 : p_Val2_1_fu_1192_p2);

assign p_Val2_s_fu_1174_p2 = ($signed(tmp3_fu_1167_p2) + $signed(tmp4_cast_fu_1171_p1));

assign p_assign_1_fu_732_p2 = (12'd1 - t_V_2_cast_fu_660_p1);

assign p_assign_2_fu_756_p2 = ($signed(12'd2558) - $signed(p_p2_i_i_fu_738_p3));

assign p_assign_3_fu_762_p3 = ((or_cond_i_i_fu_718_p2[0:0] === 1'b1) ? ImagLoc_x_fu_692_p2 : p_assign_2_fu_756_p2);

assign p_assign_6_1_fu_510_p2 = ($signed(11'd2046) + $signed(t_V_cast_fu_368_p1));

assign p_assign_6_2_fu_536_p2 = ($signed(11'd2045) + $signed(t_V_cast_fu_368_p1));

assign p_assign_7_fu_480_p2 = (11'd1 - t_V_cast_fu_368_p1);

assign p_assign_8_fu_504_p2 = ($signed(2'd2) - $signed(tmp_55_fu_494_p1));

assign p_dst_data_stream_V_din = p_Val2_6_reg_1533;

assign p_mux_i_i_cast_fu_1225_p3 = ((tmp_i_i_fu_1207_p2[0:0] === 1'b1) ? 8'd255 : 8'd0);

assign p_p2_i497_i_fu_486_p3 = ((tmp_54_fu_472_p3[0:0] === 1'b1) ? p_assign_7_fu_480_p2 : tmp_7_fu_434_p2);

assign p_p2_i497_i_p_assign_8_fu_562_p3 = ((tmp_13_fu_498_p2[0:0] === 1'b1) ? tmp_55_fu_494_p1 : p_assign_8_fu_504_p2);

assign p_p2_i_i_cast_fu_746_p1 = p_p2_i_i_fu_738_p3;

assign p_p2_i_i_fu_738_p3 = ((tmp_68_fu_724_p3[0:0] === 1'b1) ? p_assign_1_fu_732_p2 : ImagLoc_x_fu_692_p2);

assign r_V_0_cast_fu_997_p1 = src_kernel_win_0_va_22_fu_180;

assign r_V_50_1_2_fu_1072_p0 = tmp_369_1_2_cast_reg_1353;

assign r_V_50_1_2_fu_1072_p1 = r_V_50_1_2_fu_1072_p10;

assign r_V_50_1_2_fu_1072_p10 = src_kernel_win_0_va_24_reg_1487;

assign r_V_50_1_2_fu_1072_p2 = (r_V_50_1_2_fu_1072_p0 * r_V_50_1_2_fu_1072_p1);

assign r_V_50_1_fu_1047_p0 = tmp_369_1_cast_reg_1348;

assign r_V_50_1_fu_1047_p1 = r_V_50_1_fu_1047_p10;

assign r_V_50_1_fu_1047_p10 = src_kernel_win_0_va_20_fu_172;

assign r_V_50_1_fu_1047_p2 = ($signed(r_V_50_1_fu_1047_p0) * $signed({{1'b0}, {r_V_50_1_fu_1047_p1}}));

assign r_V_50_2_1_fu_1104_p0 = tmp_369_2_1_cast_reg_1363;

assign r_V_50_2_1_fu_1104_p1 = r_V_50_2_1_fu_1104_p10;

assign r_V_50_2_1_fu_1104_p10 = src_kernel_win_0_va_fu_160;

assign r_V_50_2_1_fu_1104_p2 = (r_V_50_2_1_fu_1104_p0 * r_V_50_2_1_fu_1104_p1);

assign r_V_50_2_fu_1091_p0 = tmp_369_2_cast_reg_1358;

assign r_V_50_2_fu_1091_p1 = r_V_50_2_fu_1091_p10;

assign r_V_50_2_fu_1091_p10 = src_kernel_win_0_va_18_fu_164;

assign r_V_50_2_fu_1091_p2 = ($signed(r_V_50_2_fu_1091_p0) * $signed({{1'b0}, {r_V_50_2_fu_1091_p1}}));

assign r_V_s_fu_1001_p2 = (9'd0 - r_V_0_cast_fu_997_p1);

assign rev3_fu_706_p2 = (tmp_67_fu_698_p3 ^ 1'd1);

assign rev_fu_454_p2 = (tmp_53_fu_446_p3 ^ 1'd1);

assign row_assign_10_0_t_fu_578_p2 = (y_fu_570_p3 ^ 2'd3);

assign row_assign_10_1_t_fu_616_p2 = (tmp_29_fu_608_p3 ^ 2'd3);

assign row_assign_10_2_t_fu_654_p2 = (tmp_33_fu_646_p3 ^ 2'd3);

assign sel_tmp7_fu_780_p2 = (tmp_67_fu_698_p3 | tmp_18_not_fu_774_p2);

assign sel_tmp8_fu_786_p2 = (tmp_20_fu_750_p2 & sel_tmp7_fu_780_p2);

assign sel_tmp_cast_fu_770_p1 = p_assign_3_fu_762_p3;

assign src_kernel_win_0_va_23_fu_948_p3 = ((tmp_3_reg_1399[0:0] === 1'b1) ? tmp_26_fu_937_p5 : col_buf_0_val_0_0_fu_858_p3);

assign src_kernel_win_0_va_24_fu_966_p3 = ((tmp_3_reg_1399[0:0] === 1'b1) ? tmp_30_fu_955_p5 : col_buf_0_val_1_0_fu_876_p3);

assign src_kernel_win_0_va_25_fu_984_p3 = ((tmp_3_reg_1399[0:0] === 1'b1) ? tmp_34_fu_973_p5 : col_buf_0_val_2_0_fu_894_p3);

assign sum_V_0_2_cast_fu_1040_p1 = grp_fu_1254_p3;

assign sum_V_1_1_fu_1063_p2 = ($signed(tmp_370_1_cast_cast_fu_1052_p1) + $signed(sum_V_0_2_cast_fu_1040_p1));

assign t_V_2_cast_fu_660_p1 = t_V_2_reg_333;

assign t_V_cast_fu_368_p1 = t_V_reg_322;

assign tmp3_fu_1167_p2 = (r_V_50_1_2_reg_1508 + sum_V_1_1_reg_1503);

assign tmp4_cast_fu_1171_p1 = $signed(tmp4_reg_1518);

assign tmp4_fu_1126_p2 = ($signed(r_V_50_2_1_fu_1104_p2) + $signed(tmp5_cast_fu_1122_p1));

assign tmp5_cast_fu_1122_p1 = $signed(tmp5_fu_1116_p2);

assign tmp5_fu_1116_p2 = (tmp_370_2_2_cast_cas_fu_1113_p1 + r_V_50_2_fu_1091_p2);

assign tmp6_fu_1132_p2 = (tmp_38_fu_1081_p2 + tmp_74_fu_1077_p1);

assign tmp7_fu_1188_p2 = (tmp_75_reg_1513 + tmp8_reg_1528);

assign tmp8_fu_1138_p2 = (src_kernel_win_0_va_23_reg_1480 + tmp_76_fu_1109_p1);

assign tmp_10_fu_460_p2 = (($signed(tmp_7_fu_434_p2) < $signed(11'd720)) ? 1'b1 : 1'b0);

assign tmp_13_fu_498_p2 = (($signed(p_p2_i497_i_fu_486_p3) < $signed(11'd720)) ? 1'b1 : 1'b0);

assign tmp_18_fu_712_p2 = (($signed(ImagLoc_x_fu_692_p2) < $signed(12'd1280)) ? 1'b1 : 1'b0);

assign tmp_18_not_fu_774_p2 = (tmp_18_fu_712_p2 ^ 1'd1);

assign tmp_1_i_i_fu_1233_p2 = (p_Result_s_fu_1180_p3 | overflow_fu_1219_p2);

assign tmp_20_fu_750_p2 = (($signed(p_p2_i_i_fu_738_p3) < $signed(12'd1280)) ? 1'b1 : 1'b0);

assign tmp_22_fu_817_p1 = $unsigned(col_assign_cast_fu_814_p1);

assign tmp_27_fu_584_p2 = (tmp_52_fu_430_p1 ^ 2'd2);

assign tmp_284_0_not_fu_390_p2 = (tmp_s_fu_384_p2 ^ 1'd1);

assign tmp_29_fu_608_p3 = ((tmp_56_fu_516_p3[0:0] === 1'b1) ? tmp_36_fu_600_p3 : tmp_27_fu_584_p2);

assign tmp_2_fu_412_p2 = ((t_V_reg_322 == 10'd1) ? 1'b1 : 1'b0);

assign tmp_31_fu_622_p2 = (2'd1 + tmp_52_fu_430_p1);

assign tmp_328_1_fu_418_p2 = ((t_V_reg_322 == 10'd0) ? 1'b1 : 1'b0);

assign tmp_33_fu_646_p3 = ((tmp_59_fu_542_p3[0:0] === 1'b1) ? tmp_37_fu_638_p3 : tmp_31_fu_622_p2);

assign tmp_369_0_1_cast_fu_344_p1 = $signed(p_kernel_val_0_V_1_read);

assign tmp_369_0_2_cast_fu_348_p1 = $signed(p_kernel_val_0_V_2_read);

assign tmp_369_1_2_cast_fu_356_p1 = p_kernel_val_1_V_2_read;

assign tmp_369_1_cast_fu_352_p1 = $signed(p_kernel_val_1_V_0_read);

assign tmp_369_2_1_cast_fu_364_p1 = p_kernel_val_2_V_1_read;

assign tmp_369_2_cast_fu_360_p1 = $signed(p_kernel_val_2_V_0_read);

assign tmp_36_fu_600_p3 = ((tmp_57_fu_524_p3[0:0] === 1'b1) ? tmp_62_fu_590_p2 : tmp_63_fu_596_p1);

assign tmp_370_1_cast_cast_fu_1052_p1 = r_V_50_1_fu_1047_p2;

assign tmp_370_2_2_cast_cas_fu_1113_p1 = src_kernel_win_0_va_23_reg_1480;

assign tmp_37_fu_638_p3 = ((tmp_60_fu_550_p3[0:0] === 1'b1) ? tmp_64_fu_628_p2 : tmp_65_fu_634_p1);

assign tmp_38_fu_1081_p2 = (tmp_73_fu_1060_p1 + tmp_72_fu_1056_p1);

assign tmp_39_fu_1197_p4 = {{p_Val2_s_fu_1174_p2[11:8]}};

assign tmp_3_fu_424_p2 = ((t_V_reg_322 > 10'd720) ? 1'b1 : 1'b0);

assign tmp_42_cast_fu_440_p2 = ($signed(2'd3) + $signed(tmp_52_fu_430_p1));

assign tmp_51_fu_396_p4 = {{t_V_reg_322[9:1]}};

assign tmp_52_fu_430_p1 = t_V_reg_322[1:0];

assign tmp_53_fu_446_p3 = tmp_7_fu_434_p2[32'd10];

assign tmp_54_fu_472_p3 = tmp_7_fu_434_p2[32'd10];

assign tmp_55_fu_494_p1 = p_p2_i497_i_fu_486_p3[1:0];

assign tmp_56_fu_516_p3 = p_assign_6_1_fu_510_p2[32'd10];

assign tmp_57_fu_524_p3 = p_assign_6_1_fu_510_p2[32'd10];

assign tmp_58_fu_532_p1 = t_V_reg_322[1:0];

assign tmp_59_fu_542_p3 = p_assign_6_2_fu_536_p2[32'd10];

assign tmp_60_fu_550_p3 = p_assign_6_2_fu_536_p2[32'd10];

assign tmp_61_fu_558_p1 = t_V_reg_322[1:0];

assign tmp_62_fu_590_p2 = ($signed(2'd2) - $signed(tmp_58_fu_532_p1));

assign tmp_63_fu_596_p1 = p_assign_6_1_fu_510_p2[1:0];

assign tmp_64_fu_628_p2 = (tmp_61_fu_558_p1 ^ 2'd3);

assign tmp_65_fu_634_p1 = p_assign_6_2_fu_536_p2[1:0];

assign tmp_66_fu_676_p4 = {{t_V_2_reg_333[10:1]}};

assign tmp_67_fu_698_p3 = ImagLoc_x_fu_692_p2[32'd11];

assign tmp_68_fu_724_p3 = ImagLoc_x_fu_692_p2[32'd11];

assign tmp_69_fu_800_p1 = x_fu_792_p3[1:0];

assign tmp_72_fu_1056_p1 = r_V_50_1_fu_1047_p2[7:0];

assign tmp_73_fu_1060_p1 = grp_fu_1254_p3[7:0];

assign tmp_74_fu_1077_p1 = r_V_50_1_2_fu_1072_p2[7:0];

assign tmp_75_fu_1096_p1 = r_V_50_2_fu_1091_p2[7:0];

assign tmp_76_fu_1109_p1 = r_V_50_2_1_fu_1104_p2[7:0];

assign tmp_7_fu_434_p2 = ($signed(11'd2047) + $signed(t_V_cast_fu_368_p1));

assign tmp_i_i_fu_1207_p2 = (p_Result_s_fu_1180_p3 ^ 1'd1);

assign tmp_s_fu_384_p2 = ((t_V_reg_322 < 10'd720) ? 1'b1 : 1'b0);

assign x_fu_792_p3 = ((sel_tmp8_fu_786_p2[0:0] === 1'b1) ? p_p2_i_i_cast_fu_746_p1 : sel_tmp_cast_fu_770_p1);

assign y_fu_570_p3 = ((or_cond_i496_i_fu_466_p2[0:0] === 1'b1) ? tmp_42_cast_fu_440_p2 : p_p2_i497_i_p_assign_8_fu_562_p3);

always @ (posedge ap_clk) begin
    tmp_369_1_2_cast_reg_1353[11:4] <= 8'b00000000;
    tmp_369_2_1_cast_reg_1363[10:3] <= 8'b00000000;
end

endmodule //Filter2D
